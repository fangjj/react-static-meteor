(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 13);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("react-static");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cacheProm = exports.loadFromPromiseCache = exports.cacheExport = exports.loadFromCache = exports.callForString = exports.createElement = exports.findExport = exports.resolveExport = exports.requireById = exports.tryRequire = exports.DefaultError = exports.DefaultLoading = exports.babelInterop = exports.isWebpack = exports.isServer = exports.isTest = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isTest = exports.isTest = "production" === 'test';
var isServer = exports.isServer = !(typeof window !== 'undefined' && window.document && window.document.createElement);

var isWebpack = exports.isWebpack = function isWebpack() {
  return typeof __webpack_require__ !== 'undefined';
};
var babelInterop = exports.babelInterop = function babelInterop(mod) {
  return mod && (typeof mod === 'undefined' ? 'undefined' : _typeof(mod)) === 'object' && mod.__esModule ? mod.default : mod;
};

var DefaultLoading = exports.DefaultLoading = function DefaultLoading() {
  return _react2.default.createElement(
    'div',
    null,
    'Loading...'
  );
};
var DefaultError = exports.DefaultError = function DefaultError(_ref) {
  var error = _ref.error;
  return _react2.default.createElement(
    'div',
    null,
    'Error: ',
    error && error.message
  );
};

var tryRequire = exports.tryRequire = function tryRequire(id) {
  try {
    return requireById(id);
  } catch (err) {
    // warn if there was an error while requiring the chunk during development
    // this can sometimes lead the server to render the loading component.
    if (false) {
      console.warn('chunk not available for synchronous require yet: ' + id + ': ' + err.message, err.stack);
    }
  }

  return null;
};

var requireById = exports.requireById = function requireById(id) {
  if (!isWebpack() && typeof id === 'string') {
    return module.require(id);
  }

  return __webpack_require__(id);
};

var resolveExport = exports.resolveExport = function resolveExport(mod, key, onLoad, chunkName, props, context, modCache) {
  var isSync = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;

  var exp = findExport(mod, key);
  if (onLoad && mod) {
    var _isServer = typeof window === 'undefined';
    var info = { isServer: _isServer, isSync: isSync };
    onLoad(mod, info, props, context);
  }
  if (chunkName && exp) cacheExport(exp, chunkName, props, modCache);
  return exp;
};

var findExport = exports.findExport = function findExport(mod, key) {
  if (typeof key === 'function') {
    return key(mod);
  } else if (key === null) {
    return mod;
  }

  return mod && (typeof mod === 'undefined' ? 'undefined' : _typeof(mod)) === 'object' && key ? mod[key] : babelInterop(mod);
};

var createElement = exports.createElement = function createElement(Component, props) {
  return _react2.default.isValidElement(Component) ? _react2.default.cloneElement(Component, props) : _react2.default.createElement(Component, props);
};

var callForString = exports.callForString = function callForString(strFun, props) {
  return typeof strFun === 'function' ? strFun(props) : strFun;
};

var loadFromCache = exports.loadFromCache = function loadFromCache(chunkName, props, modCache) {
  return !isServer && modCache[callForString(chunkName, props)];
};

var cacheExport = exports.cacheExport = function cacheExport(exp, chunkName, props, modCache) {
  return modCache[callForString(chunkName, props)] = exp;
};

var loadFromPromiseCache = exports.loadFromPromiseCache = function loadFromPromiseCache(chunkName, props, promisecache) {
  return promisecache[callForString(chunkName, props)];
};

var cacheProm = exports.cacheProm = function cacheProm(pr, chunkName, props, promisecache) {
  return promisecache[callForString(chunkName, props)] = pr;
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactStatic = __webpack_require__(1);

var _logo = __webpack_require__(26);

var _logo2 = _interopRequireDefault(_logo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _reactStatic.withSiteData)(function () {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      'h1',
      { style: { textAlign: 'center' } },
      'Welcome to'
    ),
    _react2.default.createElement('img', { src: _logo2.default, alt: '', style: { display: 'block', margin: '0 auto' } })
  );
});
//

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _meteor = __webpack_require__(7);

var _reactMeteorData = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Person = function Person(props) {
  var user = props.user,
      connected = props.connected;

  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      'p',
      null,
      'Loaded successfully:'
    ),
    _react2.default.createElement(
      'p',
      null,
      'user: ',
      user && user.toString()
    ),
    _react2.default.createElement(
      'p',
      null,
      'connected: ',
      connected.toString()
    )
  );
};

var PersonWithData = (0, _reactMeteorData.withTracker)(function () {
  return {
    user: _meteor.Meteor.user(),
    connected: _meteor.Meteor.status().connected
  };
})(Person);

// /////////////////////////////////////////////////////////
// Actual container
var About = function About() {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      'h1',
      null,
      'This is what we\'re all about.'
    ),
    _react2.default.createElement(
      'p',
      null,
      'React, static sites, performance, speed. It\'s the stuff that makes us tick.'
    ),
    _react2.default.createElement(
      'h2',
      null,
      'Here is a person loaded from graphql:'
    ),
    _react2.default.createElement(PersonWithData, null)
  );
};

exports.default = About;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = require("meteor/meteor");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = require("meteor/react-meteor-data");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _meteor = __webpack_require__(7);

var _mongo = __webpack_require__(27);

var _reactMeteorData = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Lists = new _mongo.Mongo.Collection('Lists');

var TestList = function (_Component) {
  _inherits(TestList, _Component);

  function TestList() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TestList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TestList.__proto__ || Object.getPrototypeOf(TestList)).call.apply(_ref, [this].concat(args))), _this), _this.onInsertList = function () {
      _meteor.Meteor.call('lists.insert', { locale: 'en' }, function (err, ret) {
        console.log(err, ret);
      });
    }, _this.onDeleteList = function (listId) {
      _meteor.Meteor.call('lists.remove', { listId: listId }, function (err, ret) {
        console.log(err, ret);
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(TestList, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          loading = _props.loading,
          lists = _props.lists;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'button',
          { onClick: this.onInsertList },
          'insert list '
        ),
        lists.map(function (list) {
          return _react2.default.createElement(
            'div',
            { onClick: function onClick() {
                return _this2.onDeleteList(list._id);
              }, key: list._id },
            list.name
          );
        })
      );
    }
  }]);

  return TestList;
}(_react.Component);

var ListWithData = (0, _reactMeteorData.withTracker)(function () {
  var publicHandle = _meteor.Meteor.subscribe('lists.public');
  var privateHandle = _meteor.Meteor.subscribe('lists.private');
  console.log('appcontainer remove console.log');
  return {
    loading: !(publicHandle.ready() && privateHandle.ready()),
    lists: Lists.find({ $or: [{ userId: { $exists: false } }, { userId: _meteor.Meteor.userId() }] }).fetch()
  };
})(TestList);

// /////////////////////////////////////////////////////////
// Actual container
var Test = function Test() {
  return _react2.default.createElement(
    'div',
    null,
    'This Is Blog',
    _react2.default.createElement(ListWithData, null)
  );
};

exports.default = Test;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactStatic = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//

exports.default = (0, _reactStatic.withRouteData)(function (_ref) {
  var posts = _ref.posts;
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      'h1',
      null,
      'It\'s blog time.'
    ),
    _react2.default.createElement('br', null),
    'All Posts:',
    _react2.default.createElement(
      'ul',
      null,
      posts.map(function (post) {
        return _react2.default.createElement(
          'li',
          { key: post.id },
          _react2.default.createElement(
            _reactStatic.Link,
            { to: '/blog/post/' + post.id + '/' },
            post.title
          )
        );
      })
    )
  );
});

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactStatic = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//

exports.default = (0, _reactStatic.withRouteData)(function (_ref) {
  var post = _ref.post;
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      _reactStatic.Link,
      { to: '/blog/' },
      '<',
      ' Back'
    ),
    _react2.default.createElement('br', null),
    _react2.default.createElement(
      'h3',
      null,
      post.title
    ),
    _react2.default.createElement(
      'p',
      null,
      post.body
    )
  );
});

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//

exports.default = function () {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      'h1',
      null,
      '404 - Oh no\'s! We couldn\'t find that page :('
    )
  );
};

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(14);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _App = __webpack_require__(15);

var _App2 = _interopRequireDefault(_App);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Export your top level component as JSX (for static rendering)
exports.default = _App2.default;

// Render your app


// Your top level component
// import 'meteor-client';

if (typeof document !== 'undefined') {
	var k = __webpack_require__(30);

	// console.log(__meteor_runtime_config__, Date.now());
	var renderMethod =  false ? _reactDom2.default.render : _reactDom2.default.hydrate || _reactDom2.default.render;
	var render = function render(Comp) {
		renderMethod(_react2.default.createElement(Comp, null), document.getElementById('root'));
	};
	if (typeof Package !== 'undefined') {
		// Render!
		render(_App2.default);
	}
}

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = require("react-dom");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactStatic = __webpack_require__(1);

var _reactHotLoader = __webpack_require__(16);

var _reactStaticRoutes = __webpack_require__(17);

var _reactStaticRoutes2 = _interopRequireDefault(_reactStaticRoutes);

__webpack_require__(28);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
//


var App = function (_Component) {
  _inherits(App, _Component);

  function App() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, App);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = App.__proto__ || Object.getPrototypeOf(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(App, [{
    key: 'componentDidMount',
    value: function componentDidMount() {}
  }, {
    key: 'render',
    value: function render() {

      return _react2.default.createElement(
        _reactStatic.Router,
        null,
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'nav',
            null,
            _react2.default.createElement(
              _reactStatic.Link,
              { exact: true, to: '/' },
              'Home'
            ),
            _react2.default.createElement(
              _reactStatic.Link,
              { to: '/about' },
              'About'
            ),
            _react2.default.createElement(
              _reactStatic.Link,
              { to: '/blog' },
              'Blog'
            ),
            _react2.default.createElement(
              _reactStatic.Link,
              { to: '/list' },
              'List'
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'content' },
            _react2.default.createElement(_reactStaticRoutes2.default, null)
          )
        )
      );
    }
  }]);

  return App;
}(_react.Component);

exports.default = (0, _reactHotLoader.hot)(module)(App);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = require("react-hot-loader");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__dirname) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _path2 = __webpack_require__(18);

var _path3 = _interopRequireDefault(_path2);

var _importCss2 = __webpack_require__(19);

var _importCss3 = _interopRequireDefault(_importCss2);

var _universalImport2 = __webpack_require__(20);

var _universalImport3 = _interopRequireDefault(_universalImport2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactRouterDom = __webpack_require__(21);

var _reactUniversalComponent = __webpack_require__(22);

var _reactUniversalComponent2 = _interopRequireDefault(_reactUniversalComponent);

var _reactStatic = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

(0, _reactUniversalComponent.setHasBabelPlugin)();

var universalOptions = {
  loading: function loading() {
    return null;
  },
  error: function error(props) {
    console.error(props.error);
    return _react2.default.createElement(
      'div',
      null,
      'An error occurred loading this page\'s template. More information is available in the console.'
    );
  }
};

var t_0 = (0, _reactUniversalComponent2.default)((0, _universalImport3.default)({
  id: '../src/containers/Home',
  file: '/Users/jm/Documents/jim/meteor/meteor-package/meteor-client/react-static/dist/react-static-routes.js',
  load: function load() {
    return Promise.all([new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, 5)), (0, _importCss3.default)('src/containers/Home', {
      disableWarnings: true
    })]).then(function (proms) {
      return proms[0];
    });
  },
  path: function path() {
    return _path3.default.join(__dirname, '../src/containers/Home');
  },
  resolve: function resolve() {
    return /*require.resolve*/(5);
  },
  chunkName: function chunkName() {
    return 'src/containers/Home';
  }
}), universalOptions);
var t_1 = (0, _reactUniversalComponent2.default)((0, _universalImport3.default)({
  id: '../src/containers/About',
  file: '/Users/jm/Documents/jim/meteor/meteor-package/meteor-client/react-static/dist/react-static-routes.js',
  load: function load() {
    return Promise.all([new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, 6)), (0, _importCss3.default)('src/containers/About', {
      disableWarnings: true
    })]).then(function (proms) {
      return proms[0];
    });
  },
  path: function path() {
    return _path3.default.join(__dirname, '../src/containers/About');
  },
  resolve: function resolve() {
    return /*require.resolve*/(6);
  },
  chunkName: function chunkName() {
    return 'src/containers/About';
  }
}), universalOptions);
var t_2 = (0, _reactUniversalComponent2.default)((0, _universalImport3.default)({
  id: '../src/containers/List',
  file: '/Users/jm/Documents/jim/meteor/meteor-package/meteor-client/react-static/dist/react-static-routes.js',
  load: function load() {
    return Promise.all([new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, 9)), (0, _importCss3.default)('src/containers/List', {
      disableWarnings: true
    })]).then(function (proms) {
      return proms[0];
    });
  },
  path: function path() {
    return _path3.default.join(__dirname, '../src/containers/List');
  },
  resolve: function resolve() {
    return /*require.resolve*/(9);
  },
  chunkName: function chunkName() {
    return 'src/containers/List';
  }
}), universalOptions);
var t_3 = (0, _reactUniversalComponent2.default)((0, _universalImport3.default)({
  id: '../src/containers/Blog',
  file: '/Users/jm/Documents/jim/meteor/meteor-package/meteor-client/react-static/dist/react-static-routes.js',
  load: function load() {
    return Promise.all([new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, 10)), (0, _importCss3.default)('src/containers/Blog', {
      disableWarnings: true
    })]).then(function (proms) {
      return proms[0];
    });
  },
  path: function path() {
    return _path3.default.join(__dirname, '../src/containers/Blog');
  },
  resolve: function resolve() {
    return /*require.resolve*/(10);
  },
  chunkName: function chunkName() {
    return 'src/containers/Blog';
  }
}), universalOptions);
var t_4 = (0, _reactUniversalComponent2.default)((0, _universalImport3.default)({
  id: '../src/containers/Post',
  file: '/Users/jm/Documents/jim/meteor/meteor-package/meteor-client/react-static/dist/react-static-routes.js',
  load: function load() {
    return Promise.all([new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, 11)), (0, _importCss3.default)('src/containers/Post', {
      disableWarnings: true
    })]).then(function (proms) {
      return proms[0];
    });
  },
  path: function path() {
    return _path3.default.join(__dirname, '../src/containers/Post');
  },
  resolve: function resolve() {
    return /*require.resolve*/(11);
  },
  chunkName: function chunkName() {
    return 'src/containers/Post';
  }
}), universalOptions);
var t_5 = (0, _reactUniversalComponent2.default)((0, _universalImport3.default)({
  id: '../src/containers/404',
  file: '/Users/jm/Documents/jim/meteor/meteor-package/meteor-client/react-static/dist/react-static-routes.js',
  load: function load() {
    return Promise.all([new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, 12)), (0, _importCss3.default)('src/containers/404', {
      disableWarnings: true
    })]).then(function (proms) {
      return proms[0];
    });
  },
  path: function path() {
    return _path3.default.join(__dirname, '../src/containers/404');
  },
  resolve: function resolve() {
    return /*require.resolve*/(12);
  },
  chunkName: function chunkName() {
    return 'src/containers/404';
  }
}), universalOptions);

// Template Map
global.componentsByTemplateID = global.componentsByTemplateID || [t_0, t_1, t_2, t_3, t_4, t_5];

// Template Tree
global.templateIDsByPath = global.templateIDsByPath || {
  '404': 5

  // Get template for given path
};var getComponentForPath = function getComponentForPath(path) {
  path = (0, _reactStatic.cleanPath)(path);
  return global.componentsByTemplateID[global.templateIDsByPath[path]];
};

global.reactStaticGetComponentForPath = getComponentForPath;
global.reactStaticRegisterTemplateIDForPath = function (path, id) {
  global.templateIDsByPath[path] = id;
};

var Routes = function (_Component) {
  _inherits(Routes, _Component);

  function Routes() {
    _classCallCheck(this, Routes);

    return _possibleConstructorReturn(this, (Routes.__proto__ || Object.getPrototypeOf(Routes)).apply(this, arguments));
  }

  _createClass(Routes, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          Comp = _props.component,
          render = _props.render,
          children = _props.children;


      var getFullComponentForPath = function getFullComponentForPath(path) {
        var Comp = getComponentForPath(path);
        var is404 = path === '404';
        if (!Comp) {
          is404 = true;
          Comp = getComponentForPath('404');
        }
        return function (newProps) {
          return Comp ? _react2.default.createElement(Comp, _extends({}, newProps, is404 ? { is404: true } : {})) : null;
        };
      };

      var renderProps = {
        componentsByTemplateID: global.componentsByTemplateID,
        templateIDsByPath: global.templateIDsByPath,
        getComponentForPath: getFullComponentForPath
      };

      if (Comp) {
        return _react2.default.createElement(Comp, renderProps);
      }

      if (render || children) {
        return (render || children)(renderProps);
      }

      // This is the default auto-routing renderer
      return _react2.default.createElement(_reactRouterDom.Route, { path: '*', render: function render(props) {
          var Comp = getFullComponentForPath(props.location.pathname);
          // If Comp is used as a component here, it triggers React to re-mount the entire
          // component tree underneath during reconciliation, losing all internal state.
          // By unwrapping it here we keep the real, static component exposed directly to React.
          return Comp && Comp(_extends({}, props, { key: props.location.pathname }));
        } });
    }
  }]);

  return Routes;
}(_react.Component);

exports.default = Routes;
/* WEBPACK VAR INJECTION */}.call(exports, "/"))

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = require("babel-plugin-universal-import/importCss");

/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = require("babel-plugin-universal-import/universalImport");

/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = require("react-router-dom");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.setHasBabelPlugin = exports.ReportChunks = exports.MODULE_IDS = exports.CHUNK_NAMES = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _requireUniversalModule = __webpack_require__(23);

Object.defineProperty(exports, 'CHUNK_NAMES', {
  enumerable: true,
  get: function get() {
    return _requireUniversalModule.CHUNK_NAMES;
  }
});
Object.defineProperty(exports, 'MODULE_IDS', {
  enumerable: true,
  get: function get() {
    return _requireUniversalModule.MODULE_IDS;
  }
});

var _reportChunks = __webpack_require__(24);

Object.defineProperty(exports, 'ReportChunks', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_reportChunks).default;
  }
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(4);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _hoistNonReactStatics = __webpack_require__(25);

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _requireUniversalModule2 = _interopRequireDefault(_requireUniversalModule);

var _utils = __webpack_require__(3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var hasBabelPlugin = false;

var isHMR = function isHMR() {
  return (
    // $FlowIgnore
    module.hot && (module.hot.data || module.hot.status() === 'apply')
  );
};

var setHasBabelPlugin = exports.setHasBabelPlugin = function setHasBabelPlugin() {
  hasBabelPlugin = true;
};

function universal(component) {
  var _class, _temp;

  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var _opts$loading = opts.loading,
      Loading = _opts$loading === undefined ? _utils.DefaultLoading : _opts$loading,
      _opts$error = opts.error,
      Err = _opts$error === undefined ? _utils.DefaultError : _opts$error,
      _opts$minDelay = opts.minDelay,
      minDelay = _opts$minDelay === undefined ? 0 : _opts$minDelay,
      _opts$alwaysDelay = opts.alwaysDelay,
      alwaysDelay = _opts$alwaysDelay === undefined ? false : _opts$alwaysDelay,
      _opts$testBabelPlugin = opts.testBabelPlugin,
      testBabelPlugin = _opts$testBabelPlugin === undefined ? false : _opts$testBabelPlugin,
      _opts$loadingTransiti = opts.loadingTransition,
      loadingTransition = _opts$loadingTransiti === undefined ? true : _opts$loadingTransiti,
      options = _objectWithoutProperties(opts, ['loading', 'error', 'minDelay', 'alwaysDelay', 'testBabelPlugin', 'loadingTransition']);

  var isDynamic = hasBabelPlugin || testBabelPlugin;
  options.isDynamic = isDynamic;
  options.modCache = {};
  options.promCache = {};

  return _temp = _class = function (_React$Component) {
    _inherits(UniversalComponent, _React$Component);

    _createClass(UniversalComponent, null, [{
      key: 'preload',

      /* eslint-enable react/sort-comp */

      /* eslint-disable react/sort-comp */
      value: function preload(props) {
        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        props = props || {};

        var _req = (0, _requireUniversalModule2.default)(component, options, props),
            requireAsync = _req.requireAsync,
            requireSync = _req.requireSync;

        var Component = void 0;

        try {
          Component = requireSync(props, context);
        } catch (error) {
          return Promise.reject(error);
        }

        return Promise.resolve().then(function () {
          if (Component) return Component;
          return requireAsync(props, context);
        }).then(function (Component) {
          (0, _hoistNonReactStatics2.default)(UniversalComponent, Component, { preload: true });
          return Component;
        });
      }
    }]);

    function UniversalComponent(props, context) {
      _classCallCheck(this, UniversalComponent);

      var _this = _possibleConstructorReturn(this, (UniversalComponent.__proto__ || Object.getPrototypeOf(UniversalComponent)).call(this, props, context));

      _this.update = function (state) {
        var isMount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var isSync = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var isServer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

        if (!_this._mounted) return;
        if (!state.error) state.error = null;

        _this.handleAfter(state, isMount, isSync, isServer);
      };

      _this.state = { error: null };
      return _this;
    }

    _createClass(UniversalComponent, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._mounted = true;

        var _req2 = (0, _requireUniversalModule2.default)(component, options, this.props),
            addModule = _req2.addModule,
            requireSync = _req2.requireSync,
            requireAsync = _req2.requireAsync,
            asyncOnly = _req2.asyncOnly;

        var Component = void 0;

        try {
          Component = requireSync(this.props, this.context);
        } catch (error) {
          return this.update({ error: error });
        }

        this._asyncOnly = asyncOnly;
        var chunkName = addModule(this.props); // record the module for SSR flushing :)

        if (this.context.report) {
          this.context.report(chunkName);
        }

        if (Component || _utils.isServer) {
          this.handleBefore(true, true, _utils.isServer);
          this.update({ Component: Component }, true, true, _utils.isServer);
          return;
        }

        this.handleBefore(true, false);
        this.requireAsync(requireAsync, this.props, true);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._mounted = false;
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var _this2 = this;

        if (isDynamic || this._asyncOnly) {
          var _req3 = (0, _requireUniversalModule2.default)(component, options, nextProps, this.props),
              requireSync = _req3.requireSync,
              requireAsync = _req3.requireAsync,
              shouldUpdate = _req3.shouldUpdate;

          if (shouldUpdate(nextProps, this.props)) {
            var Component = void 0;

            try {
              Component = requireSync(nextProps, this.context);
            } catch (error) {
              return this.update({ error: error });
            }

            this.handleBefore(false, !!Component);

            if (!Component) {
              return this.requireAsync(requireAsync, nextProps);
            }

            var state = { Component: Component };

            if (alwaysDelay) {
              if (loadingTransition) this.update({ Component: null }); // display `loading` during componentWillReceiveProps
              setTimeout(function () {
                return _this2.update(state, false, true);
              }, minDelay);
              return;
            }

            this.update(state, false, true);
          } else if (isHMR()) {
            var _Component = requireSync(nextProps, this.context);
            this.setState({ Component: function Component() {
                return null;
              } }); // HMR /w Redux and HOCs can be finicky, so we
            setTimeout(function () {
              return _this2.setState({ Component: _Component });
            }); // toggle components to insure updates occur
          }
        }
      }
    }, {
      key: 'requireAsync',
      value: function requireAsync(_requireAsync, props, isMount) {
        var _this3 = this;

        if (this.state.Component && loadingTransition) {
          this.update({ Component: null }); // display `loading` during componentWillReceiveProps
        }

        var time = new Date();

        _requireAsync(props, this.context).then(function (Component) {
          var state = { Component: Component };

          var timeLapsed = new Date() - time;
          if (timeLapsed < minDelay) {
            var extraDelay = minDelay - timeLapsed;
            return setTimeout(function () {
              return _this3.update(state, isMount);
            }, extraDelay);
          }

          _this3.update(state, isMount);
        }).catch(function (error) {
          return _this3.update({ error: error });
        });
      }
    }, {
      key: 'handleBefore',
      value: function handleBefore(isMount, isSync) {
        var isServer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        if (this.props.onBefore) {
          var onBefore = this.props.onBefore;

          var info = { isMount: isMount, isSync: isSync, isServer: isServer };
          onBefore(info);
        }
      }
    }, {
      key: 'handleAfter',
      value: function handleAfter(state, isMount, isSync, isServer) {
        var Component = state.Component,
            error = state.error;


        if (Component && !error) {
          (0, _hoistNonReactStatics2.default)(UniversalComponent, Component, { preload: true });

          if (this.props.onAfter) {
            var onAfter = this.props.onAfter;

            var info = { isMount: isMount, isSync: isSync, isServer: isServer };
            onAfter(info, Component);
          }
        } else if (error && this.props.onError) {
          this.props.onError(error);
        }

        this.setState(state);
      }
    }, {
      key: 'render',
      value: function render() {
        var _state = this.state,
            error = _state.error,
            Component = _state.Component;

        var _props = this.props,
            isLoading = _props.isLoading,
            userError = _props.error,
            props = _objectWithoutProperties(_props, ['isLoading', 'error']);

        // user-provided props (e.g. for data-fetching loading):


        if (isLoading) {
          return (0, _utils.createElement)(Loading, props);
        } else if (userError) {
          return (0, _utils.createElement)(Err, _extends({}, props, { error: userError }));
        } else if (error) {
          return (0, _utils.createElement)(Err, _extends({}, props, { error: error }));
        } else if (Component) {
          // primary usage (for async import loading + errors):
          return (0, _utils.createElement)(Component, props);
        }

        return (0, _utils.createElement)(Loading, props);
      }
    }]);

    return UniversalComponent;
  }(_react2.default.Component), _class.contextTypes = {
    store: _propTypes2.default.object,
    report: _propTypes2.default.func
  }, _temp;
}
exports.default = universal;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clearChunks = exports.flushModuleIds = exports.flushChunkNames = exports.MODULE_IDS = exports.CHUNK_NAMES = undefined;
exports.default = requireUniversalModule;

var _utils = __webpack_require__(3);

var CHUNK_NAMES = exports.CHUNK_NAMES = new Set();
var MODULE_IDS = exports.MODULE_IDS = new Set();

function requireUniversalModule(universalConfig, options, props, prevProps) {
  var key = options.key,
      _options$timeout = options.timeout,
      timeout = _options$timeout === undefined ? 15000 : _options$timeout,
      onLoad = options.onLoad,
      onError = options.onError,
      isDynamic = options.isDynamic,
      modCache = options.modCache,
      promCache = options.promCache;


  var config = getConfig(isDynamic, universalConfig, options, props);
  var chunkName = config.chunkName,
      path = config.path,
      resolve = config.resolve,
      load = config.load;

  var asyncOnly = !path && !resolve || typeof chunkName === 'function';

  var requireSync = function requireSync(props, context) {
    var exp = (0, _utils.loadFromCache)(chunkName, props, modCache);

    if (!exp) {
      var mod = void 0;

      if (!(0, _utils.isWebpack)() && path) {
        var modulePath = (0, _utils.callForString)(path, props) || '';
        mod = (0, _utils.tryRequire)(modulePath);
      } else if ((0, _utils.isWebpack)() && resolve) {
        var weakId = (0, _utils.callForString)(resolve, props);

        if (__webpack_require__.m[weakId]) {
          mod = (0, _utils.tryRequire)(weakId);
        }
      }

      if (mod) {
        exp = (0, _utils.resolveExport)(mod, key, onLoad, chunkName, props, context, modCache, true);
      }
    }

    return exp;
  };

  var requireAsync = function requireAsync(props, context) {
    var exp = (0, _utils.loadFromCache)(chunkName, props, modCache);
    if (exp) return Promise.resolve(exp);

    var cachedPromise = (0, _utils.loadFromPromiseCache)(chunkName, props, promCache);
    if (cachedPromise) return cachedPromise;

    var prom = new Promise(function (res, rej) {
      var reject = function reject(error) {
        error = error || new Error('timeout exceeded');
        clearTimeout(timer);
        if (onError) {
          var _isServer = typeof window === 'undefined';
          var info = { isServer: _isServer };
          onError(error, info);
        }
        rej(error);
      };

      // const timer = timeout && setTimeout(reject, timeout)
      var timer = timeout && setTimeout(reject, timeout);

      var resolve = function resolve(mod) {
        clearTimeout(timer);

        var exp = (0, _utils.resolveExport)(mod, key, onLoad, chunkName, props, context, modCache);
        if (exp) return res(exp);

        reject(new Error('export not found'));
      };

      var request = load(props, { resolve: resolve, reject: reject });

      // if load doesn't return a promise, it must call resolveImport
      // itself. Most common is the promise implementation below.
      if (!request || typeof request.then !== 'function') return;
      request.then(resolve).catch(reject);
    });

    (0, _utils.cacheProm)(prom, chunkName, props, promCache);
    return prom;
  };

  var addModule = function addModule(props) {
    if (_utils.isServer || _utils.isTest) {
      if (chunkName) {
        var name = (0, _utils.callForString)(chunkName, props);
        if (name) CHUNK_NAMES.add(name);
        if (!_utils.isTest) return name; // makes tests way smaller to run both kinds
      }

      if ((0, _utils.isWebpack)()) {
        var weakId = (0, _utils.callForString)(resolve, props);
        if (weakId) MODULE_IDS.add(weakId);
        return weakId;
      }

      if (!(0, _utils.isWebpack)()) {
        var modulePath = (0, _utils.callForString)(path, props);
        if (modulePath) MODULE_IDS.add(modulePath);
        return modulePath;
      }
    }
  };

  var shouldUpdate = function shouldUpdate(next, prev) {
    var cacheKey = (0, _utils.callForString)(chunkName, next);

    var config = getConfig(isDynamic, universalConfig, options, prev);
    var prevCacheKey = (0, _utils.callForString)(config.chunkName, prev);

    return cacheKey !== prevCacheKey;
  };

  return {
    requireSync: requireSync,
    requireAsync: requireAsync,
    addModule: addModule,
    shouldUpdate: shouldUpdate,
    asyncOnly: asyncOnly
  };
}

var flushChunkNames = exports.flushChunkNames = function flushChunkNames() {
  var chunks = Array.from(CHUNK_NAMES);
  CHUNK_NAMES.clear();
  return chunks;
};

var flushModuleIds = exports.flushModuleIds = function flushModuleIds() {
  var ids = Array.from(MODULE_IDS);
  MODULE_IDS.clear();
  return ids;
};

var clearChunks = exports.clearChunks = function clearChunks() {
  CHUNK_NAMES.clear();
  MODULE_IDS.clear();
};

var getConfig = function getConfig(isDynamic, universalConfig, options, props) {
  if (isDynamic) {
    return typeof universalConfig === 'function' ? universalConfig(props) : universalConfig;
  }

  var load = typeof universalConfig === 'function' ? universalConfig : // $FlowIssue
  function () {
    return universalConfig;
  };

  return {
    file: 'default',
    id: options.id || 'default',
    chunkName: options.chunkName || 'default',
    resolve: options.resolve || '',
    path: options.path || '',
    load: load
  };
};

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(4);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReportChunks = function (_React$Component) {
  _inherits(ReportChunks, _React$Component);

  function ReportChunks() {
    _classCallCheck(this, ReportChunks);

    return _possibleConstructorReturn(this, (ReportChunks.__proto__ || Object.getPrototypeOf(ReportChunks)).apply(this, arguments));
  }

  _createClass(ReportChunks, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        report: this.props.report
      };
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.Children.only(this.props.children);
    }
  }]);

  return ReportChunks;
}(_react2.default.Component);

ReportChunks.propTypes = {
  report: _propTypes2.default.func.isRequired
};
ReportChunks.childContextTypes = {
  report: _propTypes2.default.func.isRequired
};
exports.default = ReportChunks;

/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = require("hoist-non-react-statics");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/logo.01c47621.png";

/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = require("meteor/mongo");

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(29)(false);
// imports


// module
exports.push([module.i, "body{font-family:HelveticaNeue-Light,Helvetica Neue Light,Helvetica Neue,Helvetica,Arial,Lucida Grande,sans-serif;font-weight:300;font-size:16px;margin:0;padding:0}a{text-decoration:none;color:#108db8;font-weight:700}img{max-width:100%}nav{width:100%;background:#108db8}nav a{color:#fff;display:inline-block}.content,nav a{padding:1rem}", ""]);

// exports


/***/ }),
/* 29 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;__meteor_runtime_config__ = {
  "meteorEnv": {},
  "DDP_DEFAULT_CONNECTION_URL": "https://todo.kadira.cn"
};

//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Package-scope variables */
  var global, meteorEnv, Meteor;

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/global.js                                                                            //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Export a reliable global object for all Meteor code.
    global = this;

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/client_environment.js                                                                //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    var config = __meteor_runtime_config__;
    meteorEnv = config.meteorEnv;

    /**
     * @summary The Meteor namespace
     * @namespace Meteor
     */
    Meteor = {
      /**
       * @summary Boolean variable.  True if running in production environment.
       * @locus Anywhere
       * @static
       * @type {Boolean}
       */
      isProduction: meteorEnv.NODE_ENV === "production",

      /**
       * @summary Boolean variable.  True if running in development environment.
       * @locus Anywhere
       * @static
       * @type {Boolean}
       */
      isDevelopment: meteorEnv.NODE_ENV !== "production",

      /**
       * @summary Boolean variable.  True if running in client environment.
       * @locus Anywhere
       * @static
       * @type {Boolean}
       */
      isClient: true,

      /**
       * @summary Boolean variable.  True if running in server environment.
       * @locus Anywhere
       * @static
       * @type {Boolean}
       */
      isServer: false,

      /**
       * @summary Boolean variable.  True if running in Cordova environment.
       * @locus Anywhere
       * @static
       * @type {Boolean}
       */
      isCordova: false,

      /**
       * @summary Boolean variable. True if running in a "modern" JS
       *          environment, as determined by the `modern` package.
       * @locus Anywhere
       * @static
       * @type {Boolean}
       */
      isModern: config.isModern
    };

    if (config.PUBLIC_SETTINGS) {
      /**
       * @summary `Meteor.settings` contains deployment-specific configuration options. You can initialize settings by passing the `--settings` option (which takes the name of a file containing JSON data) to `meteor run` or `meteor deploy`. When running your server directly (e.g. from a bundle), you instead specify settings by putting the JSON directly into the `METEOR_SETTINGS` environment variable. If the settings object contains a key named `public`, then `Meteor.settings.public` will be available on the client as well as the server.  All other properties of `Meteor.settings` are only defined on the server.  You can rely on `Meteor.settings` and `Meteor.settings.public` being defined objects (not undefined) on both client and server even if there are no settings specified.  Changes to `Meteor.settings.public` at runtime will be picked up by new client connections.
       * @locus Anywhere
       * @type {Object}
       */
      Meteor.settings = {
        "public": config.PUBLIC_SETTINGS
      };
    }

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/define-package.js                                                                    //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    function PackageRegistry() {
      this._promiseInfoMap = Object.create(null);
    }

    var PRp = PackageRegistry.prototype;

    // Set global.Package[name] = pkg || {}. If additional arguments are
    // supplied, their keys will be copied into pkg if not already present.
    // This method is defined on the prototype of global.Package so that it
    // will not be included in Object.keys(Package).
    PRp._define = function definePackage(name, pkg) {
      pkg = pkg || {};

      var argc = arguments.length;
      for (var i = 2; i < argc; ++i) {
        var arg = arguments[i];
        for (var s in arg) {
          if (!(s in pkg)) {
            pkg[s] = arg[s];
          }
        }
      }

      this[name] = pkg;

      var info = this._promiseInfoMap[name];
      if (info) {
        info.resolve(pkg);
      }

      return pkg;
    };

    PRp._has = function has(name) {
      return Object.prototype.hasOwnProperty.call(this, name);
    };

    // Returns a Promise that will resolve to the exports of the named
    // package, or be rejected if the package is not installed.
    PRp._promise = function promise(name) {
      var self = this;
      var info = self._promiseInfoMap[name];

      if (!info) {
        info = self._promiseInfoMap[name] = {};
        info.promise = new Promise(function (resolve, reject) {
          info.resolve = resolve;
          if (self._has(name)) {
            resolve(self[name]);
          } else {
            Meteor.startup(function () {
              if (!self._has(name)) {
                reject(new Error("Package " + name + " not installed"));
              }
            });
          }
        });
      }

      return info.promise;
    };

    // Initialize the Package namespace used by all Meteor packages.
    global.Package = new PackageRegistry();

    if (true) {
      // This code is also used by meteor/tools/isobuild/bundler.js.
      exports.PackageRegistry = PackageRegistry;
    }

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/helpers.js                                                                           //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    if (Meteor.isServer) var Future = Npm.require('fibers/future');

    if (typeof __meteor_runtime_config__ === 'object' && __meteor_runtime_config__.meteorRelease) {
      /**
       * @summary `Meteor.release` is a string containing the name of the [release](#meteorupdate) with which the project was built (for example, `"1.2.3"`). It is `undefined` if the project was built using a git checkout of Meteor.
       * @locus Anywhere
       * @type {String}
       */
      Meteor.release = __meteor_runtime_config__.meteorRelease;
    }

    // XXX find a better home for these? Ideally they would be _.get,
    // _.ensure, _.delete..

    // _get(a,b,c,d) returns a[b][c][d], or else undefined if a[b] or
    // a[b][c] doesn't exist.
    //
    Meteor._get = function (obj /*, arguments */) {
      for (var i = 1; i < arguments.length; i++) {
        if (!(arguments[i] in obj)) return undefined;
        obj = obj[arguments[i]];
      }
      return obj;
    };

    // _ensure(a,b,c,d) ensures that a[b][c][d] exists. If it does not,
    // it is created and set to {}. Either way, it is returned.
    //
    Meteor._ensure = function (obj /*, arguments */) {
      for (var i = 1; i < arguments.length; i++) {
        var key = arguments[i];
        if (!(key in obj)) obj[key] = {};
        obj = obj[key];
      }

      return obj;
    };

    // _delete(a, b, c, d) deletes a[b][c][d], then a[b][c] unless it
    // isn't empty, then a[b] unless it isn't empty.
    //
    Meteor._delete = function (obj /*, arguments */) {
      var stack = [obj];
      var leaf = true;
      for (var i = 1; i < arguments.length - 1; i++) {
        var key = arguments[i];
        if (!(key in obj)) {
          leaf = false;
          break;
        }
        obj = obj[key];
        if (typeof obj !== "object") break;
        stack.push(obj);
      }

      for (var i = stack.length - 1; i >= 0; i--) {
        var key = arguments[i + 1];

        if (leaf) leaf = false;else for (var other in stack[i][key]) return; // not empty -- we're done

        delete stack[i][key];
      }
    };

    // wrapAsync can wrap any function that takes some number of arguments that
    // can't be undefined, followed by some optional arguments, where the callback
    // is the last optional argument.
    // e.g. fs.readFile(pathname, [callback]),
    // fs.open(pathname, flags, [mode], [callback])
    // For maximum effectiveness and least confusion, wrapAsync should be used on
    // functions where the callback is the only argument of type Function.

    /**
     * @memberOf Meteor
     * @summary Wrap a function that takes a callback function as its final parameter. The signature of the callback of the wrapped function should be `function(error, result){}`. On the server, the wrapped function can be used either synchronously (without passing a callback) or asynchronously (when a callback is passed). On the client, a callback is always required; errors will be logged if there is no callback. If a callback is provided, the environment captured when the original function was called will be restored in the callback.
     * @locus Anywhere
     * @param {Function} func A function that takes a callback as its final parameter
     * @param {Object} [context] Optional `this` object against which the original function will be invoked
     */
    Meteor.wrapAsync = function (fn, context) {
      return function () /* arguments */{
        var self = context || this;
        var newArgs = Array.prototype.slice.call(arguments);
        var callback;

        for (var i = newArgs.length - 1; i >= 0; --i) {
          var arg = newArgs[i];
          var type = typeof arg;
          if (type !== "undefined") {
            if (type === "function") {
              callback = arg;
            }
            break;
          }
        }

        if (!callback) {
          if (Meteor.isClient) {
            callback = logErr;
          } else {
            var fut = new Future();
            callback = fut.resolver();
          }
          ++i; // Insert the callback just after arg.
        }

        newArgs[i] = Meteor.bindEnvironment(callback);
        var result = fn.apply(self, newArgs);
        return fut ? fut.wait() : result;
      };
    };

    // Sets child's prototype to a new object whose prototype is parent's
    // prototype. Used as:
    //   Meteor._inherits(ClassB, ClassA).
    //   _.extend(ClassB.prototype, { ... })
    // Inspired by CoffeeScript's `extend` and Google Closure's `goog.inherits`.
    var hasOwn = Object.prototype.hasOwnProperty;
    Meteor._inherits = function (Child, Parent) {
      // copy Parent static properties
      for (var key in Parent) {
        // make sure we only copy hasOwnProperty properties vs. prototype
        // properties
        if (hasOwn.call(Parent, key)) {
          Child[key] = Parent[key];
        }
      }

      // a middle member of prototype chain: takes the prototype from the Parent
      var Middle = function () {
        this.constructor = Child;
      };
      Middle.prototype = Parent.prototype;
      Child.prototype = new Middle();
      Child.__super__ = Parent.prototype;
      return Child;
    };

    var warnedAboutWrapAsync = false;

    /**
     * @deprecated in 0.9.3
     */
    Meteor._wrapAsync = function (fn, context) {
      if (!warnedAboutWrapAsync) {
        Meteor._debug("Meteor._wrapAsync has been renamed to Meteor.wrapAsync");
        warnedAboutWrapAsync = true;
      }
      return Meteor.wrapAsync.apply(Meteor, arguments);
    };

    function logErr(err) {
      if (err) {
        return Meteor._debug("Exception in callback of async function", err);
      }
    }

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    var global = this;

    // IE 10, Node >= 9.1

    function useSetImmediate() {
      if (!global.setImmediate) return null;else {
        var setImmediate = function (fn) {
          global.setImmediate(fn);
        };
        setImmediate.implementation = 'setImmediate';
        return setImmediate;
      }
    }

    // Android 2.3.6, Chrome 26, Firefox 20, IE 8-9, iOS 5.1.1 Safari

    function usePostMessage() {
      // The test against `importScripts` prevents this implementation
      // from being installed inside a web worker, where
      // `global.postMessage` means something completely different and
      // can't be used for this purpose.

      if (!global.postMessage || global.importScripts) {
        return null;
      }

      // Avoid synchronous post message implementations.

      var postMessageIsAsynchronous = true;
      var oldOnMessage = global.onmessage;
      global.onmessage = function () {
        postMessageIsAsynchronous = false;
      };
      global.postMessage("", "*");
      global.onmessage = oldOnMessage;

      if (!postMessageIsAsynchronous) return null;

      var funcIndex = 0;
      var funcs = {};

      // Installs an event handler on `global` for the `message` event: see
      // * https://developer.mozilla.org/en/DOM/window.postMessage
      // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

      // XXX use Random.id() here?
      var MESSAGE_PREFIX = "Meteor._setImmediate." + Math.random() + '.';

      function isStringAndStartsWith(string, putativeStart) {
        return typeof string === "string" && string.substring(0, putativeStart.length) === putativeStart;
      }

      function onGlobalMessage(event) {
        // This will catch all incoming messages (even from other
        // windows!), so we need to try reasonably hard to avoid letting
        // anyone else trick us into firing off. We test the origin is
        // still this window, and that a (randomly generated)
        // unpredictable identifying prefix is present.
        if (event.source === global && isStringAndStartsWith(event.data, MESSAGE_PREFIX)) {
          var index = event.data.substring(MESSAGE_PREFIX.length);
          try {
            if (funcs[index]) funcs[index]();
          } finally {
            delete funcs[index];
          }
        }
      }

      if (global.addEventListener) {
        global.addEventListener("message", onGlobalMessage, false);
      } else {
        global.attachEvent("onmessage", onGlobalMessage);
      }

      var setImmediate = function (fn) {
        // Make `global` post a message to itself with the handle and
        // identifying prefix, thus asynchronously invoking our
        // onGlobalMessage listener above.
        ++funcIndex;
        funcs[funcIndex] = fn;
        global.postMessage(MESSAGE_PREFIX + funcIndex, "*");
      };
      setImmediate.implementation = 'postMessage';
      return setImmediate;
    }

    function useTimeout() {
      var setImmediate = function (fn) {
        global.setTimeout(fn, 0);
      };
      setImmediate.implementation = 'setTimeout';
      return setImmediate;
    }

    Meteor._setImmediate = useSetImmediate() || usePostMessage() || useTimeout();

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/timers.js                                                                            //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    function withoutInvocation(f) {
      if (Package.ddp) {
        var DDP = Package.ddp.DDP;
        var CurrentInvocation = DDP._CurrentMethodInvocation ||
        // For backwards compatibility, as explained in this issue:
        // https://github.com/meteor/meteor/issues/8947
        DDP._CurrentInvocation;

        var invocation = CurrentInvocation.get();
        if (invocation && invocation.isSimulation) {
          throw new Error("Can't set timers inside simulations");
        }

        return function () {
          CurrentInvocation.withValue(null, f);
        };
      } else {
        return f;
      }
    }

    function bindAndCatch(context, f) {
      return Meteor.bindEnvironment(withoutInvocation(f), context);
    }

    // Meteor.setTimeout and Meteor.setInterval callbacks scheduled
    // inside a server method are not part of the method invocation and
    // should clear out the CurrentMethodInvocation environment variable.

    /**
     * @memberOf Meteor
     * @summary Call a function in the future after waiting for a specified delay.
     * @locus Anywhere
     * @param {Function} func The function to run
     * @param {Number} delay Number of milliseconds to wait before calling function
     */
    Meteor.setTimeout = function (f, duration) {
      return setTimeout(bindAndCatch("setTimeout callback", f), duration);
    };

    /**
     * @memberOf Meteor
     * @summary Call a function repeatedly, with a time delay between calls.
     * @locus Anywhere
     * @param {Function} func The function to run
     * @param {Number} delay Number of milliseconds to wait between each function call.
     */
    Meteor.setInterval = function (f, duration) {
      return setInterval(bindAndCatch("setInterval callback", f), duration);
    };

    /**
     * @memberOf Meteor
     * @summary Cancel a repeating function call scheduled by `Meteor.setInterval`.
     * @locus Anywhere
     * @param {Object} id The handle returned by `Meteor.setInterval`
     */
    Meteor.clearInterval = function (x) {
      return clearInterval(x);
    };

    /**
     * @memberOf Meteor
     * @summary Cancel a function call scheduled by `Meteor.setTimeout`.
     * @locus Anywhere
     * @param {Object} id The handle returned by `Meteor.setTimeout`
     */
    Meteor.clearTimeout = function (x) {
      return clearTimeout(x);
    };

    // XXX consider making this guarantee ordering of defer'd callbacks, like
    // Tracker.afterFlush or Node's nextTick (in practice). Then tests can do:
    //    callSomethingThatDefersSomeWork();
    //    Meteor.defer(expect(somethingThatValidatesThatTheWorkHappened));

    /**
     * @memberOf Meteor
     * @summary Defer execution of a function to run asynchronously in the background (similar to `Meteor.setTimeout(func, 0)`.
     * @locus Anywhere
     * @param {Function} func The function to run
     */
    Meteor.defer = function (f) {
      Meteor._setImmediate(bindAndCatch("defer callback", f));
    };

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/errors.js                                                                            //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Makes an error subclass which properly contains a stack trace in most
    // environments. constructor can set fields on `this` (and should probably set
    // `message`, which is what gets displayed at the top of a stack trace).
    //
    Meteor.makeErrorType = function (name, constructor) {
      var errorClass = function () /*arguments*/{
        // Ensure we get a proper stack trace in most Javascript environments
        if (Error.captureStackTrace) {
          // V8 environments (Chrome and Node.js)
          Error.captureStackTrace(this, errorClass);
        } else {
          // Borrow the .stack property of a native Error object.
          this.stack = new Error().stack;
        }
        // Safari magically works.

        constructor.apply(this, arguments);

        this.errorType = name;
      };

      Meteor._inherits(errorClass, Error);

      return errorClass;
    };

    // This should probably be in the livedata package, but we don't want
    // to require you to use the livedata package to get it. Eventually we
    // should probably rename it to DDP.Error and put it back in the
    // 'livedata' package (which we should rename to 'ddp' also.)
    //
    // Note: The DDP server assumes that Meteor.Error EJSON-serializes as an object
    // containing 'error' and optionally 'reason' and 'details'.
    // The DDP client manually puts these into Meteor.Error objects. (We don't use
    // EJSON.addType here because the type is determined by location in the
    // protocol, not text on the wire.)

    /**
     * @summary This class represents a symbolic error thrown by a method.
     * @locus Anywhere
     * @class
     * @param {String} error A string code uniquely identifying this kind of error.
     * This string should be used by callers of the method to determine the
     * appropriate action to take, instead of attempting to parse the reason
     * or details fields. For example:
     *
     * ```
     * // on the server, pick a code unique to this error
     * // the reason field should be a useful debug message
     * throw new Meteor.Error("logged-out",
     *   "The user must be logged in to post a comment.");
     *
     * // on the client
     * Meteor.call("methodName", function (error) {
     *   // identify the error
     *   if (error && error.error === "logged-out") {
     *     // show a nice error message
     *     Session.set("errorMessage", "Please log in to post a comment.");
     *   }
     * });
     * ```
     *
     * For legacy reasons, some built-in Meteor functions such as `check` throw
     * errors with a number in this field.
     *
     * @param {String} [reason] Optional.  A short human-readable summary of the
     * error, like 'Not Found'.
     * @param {String} [details] Optional.  Additional information about the error,
     * like a textual stack trace.
     */
    Meteor.Error = Meteor.makeErrorType("Meteor.Error", function (error, reason, details) {
      var self = this;

      // Newer versions of DDP use this property to signify that an error
      // can be sent back and reconstructed on the calling client.
      self.isClientSafe = true;

      // String code uniquely identifying this kind of error.
      self.error = error;

      // Optional: A short human-readable summary of the error. Not
      // intended to be shown to end users, just developers. ("Not Found",
      // "Internal Server Error")
      self.reason = reason;

      // Optional: Additional information about the error, say for
      // debugging. It might be a (textual) stack trace if the server is
      // willing to provide one. The corresponding thing in HTTP would be
      // the body of a 404 or 500 response. (The difference is that we
      // never expect this to be shown to end users, only developers, so
      // it doesn't need to be pretty.)
      self.details = details;

      // This is what gets displayed at the top of a stack trace. Current
      // format is "[404]" (if no reason is set) or "File not found [404]"
      if (self.reason) self.message = self.reason + ' [' + self.error + ']';else self.message = '[' + self.error + ']';
    });

    // Meteor.Error is basically data and is sent over DDP, so you should be able to
    // properly EJSON-clone it. This is especially important because if a
    // Meteor.Error is thrown through a Future, the error, reason, and details
    // properties become non-enumerable so a standard Object clone won't preserve
    // them and they will be lost from DDP.
    Meteor.Error.prototype.clone = function () {
      var self = this;
      return new Meteor.Error(self.error, self.reason, self.details);
    };

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/fiber_stubs_client.js                                                                //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // This file is a partial analogue to fiber_helpers.js, which allows the client
    // to use a queue too, and also to call noYieldsAllowed.

    // The client has no ability to yield, so noYieldsAllowed is a noop.
    //
    Meteor._noYieldsAllowed = function (f) {
      return f();
    };

    // An even simpler queue of tasks than the fiber-enabled one.  This one just
    // runs all the tasks when you call runTask or flush, synchronously.
    //
    Meteor._SynchronousQueue = function () {
      var self = this;
      self._tasks = [];
      self._running = false;
      self._runTimeout = null;
    };

    var SQp = Meteor._SynchronousQueue.prototype;

    SQp.runTask = function (task) {
      var self = this;
      if (!self.safeToRunTask()) throw new Error("Could not synchronously run a task from a running task");
      self._tasks.push(task);
      var tasks = self._tasks;
      self._tasks = [];
      self._running = true;

      if (self._runTimeout) {
        // Since we're going to drain the queue, we can forget about the timeout
        // which tries to run it.  (But if one of our tasks queues something else,
        // the timeout will be correctly re-created.)
        clearTimeout(self._runTimeout);
        self._runTimeout = null;
      }

      try {
        while (tasks.length > 0) {
          var t = tasks.shift();
          try {
            t();
          } catch (e) {
            if (tasks.length === 0) {
              // this was the last task, that is, the one we're calling runTask
              // for.
              throw e;
            }
            Meteor._debug("Exception in queued task", e);
          }
        }
      } finally {
        self._running = false;
      }
    };

    SQp.queueTask = function (task) {
      var self = this;
      self._tasks.push(task);
      // Intentionally not using Meteor.setTimeout, because it doesn't like runing
      // in stubs for now.
      if (!self._runTimeout) {
        self._runTimeout = setTimeout(function () {
          return self.flush.apply(self, arguments);
        }, 0);
      }
    };

    SQp.flush = function () {
      var self = this;
      self.runTask(function () {});
    };

    SQp.drain = function () {
      var self = this;
      if (!self.safeToRunTask()) {
        return;
      }
      while (self._tasks.length > 0) {
        self.flush();
      }
    };

    SQp.safeToRunTask = function () {
      var self = this;
      return !self._running;
    };

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/startup_client.js                                                                    //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    var callbackQueue = [];
    var isLoadingCompleted = false;
    var isReady = false;

    // Keeps track of how many events to wait for in addition to loading completing,
    // before we're considered ready.
    var readyHoldsCount = 0;

    var holdReady = function () {
      readyHoldsCount++;
    };

    var releaseReadyHold = function () {
      readyHoldsCount--;
      maybeReady();
    };

    var maybeReady = function () {
      if (isReady || !isLoadingCompleted || readyHoldsCount > 0) return;

      isReady = true;

      // Run startup callbacks
      while (callbackQueue.length) callbackQueue.shift()();

      if (Meteor.isCordova) {
        // Notify the WebAppLocalServer plugin that startup was completed successfully,
        // so we can roll back faulty versions if this doesn't happen
        WebAppLocalServer.startupDidComplete();
      }
    };

    var loadingCompleted = function () {
      if (!isLoadingCompleted) {
        isLoadingCompleted = true;
        maybeReady();
      }
    };

    if (Meteor.isCordova) {
      holdReady();
      document.addEventListener('deviceready', releaseReadyHold, false);
    }

    if (document.readyState === 'complete' || document.readyState === 'loaded') {
      // Loading has completed,
      // but allow other scripts the opportunity to hold ready
      window.setTimeout(loadingCompleted);
    } else {
      // Attach event listeners to wait for loading to complete
      if (document.addEventListener) {
        document.addEventListener('DOMContentLoaded', loadingCompleted, false);
        window.addEventListener('load', loadingCompleted, false);
      } else {
        // Use IE event model for < IE9
        document.attachEvent('onreadystatechange', function () {
          if (document.readyState === "complete") {
            loadingCompleted();
          }
        });
        window.attachEvent('load', loadingCompleted);
      }
    }

    /**
     * @summary Run code when a client or a server starts.
     * @locus Anywhere
     * @param {Function} func A function to run on startup.
     */
    Meteor.startup = function (callback) {
      // Fix for < IE9, see http://javascript.nwbox.com/IEContentLoaded/
      var doScroll = !document.addEventListener && document.documentElement.doScroll;

      if (!doScroll || window !== top) {
        if (isReady) callback();else callbackQueue.push(callback);
      } else {
        try {
          doScroll('left');
        } catch (error) {
          setTimeout(function () {
            Meteor.startup(callback);
          }, 50);
          return;
        };
        callback();
      }
    };

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/debug.js                                                                             //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    var suppress = 0;

    // replacement for console.log. This is a temporary API. We should
    // provide a real logging API soon (possibly just a polyfill for
    // console?)
    //
    // NOTE: this is used on the server to print the warning about
    // having autopublish enabled when you probably meant to turn it
    // off. it's not really the proper use of something called
    // _debug. the intent is for this message to go to the terminal and
    // be very visible. if you change _debug to go someplace else, etc,
    // please fix the autopublish code to do something reasonable.
    //
    Meteor._debug = function () /* arguments */{
      if (suppress) {
        suppress--;
        return;
      }
      if (typeof console !== 'undefined' && typeof console.log !== 'undefined') {
        if (arguments.length == 0) {
          // IE Companion breaks otherwise
          // IE10 PP4 requires at least one argument
          console.log('');
        } else {
          // IE doesn't have console.log.apply, it's not a real Object.
          // http://stackoverflow.com/questions/5538972/console-log-apply-not-working-in-ie9
          // http://patik.com/blog/complete-cross-browser-console-log/
          if (typeof console.log.apply === "function") {
            // Most browsers

            // Chrome and Safari only hyperlink URLs to source files in first argument of
            // console.log, so try to call it with one argument if possible.
            // Approach taken here: If all arguments are strings, join them on space.
            // See https://github.com/meteor/meteor/pull/732#issuecomment-13975991
            var allArgumentsOfTypeString = true;
            for (var i = 0; i < arguments.length; i++) if (typeof arguments[i] !== "string") allArgumentsOfTypeString = false;

            if (allArgumentsOfTypeString) console.log.apply(console, [Array.prototype.join.call(arguments, " ")]);else console.log.apply(console, arguments);
          } else if (typeof Function.prototype.bind === "function") {
            // IE9
            var log = Function.prototype.bind.call(console.log, console);
            log.apply(console, arguments);
          } else {
            // IE8
            Function.prototype.call.call(console.log, console, Array.prototype.slice.call(arguments));
          }
        }
      }
    };

    // Suppress the next 'count' Meteor._debug messsages. Use this to
    // stop tests from spamming the console.
    //
    Meteor._suppress_log = function (count) {
      suppress += count;
    };

    Meteor._suppressed_log_expected = function () {
      return suppress !== 0;
    };

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/string_utils.js                                                                      //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Like Perl's quotemeta: quotes all regexp metacharacters.
    // Code taken from
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
    Meteor._escapeRegExp = function (string) {
      return String(string).replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    };

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/test_environment.js                                                                  //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    var TEST_METADATA_STR;
    if (Meteor.isClient) {
      TEST_METADATA_STR = meteorEnv.TEST_METADATA;
    } else {
      TEST_METADATA_STR = process.env.TEST_METADATA;
    }

    var TEST_METADATA = JSON.parse(TEST_METADATA_STR || "{}");
    var testDriverPackageName = TEST_METADATA.driverPackage;

    // Note that if we are in test-packages mode neither of these will be set,
    // but we will have a test driver package
    Meteor.isTest = !!TEST_METADATA.isTest;
    Meteor.isAppTest = !!TEST_METADATA.isAppTest;
    Meteor.isPackageTest = !!testDriverPackageName && !Meteor.isTest && !Meteor.isAppTest;

    if (typeof testDriverPackageName === "string") {
      Meteor.startup(function () {
        var testDriverPackage = Package[testDriverPackageName];
        if (!testDriverPackage) {
          throw new Error("Can't find test driver package: " + testDriverPackageName);
        }

        // On the client, the test driver *must* define `runTests`
        if (Meteor.isClient) {
          if (typeof testDriverPackage.runTests !== "function") {
            throw new Error("Test driver package " + testDriverPackageName + " missing `runTests` export");
          }
          testDriverPackage.runTests();
        } else {
          // The server can optionally define `start`
          if (typeof testDriverPackage.start === "function") {
            testDriverPackage.start();
          }
        }
      });
    }

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/dynamics_browser.js                                                                  //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Simple implementation of dynamic scoping, for use in browsers

    var nextSlot = 0;
    var currentValues = [];

    Meteor.EnvironmentVariable = function () {
      this.slot = nextSlot++;
    };

    var EVp = Meteor.EnvironmentVariable.prototype;

    EVp.get = function () {
      return currentValues[this.slot];
    };

    EVp.getOrNullIfOutsideFiber = function () {
      return this.get();
    };

    EVp.withValue = function (value, func) {
      var saved = currentValues[this.slot];
      try {
        currentValues[this.slot] = value;
        var ret = func();
      } finally {
        currentValues[this.slot] = saved;
      }
      return ret;
    };

    Meteor.bindEnvironment = function (func, onException, _this) {
      // needed in order to be able to create closures inside func and
      // have the closed variables not change back to their original
      // values
      var boundValues = currentValues.slice();

      if (!onException || typeof onException === 'string') {
        var description = onException || "callback of async function";
        onException = function (error) {
          Meteor._debug("Exception in " + description + ":", error);
        };
      }

      return function () /* arguments */{
        var savedValues = currentValues;
        try {
          currentValues = boundValues;
          var ret = func.apply(_this, arguments);
        } catch (e) {
          // note: callback-hook currently relies on the fact that if onException
          // throws in the browser, the wrapped call throws.
          onException(e);
        } finally {
          currentValues = savedValues;
        }
        return ret;
      };
    };

    Meteor._nodeCodeMustBeInFiber = function () {
      // no-op on browser
    };

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                      //
    // packages/meteor/url_common.js                                                                        //
    //                                                                                                      //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    /**
     * @summary Generate an absolute URL pointing to the application. The server reads from the `ROOT_URL` environment variable to determine where it is running. This is taken care of automatically for apps deployed to Galaxy, but must be provided when using `meteor build`.
     * @locus Anywhere
     * @param {String} [path] A path to append to the root URL. Do not include a leading "`/`".
     * @param {Object} [options]
     * @param {Boolean} options.secure Create an HTTPS URL.
     * @param {Boolean} options.replaceLocalhost Replace localhost with 127.0.0.1. Useful for services that don't recognize localhost as a domain name.
     * @param {String} options.rootUrl Override the default ROOT_URL from the server environment. For example: "`http://foo.example.com`"
     */
    Meteor.absoluteUrl = function (path, options) {
      // path is optional
      if (!options && typeof path === 'object') {
        options = path;
        path = undefined;
      }
      // merge options with defaults
      options = Object.assign({}, Meteor.absoluteUrl.defaultOptions, options || {});

      var url = options.rootUrl;
      if (!url) throw new Error("Must pass options.rootUrl or set ROOT_URL in the server environment");

      if (!/^http[s]?:\/\//i.test(url)) // url starts with 'http://' or 'https://'
        url = 'http://' + url; // we will later fix to https if options.secure is set

      if (!url.endsWith("/")) {
        url += "/";
      }

      if (path) {
        // join url and path with a / separator
        while (path.startsWith("/")) {
          path = path.slice(1);
        }
        url += path;
      }

      // turn http to https if secure option is set, and we're not talking
      // to localhost.
      if (options.secure && /^http:/.test(url) && // url starts with 'http:'
      !/http:\/\/localhost[:\/]/.test(url) && // doesn't match localhost
      !/http:\/\/127\.0\.0\.1[:\/]/.test(url)) // or 127.0.0.1
        url = url.replace(/^http:/, 'https:');

      if (options.replaceLocalhost) url = url.replace(/^http:\/\/localhost([:\/].*)/, 'http://127.0.0.1$1');

      return url;
    };

    // allow later packages to override default options
    var defaultOptions = Meteor.absoluteUrl.defaultOptions = {};

    // available only in a browser environment
    var location = typeof window === "object" && window.location;

    if (typeof __meteor_runtime_config__ === "object" && __meteor_runtime_config__.ROOT_URL) {
      defaultOptions.rootUrl = __meteor_runtime_config__.ROOT_URL;
    } else if (location && location.protocol && location.host) {
      defaultOptions.rootUrl = location.protocol + "//" + location.host;
    }

    // Make absolute URLs use HTTPS by default if the current window.location
    // uses HTTPS. Since this is just a default, it can be overridden by
    // passing { secure: false } if necessary.
    if (location && location.protocol === "https:") {
      defaultOptions.secure = true;
    }

    Meteor._relativeToSiteRootUrl = function (link) {
      if (typeof __meteor_runtime_config__ === "object" && link.substr(0, 1) === "/") link = (__meteor_runtime_config__.ROOT_URL_PATH_PREFIX || "") + link;
      return link;
    };

    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  /* Exports */
  Package._define("meteor", {
    Meteor: Meteor,
    global: global,
    meteorEnv: meteorEnv
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;

  /* Package-scope variables */
  var makeInstaller, meteorInstall;

  ///////////////////////////////////////////////////////////////////////////////
  //                                                                           //
  // packages/modules-runtime/.npm/package/node_modules/install/install.js     //
  // This file is in bare mode and is not in its own closure.                  //
  //                                                                           //
  ///////////////////////////////////////////////////////////////////////////////
  //
  makeInstaller = function (options) {

    options = options || {};

    // These file extensions will be appended to required module identifiers
    // if they do not exactly match an installed module.
    var defaultExtensions = options.extensions || [".js", ".json"];

    // If defined, the options.fallback function will be called when no
    // installed module is found for a required module identifier. Often
    // options.fallback will be implemented in terms of the native Node
    // require function, which has the ability to load binary modules.
    var fallback = options.fallback;

    // List of fields to look for in package.json files to determine the
    // main entry module of the package. The first field listed here whose
    // value is a string will be used to resolve the entry module.
    var mainFields = options.mainFields || (
    // If options.mainFields is absent and options.browser is truthy,
    // package resolution will prefer the "browser" field of package.json
    // files to the "main" field. Note that this only supports
    // string-valued "browser" fields for now, though in the future it
    // might make sense to support the object version, a la browserify.
    options.browser ? ["browser", "main"] : ["main"]);

    var hasOwn = {}.hasOwnProperty;
    function strictHasOwn(obj, key) {
      return isObject(obj) && isString(key) && hasOwn.call(obj, key);
    }

    // Cache for looking up File objects given absolute module identifiers.
    // Invariants:
    //   filesByModuleId[module.id] === fileAppendId(root, module.id)
    //   filesByModuleId[module.id].module === module
    var filesByModuleId = {};

    // The file object representing the root directory of the installed
    // module tree.
    var root = new File("/", new File("/.."));
    var rootRequire = makeRequire(root);

    // Merges the given tree of directories and module factory functions
    // into the tree of installed modules and returns a require function
    // that behaves as if called from a module in the root directory.
    function install(tree, options) {
      if (isObject(tree)) {
        fileMergeContents(root, tree, options);
      }
      return rootRequire;
    }

    // Replace this function to enable Module.prototype.prefetch.
    install.fetch = function (ids) {
      throw new Error("fetch not implemented");
    };

    // This constructor will be used to instantiate the module objects
    // passed to module factory functions (i.e. the third argument after
    // require and exports), and is exposed as install.Module in case the
    // caller of makeInstaller wishes to modify Module.prototype.
    function Module(id) {
      this.id = id;

      // The Node implementation of module.children unfortunately includes
      // only those child modules that were imported for the first time by
      // this parent module (i.e., child.parent === this).
      this.children = [];

      // This object is an install.js extension that includes all child
      // modules imported by this module, even if this module is not the
      // first to import them.
      this.childrenById = {};
    }

    // Used to keep module.prefetch promise resolutions well-ordered.
    var lastPrefetchPromise;

    // May be shared by multiple sequential calls to module.prefetch.
    // Initialized to {} only when necessary.
    var missing;

    Module.prototype.prefetch = function (id) {
      var _module = this;
      var parentFile = getOwn(filesByModuleId, _module.id);

      lastPrefetchPromise = lastPrefetchPromise || Promise.resolve();
      var previousPromise = lastPrefetchPromise;

      function walk(_module2) {
        var file = getOwn(filesByModuleId, _module2.id);
        if (fileIsDynamic(file) && !file.pending) {
          file.pending = true;
          missing = missing || {};

          // These are the data that will be exposed to the install.fetch
          // callback, so it's worth documenting each item with a comment.
          missing[_module2.id] = {
            // The CommonJS module object that will be exposed to this
            // dynamic module when it is evaluated. Note that install.fetch
            // could decide to populate module.exports directly, instead of
            // fetching anything. In that case, install.fetch should omit
            // this module from the tree that it produces.
            module: file.module,
            // List of module identifier strings imported by this module.
            // Note that the missing object already contains all available
            // dependencies (including transitive dependencies), so
            // install.fetch should not need to traverse these dependencies
            // in most cases; however, they may be useful for other reasons.
            // Though the strings are unique, note that two different
            // strings could resolve to the same module.
            deps: Object.keys(file.deps),
            // The options (if any) that were passed as the second argument
            // to the install(tree, options) function when this stub was
            // first registered. Typically contains options.extensions, but
            // could contain any information appropriate for the entire tree
            // as originally installed. These options will be automatically
            // inherited by the newly fetched modules, so install.fetch
            // should not need to modify them.
            options: file.options,
            // Any stub data included in the array notation from the
            // original entry for this dynamic module. Typically contains
            // "main" and/or "browser" fields for package.json files, and is
            // otherwise undefined.
            stub: file.stub
          };

          each(file.deps, function (parentId, id) {
            fileResolve(file, id);
          });

          each(_module2.childrenById, walk);
        }
      }

      return lastPrefetchPromise = new Promise(function (resolve) {
        var absChildId = _module.resolve(id);
        each(_module.childrenById, walk);
        resolve(absChildId);
      }).then(function (absChildId) {
        // Grab the current missing object and fetch its contents.
        var toBeFetched = missing;
        missing = null;

        return Promise.resolve(
        // The install.fetch function takes an object mapping missing
        // dynamic module identifiers to options objects, and should
        // return a Promise that resolves to a module tree that can be
        // installed. As an optimization, if there were no missing dynamic
        // modules, then we can skip calling install.fetch entirely.
        toBeFetched && install.fetch(toBeFetched)).then(function (tree) {
          function both() {
            install(tree);
            return absChildId;
          }

          // Although we want multiple install.fetch calls to run in
          // parallel, it is important that the promises returned by
          // module.prefetch are resolved in the same order as the original
          // calls to module.prefetch, because previous fetches may include
          // modules assumed to exist by more recent module.prefetch calls.
          // Whether previousPromise was resolved or rejected, carry on with
          // the installation regardless.
          return previousPromise.then(both, both);
        });
      });
    };

    install.Module = Module;

    function getOwn(obj, key) {
      return strictHasOwn(obj, key) && obj[key];
    }

    function isObject(value) {
      return value !== null && typeof value === "object";
    }

    function isFunction(value) {
      return typeof value === "function";
    }

    function isString(value) {
      return typeof value === "string";
    }

    function makeMissingError(id) {
      return new Error("Cannot find module '" + id + "'");
    }

    Module.prototype.resolve = function (id) {
      var file = fileResolve(filesByModuleId[this.id], id);
      if (file) return file.module.id;
      var error = makeMissingError(id);
      if (fallback && isFunction(fallback.resolve)) {
        return fallback.resolve(id, this.id, error);
      }
      throw error;
    };

    Module.prototype.require = function require(id) {
      var result = fileResolve(filesByModuleId[this.id], id);
      if (result) {
        return fileEvaluate(result, this);
      }

      var error = makeMissingError(id);

      if (isFunction(fallback)) {
        return fallback(id, // The missing module identifier.
        this.id, // ID of the parent module.
        error // The error we would have thrown.
        );
      }

      throw error;
    };

    function makeRequire(file) {
      var _module3 = file.module;

      function _require(id) {
        return _module3.require(id);
      }

      _require.extensions = fileGetExtensions(file).slice(0);

      _require.resolve = function resolve(id) {
        return _module3.resolve(id);
      };

      return _require;
    }

    // File objects represent either directories or modules that have been
    // installed. When a `File` respresents a directory, its `.contents`
    // property is an object containing the names of the files (or
    // directories) that it contains. When a `File` represents a module, its
    // `.contents` property is a function that can be invoked with the
    // appropriate `(require, exports, module)` arguments to evaluate the
    // module. If the `.contents` property is a string, that string will be
    // resolved as a module identifier, and the exports of the resulting
    // module will provide the exports of the original file. The `.parent`
    // property of a File is either a directory `File` or `null`. Note that
    // a child may claim another `File` as its parent even if the parent
    // does not have an entry for that child in its `.contents` object.
    // This is important for implementing anonymous files, and preventing
    // child modules from using `../relative/identifier` syntax to examine
    // unrelated modules.
    function File(moduleId, parent) {
      var file = this;

      // Link to the parent file.
      file.parent = parent = parent || null;

      // The module object for this File, which will eventually boast an
      // .exports property when/if the file is evaluated.
      file.module = new Module(moduleId);
      filesByModuleId[moduleId] = file;

      // The .contents of the file can be either (1) an object, if the file
      // represents a directory containing other files; (2) a factory
      // function, if the file represents a module that can be imported; (3)
      // a string, if the file is an alias for another file; or (4) null, if
      // the file's contents are not (yet) available.
      file.contents = null;

      // Set of module identifiers imported by this module. Note that this
      // set is not necessarily complete, so don't rely on it unless you
      // know what you're doing.
      file.deps = {};
    }

    function fileEvaluate(file, parentModule) {
      var _module4 = file.module;
      if (!strictHasOwn(_module4, "exports")) {
        var contents = file.contents;
        if (!contents) {
          // If this file was installed with array notation, and the array
          // contained one or more objects but no functions, then the combined
          // properties of the objects are treated as a temporary stub for
          // file.module.exports. This is particularly important for partial
          // package.json modules, so that the resolution logic can know the
          // value of the "main" and/or "browser" fields, at least, even if
          // the rest of the package.json file is not (yet) available.
          if (file.stub) {
            return file.stub;
          }

          throw makeMissingError(_module4.id);
        }

        if (parentModule) {
          _module4.parent = parentModule;
          var children = parentModule.children;
          if (Array.isArray(children)) {
            children.push(_module4);
          }
        }

        contents(makeRequire(file),
        // If the file had a .stub, reuse the same object for exports.
        _module4.exports = file.stub || {}, _module4, file.module.id, file.parent.module.id);

        _module4.loaded = true;
      }

      // The module.runModuleSetters method will be deprecated in favor of
      // just module.runSetters: https://github.com/benjamn/reify/pull/160
      var runSetters = _module4.runSetters || _module4.runModuleSetters;
      if (isFunction(runSetters)) {
        runSetters.call(_module4);
      }

      return _module4.exports;
    }

    function fileIsDirectory(file) {
      return file && isObject(file.contents);
    }

    function fileIsDynamic(file) {
      return file && file.contents === null;
    }

    function fileMergeContents(file, contents, options) {
      if (Array.isArray(contents)) {
        contents.forEach(function (item) {
          if (isString(item)) {
            file.deps[item] = file.module.id;
          } else if (isFunction(item)) {
            contents = item;
          } else if (isObject(item)) {
            file.stub = file.stub || {};
            each(item, function (value, key) {
              file.stub[key] = value;
            });
          }
        });

        if (!isFunction(contents)) {
          // If the array did not contain a function, merge nothing.
          contents = null;
        }
      } else if (!isFunction(contents) && !isString(contents) && !isObject(contents)) {
        // If contents is neither an array nor a function nor a string nor
        // an object, just give up and merge nothing.
        contents = null;
      }

      if (contents) {
        file.contents = file.contents || (isObject(contents) ? {} : contents);
        if (isObject(contents) && fileIsDirectory(file)) {
          each(contents, function (value, key) {
            if (key === "..") {
              child = file.parent;
            } else {
              var child = getOwn(file.contents, key);

              if (!child) {
                child = file.contents[key] = new File(file.module.id.replace(/\/*$/, "/") + key, file);

                child.options = options;
              }
            }

            fileMergeContents(child, value, options);
          });
        }
      }
    }

    function each(obj, callback, context) {
      Object.keys(obj).forEach(function (key) {
        callback.call(this, obj[key], key);
      }, context);
    }

    function fileGetExtensions(file) {
      return file.options && file.options.extensions || defaultExtensions;
    }

    function fileAppendIdPart(file, part, extensions) {
      // Always append relative to a directory.
      while (file && !fileIsDirectory(file)) {
        file = file.parent;
      }

      if (!file || !part || part === ".") {
        return file;
      }

      if (part === "..") {
        return file.parent;
      }

      var exactChild = getOwn(file.contents, part);

      // Only consider multiple file extensions if this part is the last
      // part of a module identifier and not equal to `.` or `..`, and there
      // was no exact match or the exact match was a directory.
      if (extensions && (!exactChild || fileIsDirectory(exactChild))) {
        for (var e = 0; e < extensions.length; ++e) {
          var child = getOwn(file.contents, part + extensions[e]);
          if (child && !fileIsDirectory(child)) {
            return child;
          }
        }
      }

      return exactChild;
    }

    function fileAppendId(file, id, extensions) {
      var parts = id.split("/");

      // Use `Array.prototype.every` to terminate iteration early if
      // `fileAppendIdPart` returns a falsy value.
      parts.every(function (part, i) {
        return file = i < parts.length - 1 ? fileAppendIdPart(file, part) : fileAppendIdPart(file, part, extensions);
      });

      return file;
    }

    function recordChild(parentModule, childFile) {
      var childModule = childFile && childFile.module;
      if (parentModule && childModule) {
        parentModule.childrenById[childModule.id] = childModule;
      }
    }

    function fileResolve(file, id, parentModule, seenDirFiles) {
      var parentModule = parentModule || file.module;
      var extensions = fileGetExtensions(file);

      file =
      // Absolute module identifiers (i.e. those that begin with a `/`
      // character) are interpreted relative to the root directory, which
      // is a slight deviation from Node, which has access to the entire
      // file system.
      id.charAt(0) === "/" ? fileAppendId(root, id, extensions) :
      // Relative module identifiers are interpreted relative to the
      // current file, naturally.
      id.charAt(0) === "." ? fileAppendId(file, id, extensions) :
      // Top-level module identifiers are interpreted as referring to
      // packages in `node_modules` directories.
      nodeModulesLookup(file, id, extensions);

      // If the identifier resolves to a directory, we use the same logic as
      // Node to find an `index.js` or `package.json` file to evaluate.
      while (fileIsDirectory(file)) {
        seenDirFiles = seenDirFiles || [];

        // If the "main" field of a `package.json` file resolves to a
        // directory we've already considered, then we should not attempt to
        // read the same `package.json` file again. Using an array as a set
        // is acceptable here because the number of directories to consider
        // is rarely greater than 1 or 2. Also, using indexOf allows us to
        // store File objects instead of strings.
        if (seenDirFiles.indexOf(file) < 0) {
          seenDirFiles.push(file);

          var pkgJsonFile = fileAppendIdPart(file, "package.json"),
              main;
          var pkg = pkgJsonFile && fileEvaluate(pkgJsonFile, parentModule);
          if (pkg && mainFields.some(function (name) {
            return isString(main = pkg[name]);
          })) {
            // The "main" field of package.json does not have to begin with
            // ./ to be considered relative, so first we try simply
            // appending it to the directory path before falling back to a
            // full fileResolve, which might return a package from a
            // node_modules directory.
            var mainFile = fileAppendId(file, main, extensions) || fileResolve(file, main, parentModule, seenDirFiles);

            if (mainFile) {
              file = mainFile;
              recordChild(parentModule, pkgJsonFile);
              // The fileAppendId call above may have returned a directory,
              // so continue the loop to make sure we resolve it to a
              // non-directory file.
              continue;
            }
          }
        }

        // If we didn't find a `package.json` file, or it didn't have a
        // resolvable `.main` property, the only possibility left to
        // consider is that this directory contains an `index.js` module.
        // This assignment almost always terminates the while loop, because
        // there's very little chance `fileIsDirectory(file)` will be true
        // for `fileAppendIdPart(file, "index", extensions)`. However, in
        // principle it is remotely possible that a file called `index.js`
        // could be a directory instead of a file.
        file = fileAppendIdPart(file, "index", extensions);
      }

      if (file && isString(file.contents)) {
        file = fileResolve(file, file.contents, parentModule, seenDirFiles);
      }

      recordChild(parentModule, file);

      return file;
    };

    function nodeModulesLookup(file, id, extensions) {
      for (var resolved; file && !resolved; file = file.parent) {
        resolved = fileIsDirectory(file) && fileAppendId(file, "node_modules/" + id, extensions);
      }
      return resolved;
    }

    return install;
  };

  if (true) {
    exports.makeInstaller = makeInstaller;
  }

  ///////////////////////////////////////////////////////////////////////////////


  (function () {

    ///////////////////////////////////////////////////////////////////////////////
    //                                                                           //
    // packages/modules-runtime/client.js                                        //
    //                                                                           //
    ///////////////////////////////////////////////////////////////////////////////
    //
    meteorInstall = makeInstaller({
      // On the client, make package resolution prefer the "browser" field of
      // package.json files to the "main" field.
      browser: true,

      fallback: function (id, parentId, error) {
        if (id && id.startsWith('meteor/')) {
          var packageName = id.split('/', 2)[1];
          throw new Error('Cannot find package "' + packageName + '". ' + 'Try "meteor add ' + packageName + '".');
        }

        throw error;
      }
    });

    ///////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    ///////////////////////////////////////////////////////////////////////////////
    //                                                                           //
    // packages/modules-runtime/profile.js                                       //
    //                                                                           //
    ///////////////////////////////////////////////////////////////////////////////
    //
    if (typeof Profile === "function" && process.env.METEOR_PROFILE) {
      var Mp = meteorInstall.Module.prototype;
      Mp.require = Profile(function (id) {
        return "require(" + JSON.stringify(id) + ")";
      }, Mp.require);
    }

    ///////////////////////////////////////////////////////////////////////////////
  }).call(this);

  /* Exports */
  Package._define("modules-runtime", {
    meteorInstall: meteorInstall
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package['modules-runtime'].meteorInstall;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "modules": { "client.js": function (_require, _exports) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/modules/client.js                                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require("./install-packages.js");
            _require("./stubs.js");
            _require("./process.js");
            _require("./reify.js");

            _exports.addStyles = _require("./css").addStyles;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "css.js": function (_require3, _exports3) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/modules/css.js                                                                                             //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var doc = document;
            var head = doc.getElementsByTagName("head").item(0);

            _exports3.addStyles = function (css) {
              var style = doc.createElement("style");

              style.setAttribute("type", "text/css");

              // https://msdn.microsoft.com/en-us/library/ms535871(v=vs.85).aspx
              var internetExplorerSheetObject = style.sheet || // Edge/IE11.
              style.styleSheet; // Older IEs.

              if (internetExplorerSheetObject) {
                internetExplorerSheetObject.cssText = css;
              } else {
                style.appendChild(doc.createTextNode(css));
              }

              return head.appendChild(style);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "install-packages.js": function (_require4, _exports4, _module) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/modules/install-packages.js                                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            function install(name, mainModule) {
              var meteorDir = {};

              // Given a package name <name>, install a stub module in the
              // /node_modules/meteor directory called <name>.js, so that
              // require.resolve("meteor/<name>") will always return
              // /node_modules/meteor/<name>.js instead of something like
              // /node_modules/meteor/<name>/index.js, in the rare but possible event
              // that the package contains a file called index.js (#6590).

              if (typeof mainModule === "string") {
                // Set up an alias from /node_modules/meteor/<package>.js to the main
                // module, e.g. meteor/<package>/index.js.
                meteorDir[name + ".js"] = mainModule;
              } else {
                // back compat with old Meteor packages
                meteorDir[name + ".js"] = function (r, e, _module2) {
                  _module2.exports = Package[name];
                };
              }

              meteorInstall({
                node_modules: {
                  meteor: meteorDir
                }
              });
            }

            // This file will be modified during computeJsOutputFilesMap to include
            // install(<name>) calls for every Meteor package.

            install("meteor");
            install("modules-runtime");
            install("modules", "meteor/modules/client.js");
            install("modern-browsers");
            install("babel-compiler");
            install("ecmascript");
            install("ecmascript-runtime");
            install("babel-runtime", "meteor/babel-runtime/babel-runtime.js");
            install("promise", "meteor/promise/client.js");
            install("url", "meteor/url/url_client.js");
            install("http", "meteor/http/httpcall_client.js");
            install("dynamic-import", "meteor/dynamic-import/client.js");
            install("ecmascript-runtime-client", "meteor/ecmascript-runtime-client/legacy.js");
            install("tracker");
            install("tmeasday:check-npm-versions", "meteor/tmeasday:check-npm-versions/check-npm-versions.js");
            install("react-meteor-data", "meteor/react-meteor-data/react-meteor-data.jsx");
            install("underscore");
            install("ddp-rate-limiter");
            install("random");
            install("localstorage");
            install("callback-hook", "meteor/callback-hook/hook.js");
            install("reactive-var");
            install("base64", "meteor/base64/base64.js");
            install("ejson", "meteor/ejson/ejson.js");
            install("check", "meteor/check/match.js");
            install("retry", "meteor/retry/retry.js");
            install("id-map", "meteor/id-map/id-map.js");
            install("ddp-common");
            install("reload", "meteor/reload/reload.js");
            install("socket-stream-client", "meteor/socket-stream-client/browser.js");
            install("diff-sequence", "meteor/diff-sequence/diff.js");
            install("mongo-id", "meteor/mongo-id/id.js");
            install("ddp-client", "meteor/ddp-client/client/client.js");
            install("ddp");
            install("geojson-utils", "meteor/geojson-utils/main.js");
            install("ordered-dict", "meteor/ordered-dict/ordered_dict.js");
            install("minimongo", "meteor/minimongo/minimongo_client.js");
            install("ddp-server");
            install("allow-deny");
            install("mongo-dev-server");
            install("mongo");
            install("accounts-base", "meteor/accounts-base/client_main.js");
            install("sha");
            install("srp");
            install("accounts-password");
            install("service-configuration");

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "process.js": function (_require5, _exports5, _module3) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/modules/process.js                                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            if (!global.process) {
              try {
                // The application can run `npm install process` to provide its own
                // process stub; otherwise this module will provide a partial stub.
                global.process = _require5("process");
              } catch (missing) {
                global.process = {};
              }
            }

            var proc = global.process;

            if (Meteor.isServer) {
              // Make require("process") work on the server in all versions of Node.
              meteorInstall({
                node_modules: {
                  "process.js": function (r, e, _module4) {
                    _module4.exports = proc;
                  }
                }
              });
            } else {
              proc.platform = "browser";
              proc.nextTick = proc.nextTick || Meteor._setImmediate;
            }

            if (typeof proc.env !== "object") {
              proc.env = {};
            }

            var hasOwn = Object.prototype.hasOwnProperty;
            for (var key in meteorEnv) {
              if (hasOwn.call(meteorEnv, key)) {
                proc.env[key] = meteorEnv[key];
              }
            }

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "reify.js": function (_require6, _exports6, _module5) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/modules/reify.js                                                                                           //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require6("reify/lib/runtime").enable(_module5.constructor.prototype);

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "stubs.js": function (_require7) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/modules/stubs.js                                                                                           //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var haveStubs = false;
            try {
              _require7.resolve("meteor-node-stubs");
              haveStubs = true;
            } catch (noStubs) {}

            if (haveStubs) {
              // When meteor-node-stubs is installed in the application's root
              // node_modules directory, requiring it here installs aliases for stubs
              // for all Node built-in modules, such as fs, util, and http.
              _require7("meteor-node-stubs");
            }

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "node_modules": { "reify": { "lib": { "runtime": { "index.js": function (_require8, _exports7, _module6) {

                    // This module should be compatible with PhantomJS v1, just like the other files
                    // in reify/lib/runtime. Node 4+ features like const/let and arrow functions are
                    // not acceptable here, and importing any npm packages should be contemplated
                    // with extreme skepticism.

                    var utils = _require8("./utils.js");
                    var Entry = _require8("./entry.js");

                    // The exports.enable method can be used to enable the Reify runtime for
                    // specific module objects, or for Module.prototype (where implemented),
                    // to make the runtime available throughout the entire module system.
                    _exports7.enable = function (mod) {
                      if (mod.watch !== moduleWatch) {
                        mod.watch = moduleWatch;
                        mod["export"] = moduleExport;
                        mod.exportDefault = moduleExportDefault;
                        mod.runSetters = runSetters;

                        // Used for copying the properties of a namespace object to
                        // mod.exports to implement `export * from "module"` syntax.
                        mod.makeNsSetter = moduleMakeNsSetter;

                        return true;
                      }

                      return false;
                    };

                    // If key is provided, it will be used to identify the given setters so
                    // that they can be replaced if module.watch is called again with the same
                    // key. This avoids potential memory leaks from import declarations inside
                    // loops. The compiler generates these keys automatically (and
                    // deterministically) when compiling nested import declarations.
                    function moduleWatch(exported, setters, key) {
                      utils.setESModule(this.exports);
                      Entry.getOrCreate(this.exports, this);

                      if (utils.isObject(setters)) {
                        Entry.getOrCreate(exported).addSetters(this, setters, key);
                      }
                    }

                    // Register getter functions for local variables in the scope of an export
                    // statement. Pass true as the second argument to indicate that the getter
                    // functions always return the same values.
                    function moduleExport(getters, constant) {
                      utils.setESModule(this.exports);
                      var entry = Entry.getOrCreate(this.exports, this);
                      entry.addGetters(getters, constant);
                      if (this.loaded) {
                        // If the module has already been evaluated, then we need to trigger
                        // another round of entry.runSetters calls, which begins by calling
                        // entry.runModuleGetters(module).
                        entry.runSetters();
                      }
                    }

                    // Register a getter function that always returns the given value.
                    function moduleExportDefault(value) {
                      return this["export"]({
                        "default": function () {
                          return value;
                        }
                      }, true);
                    }

                    // Platform-specific code should find a way to call this method whenever
                    // the module system is about to return module.exports from require. This
                    // might happen more than once per module, in case of dependency cycles,
                    // so we want Module.prototype.runSetters to run each time.
                    function runSetters(valueToPassThrough) {
                      var entry = Entry.get(this.exports);
                      if (entry !== null) {
                        entry.runSetters();
                      }

                      if (this.loaded) {
                        // If this module has finished loading, then we must create an Entry
                        // object here, so that we can add this module to entry.ownerModules
                        // by passing it as the second argument to Entry.getOrCreate.
                        Entry.getOrCreate(this.exports, this);
                      }

                      // Assignments to exported local variables get wrapped with calls to
                      // module.runSetters, so module.runSetters returns the
                      // valueToPassThrough parameter to allow the value of the original
                      // expression to pass through. For example,
                      //
                      //   export var a = 1;
                      //   console.log(a += 3);
                      //
                      // becomes
                      //
                      //   module.export("a", () => a);
                      //   var a = 1;
                      //   console.log(module.runSetters(a += 3));
                      //
                      // This ensures module.runSetters runs immediately after the assignment,
                      // and does not interfere with the larger computation.
                      return valueToPassThrough;
                    }

                    // Returns a function that takes a namespace object and copies the
                    // properties of the namespace to module.exports, excluding any "default"
                    // property (by default, unless includeDefault is truthy), which is useful
                    // for implementing `export * from "module"`.
                    function moduleMakeNsSetter(includeDefault) {
                      var _module7 = this;
                      // Discussion of why the "default" property is skipped:
                      // https://github.com/tc39/ecma262/issues/948
                      return function (namespace) {
                        Object.keys(namespace).forEach(function (key) {
                          if (includeDefault || key !== "default") {
                            utils.copyKey(key, _module7.exports, namespace);
                          }
                        });
                      };
                    }

                    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                  }, "utils.js": function (_require9, _exports8, _module8) {

                    // This module should be compatible with PhantomJS v1, just like the other files
                    // in reify/lib/runtime. Node 4+ features like const/let and arrow functions are
                    // not acceptable here, and importing any npm packages should be contemplated
                    // with extreme skepticism.

                    var useSetPrototypeOf = typeof Object.setPrototypeOf === "function";
                    var useSymbol = typeof Symbol === "function";

                    var esStrKey = "__esModule";
                    var esSymKey = useSymbol ? Symbol.for(esStrKey) : null;
                    var useToStringTag = useSymbol && typeof Symbol.toStringTag === "symbol";
                    var useGetOwnPropDesc = typeof Object.getOwnPropertyDescriptor === "function";
                    var hasOwn = Object.prototype.hasOwnProperty;

                    function copyKey(key, target, source) {
                      if (useGetOwnPropDesc) {
                        var desc = Object.getOwnPropertyDescriptor(source, key);
                        desc.configurable = true; // Allow redefinition.
                        Object.defineProperty(target, key, desc);
                      } else {
                        target[key] = source[key];
                      }
                    }

                    _exports8.copyKey = copyKey;

                    // Returns obj[key] unless that property is defined by a getter function,
                    // in which case the getter function is returned.
                    _exports8.valueOrGetter = function (obj, key) {
                      if (useGetOwnPropDesc && hasOwn.call(obj, key)) {
                        var desc = Object.getOwnPropertyDescriptor(obj, key);
                        if (typeof desc.get === "function") {
                          return desc.get;
                        }
                      }

                      return obj[key];
                    };

                    function getESModule(exported) {
                      if (isObjectLike(exported)) {
                        if (useSymbol && hasOwn.call(exported, esSymKey)) {
                          return !!exported[esSymKey];
                        }

                        if (hasOwn.call(exported, esStrKey)) {
                          return !!exported[esStrKey];
                        }
                      }

                      return false;
                    }

                    _exports8.getESModule = getESModule;

                    function setESModule(exported) {
                      if (isObjectLike(exported)) {
                        if (useSymbol) {
                          exported[esSymKey] = true;
                        } else if (!exported[esStrKey]) {
                          // Other module runtime systems may set exported.__esModule such
                          // that it can't be redefined, so we call Object.defineProperty only
                          // when exported.__esModule is not already true.
                          Object.defineProperty(exported, esStrKey, {
                            configurable: true,
                            enumerable: false,
                            value: true,
                            writable: false
                          });
                        }
                      }
                    }

                    _exports8.setESModule = setESModule;

                    function isObject(value) {
                      return typeof value === "object" && value !== null;
                    }

                    _exports8.isObject = isObject;

                    function isObjectLike(value) {
                      var type = typeof value;
                      return type === "function" || type === "object" && value !== null;
                    }

                    _exports8.isObjectLike = isObjectLike;

                    function createNamespace() {
                      var namespace = Object.create(null);

                      if (useToStringTag) {
                        Object.defineProperty(namespace, Symbol.toStringTag, {
                          value: "Module",
                          configurable: false,
                          enumerable: false,
                          writable: false
                        });
                      }

                      setESModule(namespace);

                      return namespace;
                    }

                    _exports8.createNamespace = createNamespace;

                    function setPrototypeOf(object, proto) {
                      if (useSetPrototypeOf) {
                        Object.setPrototypeOf(object, proto);
                      } else {
                        object.__proto__ = proto;
                      }
                      return object;
                    }

                    _exports8.setPrototypeOf = setPrototypeOf;

                    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                  }, "entry.js": function (_require10, _exports9, _module9) {

                    // This module should be compatible with PhantomJS v1, just like the other files
                    // in reify/lib/runtime. Node 4+ features like const/let and arrow functions are
                    // not acceptable here, and importing any npm packages should be contemplated
                    // with extreme skepticism.

                    var utils = _require10("./utils.js");

                    var GETTER_ERROR = {};
                    var NAN = {};
                    var UNDEFINED = {};
                    var hasOwn = Object.prototype.hasOwnProperty;
                    var keySalt = 0;

                    function Entry(exported) {
                      // The module.exports of the module this Entry is managing.
                      this.exports = exported;
                      // Getters for local variables exported from the managed module.
                      this.getters = Object.create(null);
                      // Setters for assigning to local variables in parent modules.
                      this.setters = Object.create(null);
                      // The normalized namespace object that importers receive when they use
                      // `import * as namespace from "..."` syntax.
                      this.namespace = utils.createNamespace();
                      // Map from module.id string to module object for each module this Entry
                      // is managing.
                      this.ownerModules = Object.create(null);
                      // Boolean indicating whether all the modules this Entry is managing
                      // have finished loading yet. Call entry.hasLoaded() to compute.
                      this._loaded = false;
                    }

                    var Ep = utils.setPrototypeOf(Entry.prototype, null);

                    var weakEntryMap = typeof WeakMap === "function" ? new WeakMap() : new function FakeWeakMap() {
                      // A barely functional WeakMap polyfill, just in case. This
                      // implementation needs to be logically correct only in the specific
                      // ways that the Entry class uses it. It isn't even "weak" in the
                      // garbage-collection sense of the word, but that's fine.
                      var keys = [];
                      var values = [];

                      this.get = function (obj) {
                        var index = keys.indexOf(obj);
                        if (index >= 0) {
                          return values[index];
                        }
                      };

                      this.set = function (obj, value) {
                        var index = keys.indexOf(obj);
                        if (index >= 0) {
                          values[index] = value;
                        } else {
                          keys.push(obj);
                          values.push(value);
                        }
                      };
                    }();

                    Entry.get = function (exported) {
                      if (utils.isObjectLike(exported)) {
                        var entry = weakEntryMap.get(exported);
                        if (entry !== void 0) {
                          return entry;
                        }
                      }
                      return null;
                    };

                    Entry.getOrCreate = function (exported, mod) {
                      var entry = getOrCreate(exported);

                      if (utils.isObject(mod)) {
                        entry.ownerModules[mod.id] = mod;
                      }

                      return entry;
                    };

                    function getOrCreate(exported) {
                      if (!utils.isObjectLike(exported)) {
                        // In case the child module modified module.exports, create a temporary
                        // Entry object so that we can call the entry.addSetters method once,
                        // which will trigger entry.runSetters(names), so that module.importSync
                        // behaves as expected.
                        return new Entry(exported);
                      }

                      var entry = weakEntryMap.get(exported);
                      if (entry !== void 0) {
                        return entry;
                      }

                      var entry = new Entry(exported);
                      weakEntryMap.set(exported, entry);
                      return entry;
                    };

                    function safeKeys(obj) {
                      var keys = Object.keys(obj);
                      var esModuleIndex = keys.indexOf("__esModule");
                      if (esModuleIndex >= 0) {
                        keys.splice(esModuleIndex, 1);
                      }
                      return keys;
                    }

                    Ep.addGetters = function (getters, constant) {
                      var names = safeKeys(getters);
                      var nameCount = names.length;
                      constant = !!constant;

                      for (var i = 0; i < nameCount; ++i) {
                        var name = names[i];
                        var getter = getters[name];

                        if (typeof getter === "function" &&
                        // Should this throw if this.getters[name] exists?
                        !(name in this.getters)) {
                          this.getters[name] = getter;
                          getter.constant = constant;
                          getter.runCount = 0;
                        }
                      }
                    };

                    Ep.addSetters = function (parent, setters, key) {
                      var names = safeKeys(setters);
                      var nameCount = names.length;

                      if (!nameCount) {
                        return;
                      }

                      // If no key is provided, make a unique key. Otherwise, make sure the key is
                      // distinct from keys provided by other parent modules.
                      key = key === void 0 ? makeUniqueKey() : parent.id + ":" + key;

                      for (var i = 0; i < nameCount; ++i) {
                        var name = names[i];
                        var setter = setters[name];

                        if (typeof setter === "function") {
                          setter.parent = parent;
                          if (!(name in this.setters)) {
                            this.setters[name] = Object.create(null);
                          }
                          this.setters[name][key] = setter;
                        }
                      }

                      this.runSetters(names);
                    };

                    Ep.runGetters = function (names) {
                      // Before running getters, copy anything added to the exports object
                      // over to the namespace. Values returned by getters take precedence
                      // over these values, but we don't want to miss anything.
                      syncExportsToNamespace(this, names);

                      if (names === void 0 || names.indexOf("*") >= 0) {
                        names = Object.keys(this.getters);
                      }

                      var nameCount = names.length;

                      for (var i = 0; i < nameCount; ++i) {
                        var name = names[i];
                        var value = runGetter(this, name);

                        // If the getter is run without error, update both entry.namespace and
                        // module.exports with the current value so that CommonJS require
                        // calls remain consistent with module.watch.
                        if (value !== GETTER_ERROR) {
                          this.namespace[name] = value;
                          this.exports[name] = value;
                        }
                      }
                    };

                    function syncExportsToNamespace(entry, names) {
                      var setDefault = false;

                      if (!utils.getESModule(entry.exports)) {
                        // If the module entry is managing overrides module.exports, that
                        // value should be exposed as the .default property of the namespace,
                        // unless module.exports is marked as an ECMASCript module.
                        entry.namespace.default = entry.exports;
                        setDefault = true;
                      }

                      if (!utils.isObjectLike(entry.exports)) {
                        return;
                      }

                      if (names === void 0 || names.indexOf("*") >= 0) {
                        names = Object.keys(entry.exports);
                      }

                      names.forEach(function (key) {
                        // Don't set any properties for which a getter function exists in
                        // entry.getters, don't accidentally override entry.namespace.default,
                        // and only copy own properties from entry.exports.
                        if (!hasOwn.call(entry.getters, key) && !(setDefault && key === "default") && hasOwn.call(entry.exports, key)) {
                          utils.copyKey(key, entry.namespace, entry.exports);
                        }
                      });
                    }

                    // Called by module.runSetters once the module this Entry is managing has
                    // finished loading.
                    Ep.hasLoaded = function () {
                      if (this._loaded) {
                        return true;
                      }

                      var ids = Object.keys(this.ownerModules);
                      var idCount = ids.length;

                      for (var i = 0; i < idCount; ++i) {
                        var owner = this.ownerModules[ids[i]];
                        if (!owner.loaded && owner.exports === this.exports) {
                          // At least one owner module whose exports are still ===
                          // this.exports has not finished loading, so this this Entry cannot
                          // be marked as loaded yet.
                          return false;
                        }
                      }

                      // Set entry._loaded = true only if all the modules in
                      // entry.ownerModules that are still associated with entry.exports have
                      // finished loading.
                      return this._loaded = true;
                    };

                    // Called whenever module.exports might have changed, to trigger any
                    // setters associated with the newly exported values. The names parameter
                    // is optional; without it, all getters and setters will run.
                    Ep.runSetters = function (names) {
                      // Make sure entry.namespace and module.exports are up to date before we
                      // call getExportByName(entry, name).
                      this.runGetters(names);

                      // Lazily-initialized object mapping parent module identifiers to parent
                      // module objects whose setters we might need to run.
                      var parents;

                      forEachSetter(this, names, function (setter, name, value) {
                        if (parents === void 0) {
                          parents = Object.create(null);
                        }
                        parents[setter.parent.id] = setter.parent;

                        // The param order for setters is `value` then `name` because the `name`
                        // param is only used by namespace exports.
                        setter(value, name);
                      });

                      if (!parents) {
                        return;
                      }

                      // If any of the setters updated the module.exports of a parent module,
                      // or updated local variables that are exported by that parent module,
                      // then we must re-run any setters registered by that parent module.
                      var parentIDs = Object.keys(parents);
                      var parentIDCount = parentIDs.length;

                      for (var i = 0; i < parentIDCount; ++i) {
                        // What happens if parents[parentIDs[id]] === module, or if
                        // longer cycles exist in the parent chain? Thanks to our setter.last
                        // bookkeeping above, the runSetters broadcast will only proceed
                        // as far as there are any actual changes to report.
                        var parent = parents[parentIDs[i]];
                        var parentEntry = Entry.get(parent.exports);
                        if (parentEntry) {
                          parentEntry.runSetters();
                        }
                      }
                    };

                    function callSetterIfNecessary(setter, name, value, callback) {
                      if (name === "__esModule") {
                        // Ignore setters asking for module.exports.__esModule.
                        return;
                      }

                      var shouldCall = false;

                      if (setter.last === void 0) {
                        setter.last = Object.create(null);
                        // Always call the setter if it has never been called before.
                        shouldCall = true;
                      }

                      function changed(name, value) {
                        var valueToCompare = value;
                        if (valueToCompare !== valueToCompare) {
                          valueToCompare = NAN;
                        } else if (valueToCompare === void 0) {
                          valueToCompare = UNDEFINED;
                        }

                        if (setter.last[name] === valueToCompare) {
                          return false;
                        }

                        setter.last[name] = valueToCompare;
                        return true;
                      }

                      if (name === "*") {
                        var keys = safeKeys(value);
                        var keyCount = keys.length;
                        for (var i = 0; i < keyCount; ++i) {
                          var key = keys[i];
                          // Evaluating value[key] is risky because the property might be
                          // defined by a getter function that logs a deprecation warning (or
                          // worse) when evaluated. For example, Node uses this trick to
                          // display a deprecation warning whenever crypto.createCredentials
                          // is accessed. Fortunately, when value[key] is defined by a getter
                          // function, it's enough to check whether the getter function itself
                          // has changed, since we are careful elsewhere to preserve getters
                          // rather than prematurely evaluating them.
                          if (changed(key, utils.valueOrGetter(value, key))) {
                            shouldCall = true;
                          }
                        }
                      } else if (changed(name, value)) {
                        shouldCall = true;
                      }

                      if (shouldCall) {
                        // Only invoke the callback if we have not called this setter
                        // (with a value of this name) before, or the current value is
                        // different from the last value we passed to this setter.
                        return callback(setter, name, value);
                      }
                    }

                    // Invoke the given callback once for every (setter, name, value) that needs to
                    // be called. Note that forEachSetter does not call any setters itself, only the
                    // given callback.
                    function forEachSetter(entry, names, callback) {
                      var needToCheckNames = true;

                      if (names === void 0) {
                        names = Object.keys(entry.setters);
                        needToCheckNames = false;
                      }

                      var nameCount = names.length;

                      for (var i = 0; i < nameCount; ++i) {
                        var name = names[i];

                        if (needToCheckNames && !hasOwn.call(entry.setters, name)) {
                          continue;
                        }

                        var setters = entry.setters[name];
                        var keys = Object.keys(setters);
                        var keyCount = keys.length;

                        for (var j = 0; j < keyCount; ++j) {
                          var key = keys[j];
                          var value = getExportByName(entry, name);

                          callSetterIfNecessary(setters[key], name, value, callback);

                          var getter = entry.getters[name];
                          if (typeof getter === "function" &&
                          // Sometimes a getter function will throw because it's called
                          // before the variable it's supposed to return has been
                          // initialized, so we need to know that the getter function has
                          // run to completion at least once.
                          getter.runCount > 0 && getter.constant) {
                            // If we happen to know that this getter function has run
                            // successfully, and will never return a different value, then we
                            // can forget the corresponding setter, because we've already
                            // reported that constant value. Note that we can't forget the
                            // getter, because we need to remember the original value in case
                            // anyone tampers with entry.exports[name].
                            delete setters[key];
                          }
                        }
                      }
                    }

                    function getExportByName(entry, name) {
                      if (name === "*") {
                        return entry.namespace;
                      }

                      if (hasOwn.call(entry.namespace, name)) {
                        return entry.namespace[name];
                      }

                      var exported = entry.exports;

                      if (name === "default" && !(utils.getESModule(exported) && "default" in exported)) {
                        return exported;
                      }

                      if (exported == null) {
                        return;
                      }

                      return exported[name];
                    }

                    function makeUniqueKey() {
                      return Math.random().toString(36)
                      // Add an incrementing salt to help track key ordering and also
                      // absolutely guarantee we never return the same key twice.
                      .replace("0.", ++keySalt + "$");
                    }

                    function runGetter(entry, name) {
                      var getter = entry.getters[name];
                      try {
                        var result = getter();
                        ++getter.runCount;
                        return result;
                      } catch (e) {}
                      return GETTER_ERROR;
                    }

                    _module9.exports = Entry;

                    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                  } } } } } } }, "meteor-node-stubs": { "package.json": function (_require11, _exports10) {

          /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          //                                                                                                                     //
          // node_modules/meteor-node-stubs/package.json                                                                         //
          //                                                                                                                     //
          /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          //
          _exports10.name = "meteor-node-stubs";
          _exports10.version = "0.4.1";
          _exports10.main = "index.js";

          /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        }, "index.js": function (_require12, _exports11, _module10) {

          /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          //                                                                                                                     //
          // node_modules/meteor-node-stubs/index.js                                                                             //
          //                                                                                                                     //
          /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          //
          var map = _require12("./map.json");
          var meteorAliases = {};

          Object.keys(map).forEach(function (id) {
            if (typeof map[id] === "string") {
              var aliasParts = _module10.id.split("/");
              aliasParts.pop();
              aliasParts.push("node_modules", map[id]);
              _exports11[id] = meteorAliases[id + ".js"] = aliasParts.join("/");
            } else {
              _exports11[id] = map[id];
              meteorAliases[id + ".js"] = function () {};
            }
          });

          if (typeof meteorInstall === "function") {
            meteorInstall({
              // Install the aliases into a node_modules directory one level up from
              // the root directory, so that they do not clutter the namespace
              // available to apps and packages.
              "..": {
                node_modules: meteorAliases
              }
            });
          }

          // If Buffer is not defined globally, but the "buffer" built-in stub is
          // installed and can be imported, use it to define global.Buffer so that
          // modules like core-util-is/lib/util.js can refer to Buffer without
          // crashing application startup.
          if (typeof global.Buffer !== "function") {
            try {
              // Use (0, require)(...) to avoid registering a dependency on the
              // "buffer" stub, in case it is not otherwise bundled.
              global.Buffer = (0, _require12)("buffer").Buffer;
            } catch (ok) {
              // Failure to import "buffer" is fine as long as the Buffer global
              // variable is not used.
            }
          }

          /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        }, "map.json": function (_require13, _exports12, _module11) {

          /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          //                                                                                                                     //
          // node_modules/meteor-node-stubs/map.json                                                                             //
          //                                                                                                                     //
          /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          //
          _module11.exports = {
            "assert": "assert/",
            "buffer": "buffer/",
            "child_process": null,
            "cluster": null,
            "console": "console-browserify",
            "constants": "constants-browserify",
            "crypto": "../wrappers/crypto.js",
            "dgram": null,
            "dns": null,
            "domain": "domain-browser",
            "events": "events/",
            "fs": null,
            "http": "stream-http",
            "https": "https-browserify",
            "module": "../wrappers/module.js",
            "net": null,
            "os": "os-browserify/browser.js",
            "path": "path-browserify",
            "process": "process/browser.js",
            "punycode": "punycode/",
            "querystring": "querystring-es3/",
            "readline": null,
            "repl": null,
            "stream": "stream-browserify",
            "_stream_duplex": "readable-stream/duplex.js",
            "_stream_passthrough": "readable-stream/passthrough.js",
            "_stream_readable": "readable-stream/readable.js",
            "_stream_transform": "readable-stream/transform.js",
            "_stream_writable": "readable-stream/writable.js",
            "string_decoder": "string_decoder/",
            "sys": "util/util.js",
            "timers": "timers-browserify",
            "tls": null,
            "tty": "tty-browserify",
            "url": "url/",
            "util": "util/util.js",
            "vm": "vm-browserify",
            "zlib": "browserify-zlib"
          };

          /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        }, "deps": { "process.js": function (_require14) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/meteor-node-stubs/deps/process.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require14("process/browser.js");

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } }, "node_modules": { "process": { "browser.js": function (_require15, _exports13, _module12) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/meteor-node-stubs/node_modules/process/browser.js                                                      //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // shim for using process in browser
              var process = _module12.exports = {};

              // cached from whatever global is present so that test runners that stub it
              // don't break things.  But we need to wrap it in a try catch in case it is
              // wrapped in strict mode code which doesn't define any globals.  It's inside a
              // function because try/catches deoptimize in certain engines.

              var cachedSetTimeout;
              var cachedClearTimeout;

              function defaultSetTimout() {
                throw new Error('setTimeout has not been defined');
              }
              function defaultClearTimeout() {
                throw new Error('clearTimeout has not been defined');
              }
              (function () {
                try {
                  if (typeof setTimeout === 'function') {
                    cachedSetTimeout = setTimeout;
                  } else {
                    cachedSetTimeout = defaultSetTimout;
                  }
                } catch (e) {
                  cachedSetTimeout = defaultSetTimout;
                }
                try {
                  if (typeof clearTimeout === 'function') {
                    cachedClearTimeout = clearTimeout;
                  } else {
                    cachedClearTimeout = defaultClearTimeout;
                  }
                } catch (e) {
                  cachedClearTimeout = defaultClearTimeout;
                }
              })();
              function runTimeout(fun) {
                if (cachedSetTimeout === setTimeout) {
                  //normal enviroments in sane situations
                  return setTimeout(fun, 0);
                }
                // if setTimeout wasn't available but was latter defined
                if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                  cachedSetTimeout = setTimeout;
                  return setTimeout(fun, 0);
                }
                try {
                  // when when somebody has screwed with setTimeout but no I.E. maddness
                  return cachedSetTimeout(fun, 0);
                } catch (e) {
                  try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                    return cachedSetTimeout.call(null, fun, 0);
                  } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                    return cachedSetTimeout.call(this, fun, 0);
                  }
                }
              }
              function runClearTimeout(marker) {
                if (cachedClearTimeout === clearTimeout) {
                  //normal enviroments in sane situations
                  return clearTimeout(marker);
                }
                // if clearTimeout wasn't available but was latter defined
                if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                  cachedClearTimeout = clearTimeout;
                  return clearTimeout(marker);
                }
                try {
                  // when when somebody has screwed with setTimeout but no I.E. maddness
                  return cachedClearTimeout(marker);
                } catch (e) {
                  try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                    return cachedClearTimeout.call(null, marker);
                  } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                    // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                    return cachedClearTimeout.call(this, marker);
                  }
                }
              }
              var queue = [];
              var draining = false;
              var currentQueue;
              var queueIndex = -1;

              function cleanUpNextTick() {
                if (!draining || !currentQueue) {
                  return;
                }
                draining = false;
                if (currentQueue.length) {
                  queue = currentQueue.concat(queue);
                } else {
                  queueIndex = -1;
                }
                if (queue.length) {
                  drainQueue();
                }
              }

              function drainQueue() {
                if (draining) {
                  return;
                }
                var timeout = runTimeout(cleanUpNextTick);
                draining = true;

                var len = queue.length;
                while (len) {
                  currentQueue = queue;
                  queue = [];
                  while (++queueIndex < len) {
                    if (currentQueue) {
                      currentQueue[queueIndex].run();
                    }
                  }
                  queueIndex = -1;
                  len = queue.length;
                }
                currentQueue = null;
                draining = false;
                runClearTimeout(timeout);
              }

              process.nextTick = function (fun) {
                var args = new Array(arguments.length - 1);
                if (arguments.length > 1) {
                  for (var i = 1; i < arguments.length; i++) {
                    args[i - 1] = arguments[i];
                  }
                }
                queue.push(new Item(fun, args));
                if (queue.length === 1 && !draining) {
                  runTimeout(drainQueue);
                }
              };

              // v8 likes predictible objects
              function Item(fun, array) {
                this.fun = fun;
                this.array = array;
              }
              Item.prototype.run = function () {
                this.fun.apply(null, this.array);
              };
              process.title = 'browser';
              process.browser = true;
              process.env = {};
              process.argv = [];
              process.version = ''; // empty string to avoid regexp issues
              process.versions = {};

              function noop() {}

              process.on = noop;
              process.addListener = noop;
              process.once = noop;
              process.off = noop;
              process.removeListener = noop;
              process.removeAllListeners = noop;
              process.emit = noop;
              process.prependListener = noop;
              process.prependOnceListener = noop;

              process.listeners = function (name) {
                return [];
              };

              process.binding = function (name) {
                throw new Error('process.binding is not supported');
              };

              process.cwd = function () {
                return '/';
              };
              process.chdir = function (dir) {
                throw new Error('process.chdir is not supported');
              };
              process.umask = function () {
                return 0;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            } } } }, "@babel": { "runtime": { "package.json": function (_require16, _exports14, _module13) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/@babel/runtime/package.json                                                                            //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module13.exports = {
              "_from": "@babel/runtime@7.0.0-beta.55",
              "_id": "@babel/runtime@7.0.0-beta.55",
              "_inBundle": false,
              "_integrity": "sha1-C8M6paasCwEvN+JbnmqqLkiakWs=",
              "_location": "/@babel/runtime",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "@babel/runtime@7.0.0-beta.55",
                "name": "@babel/runtime",
                "escapedName": "@babel%2fruntime",
                "scope": "@babel",
                "rawSpec": "7.0.0-beta.55",
                "saveSpec": null,
                "fetchSpec": "7.0.0-beta.55"
              },
              "_requiredBy": ["/"],
              "_resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.0.0-beta.55.tgz",
              "_shasum": "0bc33aa5a6ac0b012f37e25b9e6aaa2e489a916b",
              "_spec": "@babel/runtime@7.0.0-beta.55",
              "_where": "/private/var/folders/nn/yjvp6rk56fb8xj0wh1xxx7tm0000gp/T/tmp-5187beiSIy0mRJG1",
              "author": {
                "name": "Sebastian McKenzie",
                "email": "sebmck@gmail.com"
              },
              "bundleDependencies": false,
              "dependencies": {
                "core-js": "^2.5.7",
                "regenerator-runtime": "^0.12.0"
              },
              "deprecated": false,
              "description": "babel selfContained runtime",
              "devDependencies": {
                "@babel/core": "7.0.0-beta.55",
                "@babel/helpers": "7.0.0-beta.55",
                "@babel/plugin-transform-runtime": "7.0.0-beta.55",
                "@babel/preset-env": "7.0.0-beta.55",
                "@babel/types": "7.0.0-beta.55"
              },
              "license": "MIT",
              "name": "@babel/runtime",
              "repository": {
                "type": "git",
                "url": "https://github.com/babel/babel/tree/master/packages/babel-runtime"
              },
              "version": "7.0.0-beta.55"
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "helpers": { "interopRequireDefault.js": function (_require17, _exports15, _module14) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/helpers/interopRequireDefault.js                                                        //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                  default: obj
                };
              }

              _module14.exports = _interopRequireDefault;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "extends.js": function (_require18, _exports16, _module15) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/helpers/extends.js                                                                      //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var _Object$assign = _require18("../core-js/object/assign");

              function _extends() {
                _module15.exports = _extends = _Object$assign || function (target) {
                  for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];

                    for (var key in source) {
                      if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                      }
                    }
                  }

                  return target;
                };

                return _extends.apply(this, arguments);
              }

              _module15.exports = _extends;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "inheritsLoose.js": function (_require19, _exports17, _module16) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/helpers/inheritsLoose.js                                                                //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var _Object$create = _require19("../core-js/object/create");

              function _inheritsLoose(subClass, superClass) {
                subClass.prototype = _Object$create(superClass.prototype);
                subClass.prototype.constructor = subClass;
                subClass.__proto__ = superClass;
              }

              _module16.exports = _inheritsLoose;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "typeof.js": function (_require20, _exports18, _module17) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/helpers/typeof.js                                                                       //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var _Symbol$iterator = _require20("../core-js/symbol/iterator");

              var _Symbol = _require20("../core-js/symbol");

              function _typeof2(obj) {
                if (typeof _Symbol === "function" && typeof _Symbol$iterator === "symbol") {
                  _typeof2 = function _typeof2(obj) {
                    return typeof obj;
                  };
                } else {
                  _typeof2 = function _typeof2(obj) {
                    return obj && typeof _Symbol === "function" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? "symbol" : typeof obj;
                  };
                }return _typeof2(obj);
              }

              function _typeof(obj) {
                if (typeof _Symbol === "function" && _typeof2(_Symbol$iterator) === "symbol") {
                  _module17.exports = _typeof = function _typeof(obj) {
                    return _typeof2(obj);
                  };
                } else {
                  _module17.exports = _typeof = function _typeof(obj) {
                    return obj && typeof _Symbol === "function" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? "symbol" : _typeof2(obj);
                  };
                }

                return _typeof(obj);
              }

              _module17.exports = _typeof;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "toConsumableArray.js": function (_require21, _exports19, _module18) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/helpers/toConsumableArray.js                                                            //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var arrayWithoutHoles = _require21("./arrayWithoutHoles");

              var iterableToArray = _require21("./iterableToArray");

              var nonIterableSpread = _require21("./nonIterableSpread");

              function _toConsumableArray(arr) {
                return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
              }

              _module18.exports = _toConsumableArray;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "arrayWithoutHoles.js": function (_require22, _exports20, _module19) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/helpers/arrayWithoutHoles.js                                                            //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              function _arrayWithoutHoles(arr) {
                if (Array.isArray(arr)) {
                  for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                  }

                  return arr2;
                }
              }

              _module19.exports = _arrayWithoutHoles;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "iterableToArray.js": function (_require23, _exports21, _module20) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/helpers/iterableToArray.js                                                              //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var _Array$from = _require23("../core-js/array/from");

              var _isIterable = _require23("../core-js/is-iterable");

              function _iterableToArray(iter) {
                if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === "[object Arguments]") return _Array$from(iter);
              }

              _module20.exports = _iterableToArray;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "nonIterableSpread.js": function (_require24, _exports22, _module21) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/helpers/nonIterableSpread.js                                                            //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              function _nonIterableSpread() {
                throw new TypeError("Invalid attempt to spread non-iterable instance");
              }

              _module21.exports = _nonIterableSpread;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "objectSpread.js": function (_require25, _exports23, _module22) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/helpers/objectSpread.js                                                                 //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var _Object$getOwnPropertyDescriptor = _require25("../core-js/object/get-own-property-descriptor");

              var _Object$getOwnPropertySymbols = _require25("../core-js/object/get-own-property-symbols");

              var _Object$keys = _require25("../core-js/object/keys");

              var defineProperty = _require25("./defineProperty");

              function _objectSpread(target) {
                for (var i = 1; i < arguments.length; i++) {
                  var source = arguments[i] != null ? arguments[i] : {};

                  var ownKeys = _Object$keys(source);

                  if (typeof _Object$getOwnPropertySymbols === 'function') {
                    ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {
                      return _Object$getOwnPropertyDescriptor(source, sym).enumerable;
                    }));
                  }

                  ownKeys.forEach(function (key) {
                    defineProperty(target, key, source[key]);
                  });
                }

                return target;
              }

              _module22.exports = _objectSpread;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "defineProperty.js": function (_require26, _exports24, _module23) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/helpers/defineProperty.js                                                               //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var _Object$defineProperty = _require26("../core-js/object/define-property");

              function _defineProperty(obj, key, value) {
                if (key in obj) {
                  _Object$defineProperty(obj, key, {
                    value: value,
                    enumerable: true,
                    configurable: true,
                    writable: true
                  });
                } else {
                  obj[key] = value;
                }

                return obj;
              }

              _module23.exports = _defineProperty;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "assertThisInitialized.js": function (_require27, _exports25, _module24) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/helpers/assertThisInitialized.js                                                        //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              function _assertThisInitialized(self) {
                if (self === void 0) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }

                return self;
              }

              _module24.exports = _assertThisInitialized;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            } }, "core-js": { "object": { "assign.js": function (_require28, _exports26, _module25) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/@babel/runtime/core-js/object/assign.js                                                                //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _module25.exports = _require28("core-js/library/fn/object/assign");
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "create.js": function (_require29, _exports27, _module26) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/@babel/runtime/core-js/object/create.js                                                                //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _module26.exports = _require29("core-js/library/fn/object/create");
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "get-own-property-descriptor.js": function (_require30, _exports28, _module27) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/@babel/runtime/core-js/object/get-own-property-descriptor.js                                           //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _module27.exports = _require30("core-js/library/fn/object/get-own-property-descriptor");
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "get-own-property-symbols.js": function (_require31, _exports29, _module28) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/@babel/runtime/core-js/object/get-own-property-symbols.js                                              //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _module28.exports = _require31("core-js/library/fn/object/get-own-property-symbols");
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "keys.js": function (_require32, _exports30, _module29) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/@babel/runtime/core-js/object/keys.js                                                                  //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _module29.exports = _require32("core-js/library/fn/object/keys");
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "define-property.js": function (_require33, _exports31, _module30) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/@babel/runtime/core-js/object/define-property.js                                                       //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _module30.exports = _require33("core-js/library/fn/object/define-property");
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              } }, "symbol": { "iterator.js": function (_require34, _exports32, _module31) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/@babel/runtime/core-js/symbol/iterator.js                                                              //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _module31.exports = _require34("core-js/library/fn/symbol/iterator");
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              } }, "symbol.js": function (_require35, _exports33, _module32) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/core-js/symbol.js                                                                       //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module32.exports = _require35("core-js/library/fn/symbol");
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "array": { "from.js": function (_require36, _exports34, _module33) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/@babel/runtime/core-js/array/from.js                                                                   //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _module33.exports = _require36("core-js/library/fn/array/from");
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              } }, "is-iterable.js": function (_require37, _exports35, _module34) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/@babel/runtime/core-js/is-iterable.js                                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module34.exports = _require37("core-js/library/fn/is-iterable");
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            } } } }, "core-js": { "modules": { "es6.symbol.js": function (_require38) {
            // ECMAScript 6 symbols shim
            var global = _require38('./_global');
            var has = _require38('./_has');
            var DESCRIPTORS = _require38('./_descriptors');
            var $export = _require38('./_export');
            var redefine = _require38('./_redefine');
            var META = _require38('./_meta').KEY;
            var $fails = _require38('./_fails');
            var shared = _require38('./_shared');
            var setToStringTag = _require38('./_set-to-string-tag');
            var uid = _require38('./_uid');
            var wks = _require38('./_wks');
            var wksExt = _require38('./_wks-ext');
            var wksDefine = _require38('./_wks-define');
            var enumKeys = _require38('./_enum-keys');
            var isArray = _require38('./_is-array');
            var anObject = _require38('./_an-object');
            var isObject = _require38('./_is-object');
            var toIObject = _require38('./_to-iobject');
            var toPrimitive = _require38('./_to-primitive');
            var createDesc = _require38('./_property-desc');
            var _create = _require38('./_object-create');
            var gOPNExt = _require38('./_object-gopn-ext');
            var $GOPD = _require38('./_object-gopd');
            var $DP = _require38('./_object-dp');
            var $keys = _require38('./_object-keys');
            var gOPD = $GOPD.f;
            var dP = $DP.f;
            var gOPN = gOPNExt.f;
            var $Symbol = global.Symbol;
            var $JSON = global.JSON;
            var _stringify = $JSON && $JSON.stringify;
            var PROTOTYPE = 'prototype';
            var HIDDEN = wks('_hidden');
            var TO_PRIMITIVE = wks('toPrimitive');
            var isEnum = {}.propertyIsEnumerable;
            var SymbolRegistry = shared('symbol-registry');
            var AllSymbols = shared('symbols');
            var OPSymbols = shared('op-symbols');
            var ObjectProto = Object[PROTOTYPE];
            var USE_NATIVE = typeof $Symbol == 'function';
            var QObject = global.QObject;
            // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
            var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

            // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
            var setSymbolDesc = DESCRIPTORS && $fails(function () {
              return _create(dP({}, 'a', {
                get: function () {
                  return dP(this, 'a', { value: 7 }).a;
                }
              })).a != 7;
            }) ? function (it, key, D) {
              var protoDesc = gOPD(ObjectProto, key);
              if (protoDesc) delete ObjectProto[key];
              dP(it, key, D);
              if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
            } : dP;

            var wrap = function (tag) {
              var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
              sym._k = tag;
              return sym;
            };

            var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
              return typeof it == 'symbol';
            } : function (it) {
              return it instanceof $Symbol;
            };

            var $defineProperty = function defineProperty(it, key, D) {
              if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
              anObject(it);
              key = toPrimitive(key, true);
              anObject(D);
              if (has(AllSymbols, key)) {
                if (!D.enumerable) {
                  if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
                  it[HIDDEN][key] = true;
                } else {
                  if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
                  D = _create(D, { enumerable: createDesc(0, false) });
                }return setSymbolDesc(it, key, D);
              }return dP(it, key, D);
            };
            var $defineProperties = function defineProperties(it, P) {
              anObject(it);
              var keys = enumKeys(P = toIObject(P));
              var i = 0;
              var l = keys.length;
              var key;
              while (l > i) $defineProperty(it, key = keys[i++], P[key]);
              return it;
            };
            var $create = function create(it, P) {
              return P === undefined ? _create(it) : $defineProperties(_create(it), P);
            };
            var $propertyIsEnumerable = function propertyIsEnumerable(key) {
              var E = isEnum.call(this, key = toPrimitive(key, true));
              if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
              return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
            };
            var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
              it = toIObject(it);
              key = toPrimitive(key, true);
              if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
              var D = gOPD(it, key);
              if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
              return D;
            };
            var $getOwnPropertyNames = function getOwnPropertyNames(it) {
              var names = gOPN(toIObject(it));
              var result = [];
              var i = 0;
              var key;
              while (names.length > i) {
                if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
              }return result;
            };
            var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
              var IS_OP = it === ObjectProto;
              var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
              var result = [];
              var i = 0;
              var key;
              while (names.length > i) {
                if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
              }return result;
            };

            // 19.4.1.1 Symbol([description])
            if (!USE_NATIVE) {
              $Symbol = function Symbol() {
                if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
                var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
                var $set = function (value) {
                  if (this === ObjectProto) $set.call(OPSymbols, value);
                  if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
                  setSymbolDesc(this, tag, createDesc(1, value));
                };
                if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
                return wrap(tag);
              };
              redefine($Symbol[PROTOTYPE], 'toString', function toString() {
                return this._k;
              });

              $GOPD.f = $getOwnPropertyDescriptor;
              $DP.f = $defineProperty;
              _require38('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
              _require38('./_object-pie').f = $propertyIsEnumerable;
              _require38('./_object-gops').f = $getOwnPropertySymbols;

              if (DESCRIPTORS && !_require38('./_library')) {
                redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
              }

              wksExt.f = function (name) {
                return wrap(wks(name));
              };
            }

            $export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

            for (var es6Symbols =
            // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
            'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) wks(es6Symbols[j++]);

            for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

            $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
              // 19.4.2.1 Symbol.for(key)
              'for': function (key) {
                return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
              },
              // 19.4.2.5 Symbol.keyFor(sym)
              keyFor: function keyFor(sym) {
                if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
                for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
              },
              useSetter: function () {
                setter = true;
              },
              useSimple: function () {
                setter = false;
              }
            });

            $export($export.S + $export.F * !USE_NATIVE, 'Object', {
              // 19.1.2.2 Object.create(O [, Properties])
              create: $create,
              // 19.1.2.4 Object.defineProperty(O, P, Attributes)
              defineProperty: $defineProperty,
              // 19.1.2.3 Object.defineProperties(O, Properties)
              defineProperties: $defineProperties,
              // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
              getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
              // 19.1.2.7 Object.getOwnPropertyNames(O)
              getOwnPropertyNames: $getOwnPropertyNames,
              // 19.1.2.8 Object.getOwnPropertySymbols(O)
              getOwnPropertySymbols: $getOwnPropertySymbols
            });

            // 24.3.2 JSON.stringify(value [, replacer [, space]])
            $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
              var S = $Symbol();
              // MS Edge converts symbol values to JSON as {}
              // WebKit converts symbol values to JSON as null
              // V8 throws on boxed symbols
              return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
            })), 'JSON', {
              stringify: function stringify(it) {
                var args = [it];
                var i = 1;
                var replacer, $replacer;
                while (arguments.length > i) args.push(arguments[i++]);
                $replacer = replacer = args[1];
                if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
                if (!isArray(replacer)) replacer = function (key, value) {
                  if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
                  if (!isSymbol(value)) return value;
                };
                args[1] = replacer;
                return _stringify.apply($JSON, args);
              }
            });

            // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
            $Symbol[PROTOTYPE][TO_PRIMITIVE] || _require38('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
            // 19.4.3.5 Symbol.prototype[@@toStringTag]
            setToStringTag($Symbol, 'Symbol');
            // 20.2.1.9 Math[@@toStringTag]
            setToStringTag(Math, 'Math', true);
            // 24.3.3 JSON[@@toStringTag]
            setToStringTag(global.JSON, 'JSON', true);

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_global.js": function (_require39, _exports36, _module35) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_global.js                                                                             //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
            var global = _module35.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self
            // eslint-disable-next-line no-new-func
            : Function('return this')();
            if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_has.js": function (_require40, _exports37, _module36) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_has.js                                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var hasOwnProperty = {}.hasOwnProperty;
            _module36.exports = function (it, key) {
              return hasOwnProperty.call(it, key);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_descriptors.js": function (_require41, _exports38, _module37) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_descriptors.js                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // Thank's IE8 for his funny defineProperty
            _module37.exports = !_require41('./_fails')(function () {
              return Object.defineProperty({}, 'a', { get: function () {
                  return 7;
                } }).a != 7;
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_fails.js": function (_require42, _exports39, _module38) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_fails.js                                                                              //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module38.exports = function (exec) {
              try {
                return !!exec();
              } catch (e) {
                return true;
              }
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_export.js": function (_require43, _exports41, _module39) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_export.js                                                                             //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var global = _require43('./_global');
            var core = _require43('./_core');
            var hide = _require43('./_hide');
            var redefine = _require43('./_redefine');
            var ctx = _require43('./_ctx');
            var PROTOTYPE = 'prototype';

            var $export = function (type, name, source) {
              var IS_FORCED = type & $export.F;
              var IS_GLOBAL = type & $export.G;
              var IS_STATIC = type & $export.S;
              var IS_PROTO = type & $export.P;
              var IS_BIND = type & $export.B;
              var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
              var _exports40 = IS_GLOBAL ? core : core[name] || (core[name] = {});
              var expProto = _exports40[PROTOTYPE] || (_exports40[PROTOTYPE] = {});
              var key, own, out, exp;
              if (IS_GLOBAL) source = name;
              for (key in source) {
                // contains in native
                own = !IS_FORCED && target && target[key] !== undefined;
                // export native or passed
                out = (own ? target : source)[key];
                // bind timers to global for call from export context
                exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
                // extend global
                if (target) redefine(target, key, out, type & $export.U);
                // export
                if (_exports40[key] != out) hide(_exports40, key, exp);
                if (IS_PROTO && expProto[key] != out) expProto[key] = out;
              }
            };
            global.core = core;
            // type bitmap
            $export.F = 1; // forced
            $export.G = 2; // global
            $export.S = 4; // static
            $export.P = 8; // proto
            $export.B = 16; // bind
            $export.W = 32; // wrap
            $export.U = 64; // safe
            $export.R = 128; // real proto method for `library`
            _module39.exports = $export;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_core.js": function (_require44, _exports42, _module40) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_core.js                                                                               //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var core = _module40.exports = { version: '2.5.7' };
            if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_hide.js": function (_require45, _exports43, _module41) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_hide.js                                                                               //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var dP = _require45('./_object-dp');
            var createDesc = _require45('./_property-desc');
            _module41.exports = _require45('./_descriptors') ? function (object, key, value) {
              return dP.f(object, key, createDesc(1, value));
            } : function (object, key, value) {
              object[key] = value;
              return object;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-dp.js": function (_require46, _exports44) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-dp.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var anObject = _require46('./_an-object');
            var IE8_DOM_DEFINE = _require46('./_ie8-dom-define');
            var toPrimitive = _require46('./_to-primitive');
            var dP = Object.defineProperty;

            _exports44.f = _require46('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
              anObject(O);
              P = toPrimitive(P, true);
              anObject(Attributes);
              if (IE8_DOM_DEFINE) try {
                return dP(O, P, Attributes);
              } catch (e) {/* empty */}
              if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
              if ('value' in Attributes) O[P] = Attributes.value;
              return O;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_an-object.js": function (_require47, _exports45, _module42) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_an-object.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var isObject = _require47('./_is-object');
            _module42.exports = function (it) {
              if (!isObject(it)) throw TypeError(it + ' is not an object!');
              return it;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_is-object.js": function (_require48, _exports46, _module43) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_is-object.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module43.exports = function (it) {
              return typeof it === 'object' ? it !== null : typeof it === 'function';
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_ie8-dom-define.js": function (_require49, _exports47, _module44) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_ie8-dom-define.js                                                                     //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module44.exports = !_require49('./_descriptors') && !_require49('./_fails')(function () {
              return Object.defineProperty(_require49('./_dom-create')('div'), 'a', { get: function () {
                  return 7;
                } }).a != 7;
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_dom-create.js": function (_require50, _exports48, _module45) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_dom-create.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var isObject = _require50('./_is-object');
            var document = _require50('./_global').document;
            // typeof document.createElement is 'object' in old IE
            var is = isObject(document) && isObject(document.createElement);
            _module45.exports = function (it) {
              return is ? document.createElement(it) : {};
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_to-primitive.js": function (_require51, _exports49, _module46) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_to-primitive.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 7.1.1 ToPrimitive(input [, PreferredType])
            var isObject = _require51('./_is-object');
            // instead of the ES6 spec version, we didn't implement @@toPrimitive case
            // and the second argument - flag - preferred type is a string
            _module46.exports = function (it, S) {
              if (!isObject(it)) return it;
              var fn, val;
              if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
              if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
              if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
              throw TypeError("Can't convert object to primitive value");
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_property-desc.js": function (_require52, _exports50, _module47) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_property-desc.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module47.exports = function (bitmap, value) {
              return {
                enumerable: !(bitmap & 1),
                configurable: !(bitmap & 2),
                writable: !(bitmap & 4),
                value: value
              };
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_redefine.js": function (_require53, _exports51, _module48) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_redefine.js                                                                           //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var global = _require53('./_global');
            var hide = _require53('./_hide');
            var has = _require53('./_has');
            var SRC = _require53('./_uid')('src');
            var TO_STRING = 'toString';
            var $toString = Function[TO_STRING];
            var TPL = ('' + $toString).split(TO_STRING);

            _require53('./_core').inspectSource = function (it) {
              return $toString.call(it);
            };

            (_module48.exports = function (O, key, val, safe) {
              var isFunction = typeof val == 'function';
              if (isFunction) has(val, 'name') || hide(val, 'name', key);
              if (O[key] === val) return;
              if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
              if (O === global) {
                O[key] = val;
              } else if (!safe) {
                delete O[key];
                hide(O, key, val);
              } else if (O[key]) {
                O[key] = val;
              } else {
                hide(O, key, val);
              }
              // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
            })(Function.prototype, TO_STRING, function toString() {
              return typeof this == 'function' && this[SRC] || $toString.call(this);
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_uid.js": function (_require54, _exports52, _module49) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_uid.js                                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var id = 0;
            var px = Math.random();
            _module49.exports = function (key) {
              return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_ctx.js": function (_require55, _exports53, _module50) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_ctx.js                                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // optional / simple context binding
            var aFunction = _require55('./_a-function');
            _module50.exports = function (fn, that, length) {
              aFunction(fn);
              if (that === undefined) return fn;
              switch (length) {
                case 1:
                  return function (a) {
                    return fn.call(that, a);
                  };
                case 2:
                  return function (a, b) {
                    return fn.call(that, a, b);
                  };
                case 3:
                  return function (a, b, c) {
                    return fn.call(that, a, b, c);
                  };
              }
              return function () /* ...args */{
                return fn.apply(that, arguments);
              };
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_a-function.js": function (_require56, _exports54, _module51) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_a-function.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module51.exports = function (it) {
              if (typeof it != 'function') throw TypeError(it + ' is not a function!');
              return it;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_meta.js": function (_require57, _exports55, _module52) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_meta.js                                                                               //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var META = _require57('./_uid')('meta');
            var isObject = _require57('./_is-object');
            var has = _require57('./_has');
            var setDesc = _require57('./_object-dp').f;
            var id = 0;
            var isExtensible = Object.isExtensible || function () {
              return true;
            };
            var FREEZE = !_require57('./_fails')(function () {
              return isExtensible(Object.preventExtensions({}));
            });
            var setMeta = function (it) {
              setDesc(it, META, { value: {
                  i: 'O' + ++id, // object ID
                  w: {} // weak collections IDs
                } });
            };
            var fastKey = function (it, create) {
              // return primitive with prefix
              if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
              if (!has(it, META)) {
                // can't set metadata to uncaught frozen object
                if (!isExtensible(it)) return 'F';
                // not necessary to add metadata
                if (!create) return 'E';
                // add missing metadata
                setMeta(it);
                // return object ID
              }return it[META].i;
            };
            var getWeak = function (it, create) {
              if (!has(it, META)) {
                // can't set metadata to uncaught frozen object
                if (!isExtensible(it)) return true;
                // not necessary to add metadata
                if (!create) return false;
                // add missing metadata
                setMeta(it);
                // return hash weak collections IDs
              }return it[META].w;
            };
            // add metadata on freeze-family methods calling
            var onFreeze = function (it) {
              if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
              return it;
            };
            var meta = _module52.exports = {
              KEY: META,
              NEED: false,
              fastKey: fastKey,
              getWeak: getWeak,
              onFreeze: onFreeze
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_shared.js": function (_require58, _exports56, _module53) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_shared.js                                                                             //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var core = _require58('./_core');
            var global = _require58('./_global');
            var SHARED = '__core-js_shared__';
            var store = global[SHARED] || (global[SHARED] = {});

            (_module53.exports = function (key, value) {
              return store[key] || (store[key] = value !== undefined ? value : {});
            })('versions', []).push({
              version: core.version,
              mode: _require58('./_library') ? 'pure' : 'global',
              copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_library.js": function (_require59, _exports57, _module54) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_library.js                                                                            //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module54.exports = false;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_set-to-string-tag.js": function (_require60, _exports58, _module55) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_set-to-string-tag.js                                                                  //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var def = _require60('./_object-dp').f;
            var has = _require60('./_has');
            var TAG = _require60('./_wks')('toStringTag');

            _module55.exports = function (it, tag, stat) {
              if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_wks.js": function (_require61, _exports59, _module56) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_wks.js                                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var store = _require61('./_shared')('wks');
            var uid = _require61('./_uid');
            var Symbol = _require61('./_global').Symbol;
            var USE_SYMBOL = typeof Symbol == 'function';

            var $exports = _module56.exports = function (name) {
              return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
            };

            $exports.store = store;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_wks-ext.js": function (_require62, _exports60) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_wks-ext.js                                                                            //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _exports60.f = _require62('./_wks');

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_wks-define.js": function (_require63, _exports61, _module57) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_wks-define.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var global = _require63('./_global');
            var core = _require63('./_core');
            var LIBRARY = _require63('./_library');
            var wksExt = _require63('./_wks-ext');
            var defineProperty = _require63('./_object-dp').f;
            _module57.exports = function (name) {
              var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
              if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_enum-keys.js": function (_require64, _exports62, _module58) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_enum-keys.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // all enumerable object keys, includes symbols
            var getKeys = _require64('./_object-keys');
            var gOPS = _require64('./_object-gops');
            var pIE = _require64('./_object-pie');
            _module58.exports = function (it) {
              var result = getKeys(it);
              var getSymbols = gOPS.f;
              if (getSymbols) {
                var symbols = getSymbols(it);
                var isEnum = pIE.f;
                var i = 0;
                var key;
                while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
              }return result;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-keys.js": function (_require65, _exports63, _module59) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-keys.js                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.14 / 15.2.3.14 Object.keys(O)
            var $keys = _require65('./_object-keys-internal');
            var enumBugKeys = _require65('./_enum-bug-keys');

            _module59.exports = Object.keys || function keys(O) {
              return $keys(O, enumBugKeys);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-keys-internal.js": function (_require66, _exports64, _module60) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-keys-internal.js                                                               //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var has = _require66('./_has');
            var toIObject = _require66('./_to-iobject');
            var arrayIndexOf = _require66('./_array-includes')(false);
            var IE_PROTO = _require66('./_shared-key')('IE_PROTO');

            _module60.exports = function (object, names) {
              var O = toIObject(object);
              var i = 0;
              var result = [];
              var key;
              for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
              // Don't enum bug & hidden keys
              while (names.length > i) if (has(O, key = names[i++])) {
                ~arrayIndexOf(result, key) || result.push(key);
              }
              return result;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_to-iobject.js": function (_require67, _exports65, _module61) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_to-iobject.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // to indexed object, toObject with fallback for non-array-like ES3 strings
            var IObject = _require67('./_iobject');
            var defined = _require67('./_defined');
            _module61.exports = function (it) {
              return IObject(defined(it));
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_iobject.js": function (_require68, _exports66, _module62) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_iobject.js                                                                            //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // fallback for non-array-like ES3 and non-enumerable old V8 strings
            var cof = _require68('./_cof');
            // eslint-disable-next-line no-prototype-builtins
            _module62.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
              return cof(it) == 'String' ? it.split('') : Object(it);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_cof.js": function (_require69, _exports67, _module63) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_cof.js                                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var toString = {}.toString;

            _module63.exports = function (it) {
              return toString.call(it).slice(8, -1);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_defined.js": function (_require70, _exports68, _module64) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_defined.js                                                                            //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 7.2.1 RequireObjectCoercible(argument)
            _module64.exports = function (it) {
              if (it == undefined) throw TypeError("Can't call method on  " + it);
              return it;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_array-includes.js": function (_require71, _exports69, _module65) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_array-includes.js                                                                     //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // false -> Array#indexOf
            // true  -> Array#includes
            var toIObject = _require71('./_to-iobject');
            var toLength = _require71('./_to-length');
            var toAbsoluteIndex = _require71('./_to-absolute-index');
            _module65.exports = function (IS_INCLUDES) {
              return function ($this, el, fromIndex) {
                var O = toIObject($this);
                var length = toLength(O.length);
                var index = toAbsoluteIndex(fromIndex, length);
                var value;
                // Array#includes uses SameValueZero equality algorithm
                // eslint-disable-next-line no-self-compare
                if (IS_INCLUDES && el != el) while (length > index) {
                  value = O[index++];
                  // eslint-disable-next-line no-self-compare
                  if (value != value) return true;
                  // Array#indexOf ignores holes, Array#includes - not
                } else for (; length > index; index++) if (IS_INCLUDES || index in O) {
                  if (O[index] === el) return IS_INCLUDES || index || 0;
                }return !IS_INCLUDES && -1;
              };
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_to-length.js": function (_require72, _exports70, _module66) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_to-length.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 7.1.15 ToLength
            var toInteger = _require72('./_to-integer');
            var min = Math.min;
            _module66.exports = function (it) {
              return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_to-integer.js": function (_require73, _exports71, _module67) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_to-integer.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 7.1.4 ToInteger
            var ceil = Math.ceil;
            var floor = Math.floor;
            _module67.exports = function (it) {
              return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_to-absolute-index.js": function (_require74, _exports72, _module68) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_to-absolute-index.js                                                                  //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var toInteger = _require74('./_to-integer');
            var max = Math.max;
            var min = Math.min;
            _module68.exports = function (index, length) {
              index = toInteger(index);
              return index < 0 ? max(index + length, 0) : min(index, length);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_shared-key.js": function (_require75, _exports73, _module69) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_shared-key.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var shared = _require75('./_shared')('keys');
            var uid = _require75('./_uid');
            _module69.exports = function (key) {
              return shared[key] || (shared[key] = uid(key));
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_enum-bug-keys.js": function (_require76, _exports74, _module70) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_enum-bug-keys.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // IE 8- don't enum bug keys
            _module70.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-gops.js": function (_require77, _exports75) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-gops.js                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _exports75.f = Object.getOwnPropertySymbols;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-pie.js": function (_require78, _exports76) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-pie.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _exports76.f = {}.propertyIsEnumerable;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_is-array.js": function (_require79, _exports77, _module71) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_is-array.js                                                                           //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 7.2.2 IsArray(argument)
            var cof = _require79('./_cof');
            _module71.exports = Array.isArray || function isArray(arg) {
              return cof(arg) == 'Array';
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-create.js": function (_require80, _exports78, _module72) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-create.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
            var anObject = _require80('./_an-object');
            var dPs = _require80('./_object-dps');
            var enumBugKeys = _require80('./_enum-bug-keys');
            var IE_PROTO = _require80('./_shared-key')('IE_PROTO');
            var Empty = function () {/* empty */};
            var PROTOTYPE = 'prototype';

            // Create object with fake `null` prototype: use iframe Object with cleared prototype
            var createDict = function () {
              // Thrash, waste and sodomy: IE GC bug
              var iframe = _require80('./_dom-create')('iframe');
              var i = enumBugKeys.length;
              var lt = '<';
              var gt = '>';
              var iframeDocument;
              iframe.style.display = 'none';
              _require80('./_html').appendChild(iframe);
              iframe.src = 'javascript:'; // eslint-disable-line no-script-url
              // createDict = iframe.contentWindow.Object;
              // html.removeChild(iframe);
              iframeDocument = iframe.contentWindow.document;
              iframeDocument.open();
              iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
              iframeDocument.close();
              createDict = iframeDocument.F;
              while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
              return createDict();
            };

            _module72.exports = Object.create || function create(O, Properties) {
              var result;
              if (O !== null) {
                Empty[PROTOTYPE] = anObject(O);
                result = new Empty();
                Empty[PROTOTYPE] = null;
                // add "__proto__" for Object.getPrototypeOf polyfill
                result[IE_PROTO] = O;
              } else result = createDict();
              return Properties === undefined ? result : dPs(result, Properties);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-dps.js": function (_require81, _exports79, _module73) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-dps.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var dP = _require81('./_object-dp');
            var anObject = _require81('./_an-object');
            var getKeys = _require81('./_object-keys');

            _module73.exports = _require81('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
              anObject(O);
              var keys = getKeys(Properties);
              var length = keys.length;
              var i = 0;
              var P;
              while (length > i) dP.f(O, P = keys[i++], Properties[P]);
              return O;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_html.js": function (_require82, _exports80, _module74) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_html.js                                                                               //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var document = _require82('./_global').document;
            _module74.exports = document && document.documentElement;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-gopn-ext.js": function (_require83, _exports81, _module75) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-gopn-ext.js                                                                    //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
            var toIObject = _require83('./_to-iobject');
            var gOPN = _require83('./_object-gopn').f;
            var toString = {}.toString;

            var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

            var getWindowNames = function (it) {
              try {
                return gOPN(it);
              } catch (e) {
                return windowNames.slice();
              }
            };

            _module75.exports.f = function getOwnPropertyNames(it) {
              return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-gopn.js": function (_require84, _exports82) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-gopn.js                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
            var $keys = _require84('./_object-keys-internal');
            var hiddenKeys = _require84('./_enum-bug-keys').concat('length', 'prototype');

            _exports82.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
              return $keys(O, hiddenKeys);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-gopd.js": function (_require85, _exports83) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-gopd.js                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var pIE = _require85('./_object-pie');
            var createDesc = _require85('./_property-desc');
            var toIObject = _require85('./_to-iobject');
            var toPrimitive = _require85('./_to-primitive');
            var has = _require85('./_has');
            var IE8_DOM_DEFINE = _require85('./_ie8-dom-define');
            var gOPD = Object.getOwnPropertyDescriptor;

            _exports83.f = _require85('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
              O = toIObject(O);
              P = toPrimitive(P, true);
              if (IE8_DOM_DEFINE) try {
                return gOPD(O, P);
              } catch (e) {/* empty */}
              if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.map.js": function (_require86, _exports84, _module76) {
            var strong = _require86('./_collection-strong');
            var validate = _require86('./_validate-collection');
            var MAP = 'Map';

            // 23.1 Map Objects
            _module76.exports = _require86('./_collection')(MAP, function (get) {
              return function Map() {
                return get(this, arguments.length > 0 ? arguments[0] : undefined);
              };
            }, {
              // 23.1.3.6 Map.prototype.get(key)
              get: function get(key) {
                var entry = strong.getEntry(validate(this, MAP), key);
                return entry && entry.v;
              },
              // 23.1.3.9 Map.prototype.set(key, value)
              set: function set(key, value) {
                return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
              }
            }, strong, true);

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_collection-strong.js": function (_require87, _exports85, _module77) {
            var dP = _require87('./_object-dp').f;
            var create = _require87('./_object-create');
            var redefineAll = _require87('./_redefine-all');
            var ctx = _require87('./_ctx');
            var anInstance = _require87('./_an-instance');
            var forOf = _require87('./_for-of');
            var $iterDefine = _require87('./_iter-define');
            var step = _require87('./_iter-step');
            var setSpecies = _require87('./_set-species');
            var DESCRIPTORS = _require87('./_descriptors');
            var fastKey = _require87('./_meta').fastKey;
            var validate = _require87('./_validate-collection');
            var SIZE = DESCRIPTORS ? '_s' : 'size';

            var getEntry = function (that, key) {
              // fast case
              var index = fastKey(key);
              var entry;
              if (index !== 'F') return that._i[index];
              // frozen object case
              for (entry = that._f; entry; entry = entry.n) {
                if (entry.k == key) return entry;
              }
            };

            _module77.exports = {
              getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
                var C = wrapper(function (that, iterable) {
                  anInstance(that, C, NAME, '_i');
                  that._t = NAME; // collection type
                  that._i = create(null); // index
                  that._f = undefined; // first entry
                  that._l = undefined; // last entry
                  that[SIZE] = 0; // size
                  if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
                });
                redefineAll(C.prototype, {
                  // 23.1.3.1 Map.prototype.clear()
                  // 23.2.3.2 Set.prototype.clear()
                  clear: function clear() {
                    for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
                      entry.r = true;
                      if (entry.p) entry.p = entry.p.n = undefined;
                      delete data[entry.i];
                    }
                    that._f = that._l = undefined;
                    that[SIZE] = 0;
                  },
                  // 23.1.3.3 Map.prototype.delete(key)
                  // 23.2.3.4 Set.prototype.delete(value)
                  'delete': function (key) {
                    var that = validate(this, NAME);
                    var entry = getEntry(that, key);
                    if (entry) {
                      var next = entry.n;
                      var prev = entry.p;
                      delete that._i[entry.i];
                      entry.r = true;
                      if (prev) prev.n = next;
                      if (next) next.p = prev;
                      if (that._f == entry) that._f = next;
                      if (that._l == entry) that._l = prev;
                      that[SIZE]--;
                    }return !!entry;
                  },
                  // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
                  // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
                  forEach: function forEach(callbackfn /* , that = undefined */) {
                    validate(this, NAME);
                    var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
                    var entry;
                    while (entry = entry ? entry.n : this._f) {
                      f(entry.v, entry.k, this);
                      // revert to the last existing entry
                      while (entry && entry.r) entry = entry.p;
                    }
                  },
                  // 23.1.3.7 Map.prototype.has(key)
                  // 23.2.3.7 Set.prototype.has(value)
                  has: function has(key) {
                    return !!getEntry(validate(this, NAME), key);
                  }
                });
                if (DESCRIPTORS) dP(C.prototype, 'size', {
                  get: function () {
                    return validate(this, NAME)[SIZE];
                  }
                });
                return C;
              },
              def: function (that, key, value) {
                var entry = getEntry(that, key);
                var prev, index;
                // change existing entry
                if (entry) {
                  entry.v = value;
                  // create new entry
                } else {
                  that._l = entry = {
                    i: index = fastKey(key, true), // <- index
                    k: key, // <- key
                    v: value, // <- value
                    p: prev = that._l, // <- previous entry
                    n: undefined, // <- next entry
                    r: false // <- removed
                  };
                  if (!that._f) that._f = entry;
                  if (prev) prev.n = entry;
                  that[SIZE]++;
                  // add to index
                  if (index !== 'F') that._i[index] = entry;
                }return that;
              },
              getEntry: getEntry,
              setStrong: function (C, NAME, IS_MAP) {
                // add .keys, .values, .entries, [@@iterator]
                // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
                $iterDefine(C, NAME, function (iterated, kind) {
                  this._t = validate(iterated, NAME); // target
                  this._k = kind; // kind
                  this._l = undefined; // previous
                }, function () {
                  var that = this;
                  var kind = that._k;
                  var entry = that._l;
                  // revert to the last existing entry
                  while (entry && entry.r) entry = entry.p;
                  // get next entry
                  if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
                    // or finish the iteration
                    that._t = undefined;
                    return step(1);
                  }
                  // return step by kind
                  if (kind == 'keys') return step(0, entry.k);
                  if (kind == 'values') return step(0, entry.v);
                  return step(0, [entry.k, entry.v]);
                }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

                // add [@@species], 23.1.2.2, 23.2.2.2
                setSpecies(NAME);
              }
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_redefine-all.js": function (_require88, _exports86, _module78) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_redefine-all.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var redefine = _require88('./_redefine');
            _module78.exports = function (target, src, safe) {
              for (var key in src) redefine(target, key, src[key], safe);
              return target;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_an-instance.js": function (_require89, _exports87, _module79) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_an-instance.js                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module79.exports = function (it, Constructor, name, forbiddenField) {
              if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {
                throw TypeError(name + ': incorrect invocation!');
              }return it;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_for-of.js": function (_require90, exports, _module80) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_for-of.js                                                                             //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var ctx = _require90('./_ctx');
            var call = _require90('./_iter-call');
            var isArrayIter = _require90('./_is-array-iter');
            var anObject = _require90('./_an-object');
            var toLength = _require90('./_to-length');
            var getIterFn = _require90('./core.get-iterator-method');
            var BREAK = {};
            var RETURN = {};
            var _exports88 = _module80.exports = function (iterable, entries, fn, that, ITERATOR) {
              var iterFn = ITERATOR ? function () {
                return iterable;
              } : getIterFn(iterable);
              var f = ctx(fn, that, entries ? 2 : 1);
              var index = 0;
              var length, step, iterator, result;
              if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
              // fast case for arrays with default iterator
              if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
                result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
                if (result === BREAK || result === RETURN) return result;
              } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
                result = call(iterator, f, step.value, entries);
                if (result === BREAK || result === RETURN) return result;
              }
            };
            _exports88.BREAK = BREAK;
            _exports88.RETURN = RETURN;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_iter-call.js": function (_require91, _exports89, _module81) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_iter-call.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // call something on iterator step with safe closing on error
            var anObject = _require91('./_an-object');
            _module81.exports = function (iterator, fn, value, entries) {
              try {
                return entries ? fn(anObject(value)[0], value[1]) : fn(value);
                // 7.4.6 IteratorClose(iterator, completion)
              } catch (e) {
                var ret = iterator['return'];
                if (ret !== undefined) anObject(ret.call(iterator));
                throw e;
              }
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_is-array-iter.js": function (_require92, _exports90, _module82) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_is-array-iter.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // check on default Array iterator
            var Iterators = _require92('./_iterators');
            var ITERATOR = _require92('./_wks')('iterator');
            var ArrayProto = Array.prototype;

            _module82.exports = function (it) {
              return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_iterators.js": function (_require93, _exports91, _module83) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_iterators.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module83.exports = {};

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "core.get-iterator-method.js": function (_require94, _exports92, _module84) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/core.get-iterator-method.js                                                            //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var classof = _require94('./_classof');
            var ITERATOR = _require94('./_wks')('iterator');
            var Iterators = _require94('./_iterators');
            _module84.exports = _require94('./_core').getIteratorMethod = function (it) {
              if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_classof.js": function (_require95, _exports93, _module85) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_classof.js                                                                            //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // getting tag from 19.1.3.6 Object.prototype.toString()
            var cof = _require95('./_cof');
            var TAG = _require95('./_wks')('toStringTag');
            // ES3 wrong here
            var ARG = cof(function () {
              return arguments;
            }()) == 'Arguments';

            // fallback for IE11 Script Access Denied error
            var tryGet = function (it, key) {
              try {
                return it[key];
              } catch (e) {/* empty */}
            };

            _module85.exports = function (it) {
              var O, T, B;
              return it === undefined ? 'Undefined' : it === null ? 'Null'
              // @@toStringTag case
              : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
              // builtinTag case
              : ARG ? cof(O)
              // ES3 arguments fallback
              : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_iter-define.js": function (_require96, _exports94, _module86) {
            var LIBRARY = _require96('./_library');
            var $export = _require96('./_export');
            var redefine = _require96('./_redefine');
            var hide = _require96('./_hide');
            var Iterators = _require96('./_iterators');
            var $iterCreate = _require96('./_iter-create');
            var setToStringTag = _require96('./_set-to-string-tag');
            var getPrototypeOf = _require96('./_object-gpo');
            var ITERATOR = _require96('./_wks')('iterator');
            var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
            var FF_ITERATOR = '@@iterator';
            var KEYS = 'keys';
            var VALUES = 'values';

            var returnThis = function () {
              return this;
            };

            _module86.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
              $iterCreate(Constructor, NAME, next);
              var getMethod = function (kind) {
                if (!BUGGY && kind in proto) return proto[kind];
                switch (kind) {
                  case KEYS:
                    return function keys() {
                      return new Constructor(this, kind);
                    };
                  case VALUES:
                    return function values() {
                      return new Constructor(this, kind);
                    };
                }return function entries() {
                  return new Constructor(this, kind);
                };
              };
              var TAG = NAME + ' Iterator';
              var DEF_VALUES = DEFAULT == VALUES;
              var VALUES_BUG = false;
              var proto = Base.prototype;
              var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
              var $default = $native || getMethod(DEFAULT);
              var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
              var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
              var methods, key, IteratorPrototype;
              // Fix native
              if ($anyNative) {
                IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
                if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
                  // Set @@toStringTag to native iterators
                  setToStringTag(IteratorPrototype, TAG, true);
                  // fix for some old engines
                  if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
                }
              }
              // fix Array#{values, @@iterator}.name in V8 / FF
              if (DEF_VALUES && $native && $native.name !== VALUES) {
                VALUES_BUG = true;
                $default = function values() {
                  return $native.call(this);
                };
              }
              // Define iterator
              if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
                hide(proto, ITERATOR, $default);
              }
              // Plug for library
              Iterators[NAME] = $default;
              Iterators[TAG] = returnThis;
              if (DEFAULT) {
                methods = {
                  values: DEF_VALUES ? $default : getMethod(VALUES),
                  keys: IS_SET ? $default : getMethod(KEYS),
                  entries: $entries
                };
                if (FORCED) for (key in methods) {
                  if (!(key in proto)) redefine(proto, key, methods[key]);
                } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
              }
              return methods;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_iter-create.js": function (_require97, _exports95, _module87) {
            var create = _require97('./_object-create');
            var descriptor = _require97('./_property-desc');
            var setToStringTag = _require97('./_set-to-string-tag');
            var IteratorPrototype = {};

            // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
            _require97('./_hide')(IteratorPrototype, _require97('./_wks')('iterator'), function () {
              return this;
            });

            _module87.exports = function (Constructor, NAME, next) {
              Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
              setToStringTag(Constructor, NAME + ' Iterator');
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-gpo.js": function (_require98, _exports96, _module88) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-gpo.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
            var has = _require98('./_has');
            var toObject = _require98('./_to-object');
            var IE_PROTO = _require98('./_shared-key')('IE_PROTO');
            var ObjectProto = Object.prototype;

            _module88.exports = Object.getPrototypeOf || function (O) {
              O = toObject(O);
              if (has(O, IE_PROTO)) return O[IE_PROTO];
              if (typeof O.constructor == 'function' && O instanceof O.constructor) {
                return O.constructor.prototype;
              }return O instanceof Object ? ObjectProto : null;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_to-object.js": function (_require99, _exports97, _module89) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_to-object.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 7.1.13 ToObject(argument)
            var defined = _require99('./_defined');
            _module89.exports = function (it) {
              return Object(defined(it));
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_iter-step.js": function (_require100, _exports98, _module90) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_iter-step.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module90.exports = function (done, value) {
              return { value: value, done: !!done };
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_set-species.js": function (_require101, _exports99, _module91) {
            var global = _require101('./_global');
            var dP = _require101('./_object-dp');
            var DESCRIPTORS = _require101('./_descriptors');
            var SPECIES = _require101('./_wks')('species');

            _module91.exports = function (KEY) {
              var C = global[KEY];
              if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
                configurable: true,
                get: function () {
                  return this;
                }
              });
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_validate-collection.js": function (_require102, _exports100, _module92) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_validate-collection.js                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var isObject = _require102('./_is-object');
            _module92.exports = function (it, TYPE) {
              if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
              return it;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_collection.js": function (_require103, _exports101, _module93) {
            var global = _require103('./_global');
            var $export = _require103('./_export');
            var redefine = _require103('./_redefine');
            var redefineAll = _require103('./_redefine-all');
            var meta = _require103('./_meta');
            var forOf = _require103('./_for-of');
            var anInstance = _require103('./_an-instance');
            var isObject = _require103('./_is-object');
            var fails = _require103('./_fails');
            var $iterDetect = _require103('./_iter-detect');
            var setToStringTag = _require103('./_set-to-string-tag');
            var inheritIfRequired = _require103('./_inherit-if-required');

            _module93.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
              var Base = global[NAME];
              var C = Base;
              var ADDER = IS_MAP ? 'set' : 'add';
              var proto = C && C.prototype;
              var O = {};
              var fixMethod = function (KEY) {
                var fn = proto[KEY];
                redefine(proto, KEY, KEY == 'delete' ? function (a) {
                  return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
                } : KEY == 'has' ? function has(a) {
                  return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
                } : KEY == 'get' ? function get(a) {
                  return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
                } : KEY == 'add' ? function add(a) {
                  fn.call(this, a === 0 ? 0 : a);return this;
                } : function set(a, b) {
                  fn.call(this, a === 0 ? 0 : a, b);return this;
                });
              };
              if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
                new C().entries().next();
              }))) {
                // create collection constructor
                C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
                redefineAll(C.prototype, methods);
                meta.NEED = true;
              } else {
                var instance = new C();
                // early implementations not supports chaining
                var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
                // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
                var THROWS_ON_PRIMITIVES = fails(function () {
                  instance.has(1);
                });
                // most early implementations doesn't supports iterables, most modern - not close it correctly
                var ACCEPT_ITERABLES = $iterDetect(function (iter) {
                  new C(iter);
                }); // eslint-disable-line no-new
                // for early implementations -0 and +0 not the same
                var BUGGY_ZERO = !IS_WEAK && fails(function () {
                  // V8 ~ Chromium 42- fails only with 5+ elements
                  var $instance = new C();
                  var index = 5;
                  while (index--) $instance[ADDER](index, index);
                  return !$instance.has(-0);
                });
                if (!ACCEPT_ITERABLES) {
                  C = wrapper(function (target, iterable) {
                    anInstance(target, C, NAME);
                    var that = inheritIfRequired(new Base(), target, C);
                    if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
                    return that;
                  });
                  C.prototype = proto;
                  proto.constructor = C;
                }
                if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
                  fixMethod('delete');
                  fixMethod('has');
                  IS_MAP && fixMethod('get');
                }
                if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
                // weak collections should not contains .clear method
                if (IS_WEAK && proto.clear) delete proto.clear;
              }

              setToStringTag(C, NAME);

              O[NAME] = C;
              $export($export.G + $export.W + $export.F * (C != Base), O);

              if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

              return C;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_iter-detect.js": function (_require104, _exports102, _module94) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_iter-detect.js                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var ITERATOR = _require104('./_wks')('iterator');
            var SAFE_CLOSING = false;

            try {
              var riter = [7][ITERATOR]();
              riter['return'] = function () {
                SAFE_CLOSING = true;
              };
              // eslint-disable-next-line no-throw-literal
              Array.from(riter, function () {
                throw 2;
              });
            } catch (e) {/* empty */}

            _module94.exports = function (exec, skipClosing) {
              if (!skipClosing && !SAFE_CLOSING) return false;
              var safe = false;
              try {
                var arr = [7];
                var iter = arr[ITERATOR]();
                iter.next = function () {
                  return { done: safe = true };
                };
                arr[ITERATOR] = function () {
                  return iter;
                };
                exec(arr);
              } catch (e) {/* empty */}
              return safe;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_inherit-if-required.js": function (_require105, _exports103, _module95) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_inherit-if-required.js                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var isObject = _require105('./_is-object');
            var setPrototypeOf = _require105('./_set-proto').set;
            _module95.exports = function (that, target, C) {
              var S = target.constructor;
              var P;
              if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
                setPrototypeOf(that, P);
              }return that;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_set-proto.js": function (_require106, _exports104, _module96) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_set-proto.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // Works with __proto__ only. Old v8 can't work with null proto objects.
            /* eslint-disable no-proto */
            var isObject = _require106('./_is-object');
            var anObject = _require106('./_an-object');
            var check = function (O, proto) {
              anObject(O);
              if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
            };
            _module96.exports = {
              set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
              function (test, buggy, set) {
                try {
                  set = _require106('./_ctx')(Function.call, _require106('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
                  set(test, []);
                  buggy = !(test instanceof Array);
                } catch (e) {
                  buggy = true;
                }
                return function setPrototypeOf(O, proto) {
                  check(O, proto);
                  if (buggy) O.__proto__ = proto;else set(O, proto);
                  return O;
                };
              }({}, false) : undefined),
              check: check
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.set.js": function (_require107, _exports105, _module97) {
            var strong = _require107('./_collection-strong');
            var validate = _require107('./_validate-collection');
            var SET = 'Set';

            // 23.2 Set Objects
            _module97.exports = _require107('./_collection')(SET, function (get) {
              return function Set() {
                return get(this, arguments.length > 0 ? arguments[0] : undefined);
              };
            }, {
              // 23.2.3.1 Set.prototype.add(value)
              add: function add(value) {
                return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
              }
            }, strong);

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.iterator.js": function (_require108) {
            var $at = _require108('./_string-at')(true);

            // 21.1.3.27 String.prototype[@@iterator]()
            _require108('./_iter-define')(String, 'String', function (iterated) {
              this._t = String(iterated); // target
              this._i = 0; // next index
              // 21.1.5.2.1 %StringIteratorPrototype%.next()
            }, function () {
              var O = this._t;
              var index = this._i;
              var point;
              if (index >= O.length) return { value: undefined, done: true };
              point = $at(O, index);
              this._i += point.length;
              return { value: point, done: false };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_string-at.js": function (_require109, _exports106, _module98) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_string-at.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var toInteger = _require109('./_to-integer');
            var defined = _require109('./_defined');
            // true  -> String#at
            // false -> String#codePointAt
            _module98.exports = function (TO_STRING) {
              return function (that, pos) {
                var s = String(defined(that));
                var i = toInteger(pos);
                var l = s.length;
                var a, b;
                if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
                a = s.charCodeAt(i);
                return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
              };
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.is-array.js": function (_require110) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.array.is-array.js                                                                  //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
            var $export = _require110('./_export');

            $export($export.S, 'Array', { isArray: _require110('./_is-array') });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.from.js": function (_require111) {
            var ctx = _require111('./_ctx');
            var $export = _require111('./_export');
            var toObject = _require111('./_to-object');
            var call = _require111('./_iter-call');
            var isArrayIter = _require111('./_is-array-iter');
            var toLength = _require111('./_to-length');
            var createProperty = _require111('./_create-property');
            var getIterFn = _require111('./core.get-iterator-method');

            $export($export.S + $export.F * !_require111('./_iter-detect')(function (iter) {
              Array.from(iter);
            }), 'Array', {
              // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
              from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
                var O = toObject(arrayLike);
                var C = typeof this == 'function' ? this : Array;
                var aLen = arguments.length;
                var mapfn = aLen > 1 ? arguments[1] : undefined;
                var mapping = mapfn !== undefined;
                var index = 0;
                var iterFn = getIterFn(O);
                var length, result, step, iterator;
                if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
                // if object isn't iterable or it's array with default iterator - use simple case
                if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
                  for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
                    createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
                  }
                } else {
                  length = toLength(O.length);
                  for (result = new C(length); length > index; index++) {
                    createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
                  }
                }
                result.length = index;
                return result;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_create-property.js": function (_require112, _exports107, _module99) {
            var $defineProperty = _require112('./_object-dp');
            var createDesc = _require112('./_property-desc');

            _module99.exports = function (object, index, value) {
              if (index in object) $defineProperty.f(object, index, createDesc(0, value));else object[index] = value;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.of.js": function (_require113) {
            var $export = _require113('./_export');
            var createProperty = _require113('./_create-property');

            // WebKit Array.of isn't generic
            $export($export.S + $export.F * _require113('./_fails')(function () {
              function F() {/* empty */}
              return !(Array.of.call(F) instanceof F);
            }), 'Array', {
              // 22.1.2.3 Array.of( ...items)
              of: function of() /* ...args */{
                var index = 0;
                var aLen = arguments.length;
                var result = new (typeof this == 'function' ? this : Array)(aLen);
                while (aLen > index) createProperty(result, index, arguments[index++]);
                result.length = aLen;
                return result;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.join.js": function (_require114) {
            // 22.1.3.13 Array.prototype.join(separator)
            var $export = _require114('./_export');
            var toIObject = _require114('./_to-iobject');
            var arrayJoin = [].join;

            // fallback for not array-like strings
            $export($export.P + $export.F * (_require114('./_iobject') != Object || !_require114('./_strict-method')(arrayJoin)), 'Array', {
              join: function join(separator) {
                return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_strict-method.js": function (_require115, _exports108, _module100) {
            var fails = _require115('./_fails');

            _module100.exports = function (method, arg) {
              return !!method && fails(function () {
                // eslint-disable-next-line no-useless-call
                arg ? method.call(null, function () {/* empty */}, 1) : method.call(null);
              });
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.slice.js": function (_require116) {
            var $export = _require116('./_export');
            var html = _require116('./_html');
            var cof = _require116('./_cof');
            var toAbsoluteIndex = _require116('./_to-absolute-index');
            var toLength = _require116('./_to-length');
            var arraySlice = [].slice;

            // fallback for not array-like ES3 strings and DOM objects
            $export($export.P + $export.F * _require116('./_fails')(function () {
              if (html) arraySlice.call(html);
            }), 'Array', {
              slice: function slice(begin, end) {
                var len = toLength(this.length);
                var klass = cof(this);
                end = end === undefined ? len : end;
                if (klass == 'Array') return arraySlice.call(this, begin, end);
                var start = toAbsoluteIndex(begin, len);
                var upTo = toAbsoluteIndex(end, len);
                var size = toLength(upTo - start);
                var cloned = new Array(size);
                var i = 0;
                for (; i < size; i++) cloned[i] = klass == 'String' ? this.charAt(start + i) : this[start + i];
                return cloned;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.sort.js": function (_require117) {
            var $export = _require117('./_export');
            var aFunction = _require117('./_a-function');
            var toObject = _require117('./_to-object');
            var fails = _require117('./_fails');
            var $sort = [].sort;
            var test = [1, 2, 3];

            $export($export.P + $export.F * (fails(function () {
              // IE8-
              test.sort(undefined);
            }) || !fails(function () {
              // V8 bug
              test.sort(null);
              // Old WebKit
            }) || !_require117('./_strict-method')($sort)), 'Array', {
              // 22.1.3.25 Array.prototype.sort(comparefn)
              sort: function sort(comparefn) {
                return comparefn === undefined ? $sort.call(toObject(this)) : $sort.call(toObject(this), aFunction(comparefn));
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.for-each.js": function (_require118) {
            var $export = _require118('./_export');
            var $forEach = _require118('./_array-methods')(0);
            var STRICT = _require118('./_strict-method')([].forEach, true);

            $export($export.P + $export.F * !STRICT, 'Array', {
              // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
              forEach: function forEach(callbackfn /* , thisArg */) {
                return $forEach(this, callbackfn, arguments[1]);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_array-methods.js": function (_require119, _exports109, _module101) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_array-methods.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 0 -> Array#forEach
            // 1 -> Array#map
            // 2 -> Array#filter
            // 3 -> Array#some
            // 4 -> Array#every
            // 5 -> Array#find
            // 6 -> Array#findIndex
            var ctx = _require119('./_ctx');
            var IObject = _require119('./_iobject');
            var toObject = _require119('./_to-object');
            var toLength = _require119('./_to-length');
            var asc = _require119('./_array-species-create');
            _module101.exports = function (TYPE, $create) {
              var IS_MAP = TYPE == 1;
              var IS_FILTER = TYPE == 2;
              var IS_SOME = TYPE == 3;
              var IS_EVERY = TYPE == 4;
              var IS_FIND_INDEX = TYPE == 6;
              var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
              var create = $create || asc;
              return function ($this, callbackfn, that) {
                var O = toObject($this);
                var self = IObject(O);
                var f = ctx(callbackfn, that, 3);
                var length = toLength(self.length);
                var index = 0;
                var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
                var val, res;
                for (; length > index; index++) if (NO_HOLES || index in self) {
                  val = self[index];
                  res = f(val, index, O);
                  if (TYPE) {
                    if (IS_MAP) result[index] = res; // map
                    else if (res) switch (TYPE) {
                        case 3:
                          return true; // some
                        case 5:
                          return val; // find
                        case 6:
                          return index; // findIndex
                        case 2:
                          result.push(val); // filter
                      } else if (IS_EVERY) return false; // every
                  }
                }
                return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
              };
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_array-species-create.js": function (_require120, _exports110, _module102) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_array-species-create.js                                                               //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 9.4.2.3 ArraySpeciesCreate(originalArray, length)
            var speciesConstructor = _require120('./_array-species-constructor');

            _module102.exports = function (original, length) {
              return new (speciesConstructor(original))(length);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_array-species-constructor.js": function (_require121, _exports111, _module103) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_array-species-constructor.js                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var isObject = _require121('./_is-object');
            var isArray = _require121('./_is-array');
            var SPECIES = _require121('./_wks')('species');

            _module103.exports = function (original) {
              var C;
              if (isArray(original)) {
                C = original.constructor;
                // cross-realm fallback
                if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
                if (isObject(C)) {
                  C = C[SPECIES];
                  if (C === null) C = undefined;
                }
              }return C === undefined ? Array : C;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.map.js": function (_require122) {
            var $export = _require122('./_export');
            var $map = _require122('./_array-methods')(1);

            $export($export.P + $export.F * !_require122('./_strict-method')([].map, true), 'Array', {
              // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
              map: function map(callbackfn /* , thisArg */) {
                return $map(this, callbackfn, arguments[1]);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.filter.js": function (_require123) {
            var $export = _require123('./_export');
            var $filter = _require123('./_array-methods')(2);

            $export($export.P + $export.F * !_require123('./_strict-method')([].filter, true), 'Array', {
              // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
              filter: function filter(callbackfn /* , thisArg */) {
                return $filter(this, callbackfn, arguments[1]);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.some.js": function (_require124) {
            var $export = _require124('./_export');
            var $some = _require124('./_array-methods')(3);

            $export($export.P + $export.F * !_require124('./_strict-method')([].some, true), 'Array', {
              // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
              some: function some(callbackfn /* , thisArg */) {
                return $some(this, callbackfn, arguments[1]);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.every.js": function (_require125) {
            var $export = _require125('./_export');
            var $every = _require125('./_array-methods')(4);

            $export($export.P + $export.F * !_require125('./_strict-method')([].every, true), 'Array', {
              // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
              every: function every(callbackfn /* , thisArg */) {
                return $every(this, callbackfn, arguments[1]);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.reduce.js": function (_require126) {
            var $export = _require126('./_export');
            var $reduce = _require126('./_array-reduce');

            $export($export.P + $export.F * !_require126('./_strict-method')([].reduce, true), 'Array', {
              // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
              reduce: function reduce(callbackfn /* , initialValue */) {
                return $reduce(this, callbackfn, arguments.length, arguments[1], false);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_array-reduce.js": function (_require127, _exports112, _module104) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_array-reduce.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var aFunction = _require127('./_a-function');
            var toObject = _require127('./_to-object');
            var IObject = _require127('./_iobject');
            var toLength = _require127('./_to-length');

            _module104.exports = function (that, callbackfn, aLen, memo, isRight) {
              aFunction(callbackfn);
              var O = toObject(that);
              var self = IObject(O);
              var length = toLength(O.length);
              var index = isRight ? length - 1 : 0;
              var i = isRight ? -1 : 1;
              if (aLen < 2) for (;;) {
                if (index in self) {
                  memo = self[index];
                  index += i;
                  break;
                }
                index += i;
                if (isRight ? index < 0 : length <= index) {
                  throw TypeError('Reduce of empty array with no initial value');
                }
              }
              for (; isRight ? index >= 0 : length > index; index += i) if (index in self) {
                memo = callbackfn(memo, self[index], index, O);
              }
              return memo;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.reduce-right.js": function (_require128) {
            var $export = _require128('./_export');
            var $reduce = _require128('./_array-reduce');

            $export($export.P + $export.F * !_require128('./_strict-method')([].reduceRight, true), 'Array', {
              // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
              reduceRight: function reduceRight(callbackfn /* , initialValue */) {
                return $reduce(this, callbackfn, arguments.length, arguments[1], true);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.index-of.js": function (_require129) {
            var $export = _require129('./_export');
            var $indexOf = _require129('./_array-includes')(false);
            var $native = [].indexOf;
            var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

            $export($export.P + $export.F * (NEGATIVE_ZERO || !_require129('./_strict-method')($native)), 'Array', {
              // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
              indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
                return NEGATIVE_ZERO
                // convert -0 to +0
                ? $native.apply(this, arguments) || 0 : $indexOf(this, searchElement, arguments[1]);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.last-index-of.js": function (_require130) {
            var $export = _require130('./_export');
            var toIObject = _require130('./_to-iobject');
            var toInteger = _require130('./_to-integer');
            var toLength = _require130('./_to-length');
            var $native = [].lastIndexOf;
            var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

            $export($export.P + $export.F * (NEGATIVE_ZERO || !_require130('./_strict-method')($native)), 'Array', {
              // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
              lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
                // convert -0 to +0
                if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
                var O = toIObject(this);
                var length = toLength(O.length);
                var index = length - 1;
                if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
                if (index < 0) index = length + index;
                for (; index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
                return -1;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.copy-within.js": function (_require131) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.array.copy-within.js                                                               //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
            var $export = _require131('./_export');

            $export($export.P, 'Array', { copyWithin: _require131('./_array-copy-within') });

            _require131('./_add-to-unscopables')('copyWithin');

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_array-copy-within.js": function (_require132, _exports113, _module105) {
            var toObject = _require132('./_to-object');
            var toAbsoluteIndex = _require132('./_to-absolute-index');
            var toLength = _require132('./_to-length');

            _module105.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
              var O = toObject(this);
              var len = toLength(O.length);
              var to = toAbsoluteIndex(target, len);
              var from = toAbsoluteIndex(start, len);
              var end = arguments.length > 2 ? arguments[2] : undefined;
              var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
              var inc = 1;
              if (from < to && to < from + count) {
                inc = -1;
                from += count - 1;
                to += count - 1;
              }
              while (count-- > 0) {
                if (from in O) O[to] = O[from];else delete O[to];
                to += inc;
                from += inc;
              }return O;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_add-to-unscopables.js": function (_require133, _exports114, _module106) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_add-to-unscopables.js                                                                 //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 22.1.3.31 Array.prototype[@@unscopables]
            var UNSCOPABLES = _require133('./_wks')('unscopables');
            var ArrayProto = Array.prototype;
            if (ArrayProto[UNSCOPABLES] == undefined) _require133('./_hide')(ArrayProto, UNSCOPABLES, {});
            _module106.exports = function (key) {
              ArrayProto[UNSCOPABLES][key] = true;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.fill.js": function (_require134) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.array.fill.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
            var $export = _require134('./_export');

            $export($export.P, 'Array', { fill: _require134('./_array-fill') });

            _require134('./_add-to-unscopables')('fill');

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_array-fill.js": function (_require135, _exports115, _module107) {
            var toObject = _require135('./_to-object');
            var toAbsoluteIndex = _require135('./_to-absolute-index');
            var toLength = _require135('./_to-length');
            _module107.exports = function fill(value /* , start = 0, end = @length */) {
              var O = toObject(this);
              var length = toLength(O.length);
              var aLen = arguments.length;
              var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
              var end = aLen > 2 ? arguments[2] : undefined;
              var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
              while (endPos > index) O[index++] = value;
              return O;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.find.js": function (_require136) {
            // 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
            var $export = _require136('./_export');
            var $find = _require136('./_array-methods')(5);
            var KEY = 'find';
            var forced = true;
            // Shouldn't skip holes
            if (KEY in []) Array(1)[KEY](function () {
              forced = false;
            });
            $export($export.P + $export.F * forced, 'Array', {
              find: function find(callbackfn /* , that = undefined */) {
                return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
              }
            });
            _require136('./_add-to-unscopables')(KEY);

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.find-index.js": function (_require137) {
            // 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
            var $export = _require137('./_export');
            var $find = _require137('./_array-methods')(6);
            var KEY = 'findIndex';
            var forced = true;
            // Shouldn't skip holes
            if (KEY in []) Array(1)[KEY](function () {
              forced = false;
            });
            $export($export.P + $export.F * forced, 'Array', {
              findIndex: function findIndex(callbackfn /* , that = undefined */) {
                return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
              }
            });
            _require137('./_add-to-unscopables')(KEY);

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.species.js": function (_require138) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.array.species.js                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require138('./_set-species')('Array');

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.array.iterator.js": function (_require139, _exports116, _module108) {
            var addToUnscopables = _require139('./_add-to-unscopables');
            var step = _require139('./_iter-step');
            var Iterators = _require139('./_iterators');
            var toIObject = _require139('./_to-iobject');

            // 22.1.3.4 Array.prototype.entries()
            // 22.1.3.13 Array.prototype.keys()
            // 22.1.3.29 Array.prototype.values()
            // 22.1.3.30 Array.prototype[@@iterator]()
            _module108.exports = _require139('./_iter-define')(Array, 'Array', function (iterated, kind) {
              this._t = toIObject(iterated); // target
              this._i = 0; // next index
              this._k = kind; // kind
              // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
            }, function () {
              var O = this._t;
              var kind = this._k;
              var index = this._i++;
              if (!O || index >= O.length) {
                this._t = undefined;
                return step(1);
              }
              if (kind == 'keys') return step(0, index);
              if (kind == 'values') return step(0, O[index]);
              return step(0, [index, O[index]]);
            }, 'values');

            // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
            Iterators.Arguments = Iterators.Array;

            addToUnscopables('keys');
            addToUnscopables('values');
            addToUnscopables('entries');

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.function.bind.js": function (_require140) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.function.bind.js                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
            var $export = _require140('./_export');

            $export($export.P, 'Function', { bind: _require140('./_bind') });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_bind.js": function (_require141, _exports117, _module109) {
            var aFunction = _require141('./_a-function');
            var isObject = _require141('./_is-object');
            var invoke = _require141('./_invoke');
            var arraySlice = [].slice;
            var factories = {};

            var construct = function (F, len, args) {
              if (!(len in factories)) {
                for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
                // eslint-disable-next-line no-new-func
                factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
              }return factories[len](F, args);
            };

            _module109.exports = Function.bind || function bind(that /* , ...args */) {
              var fn = aFunction(this);
              var partArgs = arraySlice.call(arguments, 1);
              var bound = function () /* args... */{
                var args = partArgs.concat(arraySlice.call(arguments));
                return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
              };
              if (isObject(fn.prototype)) bound.prototype = fn.prototype;
              return bound;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_invoke.js": function (_require142, _exports118, _module110) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_invoke.js                                                                             //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // fast apply, http://jsperf.lnkit.com/fast-apply/5
            _module110.exports = function (fn, args, that) {
              var un = that === undefined;
              switch (args.length) {
                case 0:
                  return un ? fn() : fn.call(that);
                case 1:
                  return un ? fn(args[0]) : fn.call(that, args[0]);
                case 2:
                  return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);
                case 3:
                  return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);
                case 4:
                  return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);
              }return fn.apply(that, args);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.function.name.js": function (_require143) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.function.name.js                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var dP = _require143('./_object-dp').f;
            var FProto = Function.prototype;
            var nameRE = /^\s*function ([^ (]*)/;
            var NAME = 'name';

            // 19.2.4.2 name
            NAME in FProto || _require143('./_descriptors') && dP(FProto, NAME, {
              configurable: true,
              get: function () {
                try {
                  return ('' + this).match(nameRE)[1];
                } catch (e) {
                  return '';
                }
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.function.has-instance.js": function (_require144) {
            var isObject = _require144('./_is-object');
            var getPrototypeOf = _require144('./_object-gpo');
            var HAS_INSTANCE = _require144('./_wks')('hasInstance');
            var FunctionProto = Function.prototype;
            // 19.2.3.6 Function.prototype[@@hasInstance](V)
            if (!(HAS_INSTANCE in FunctionProto)) _require144('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {
                if (typeof this != 'function' || !isObject(O)) return false;
                if (!isObject(this.prototype)) return O instanceof this;
                // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
                while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
                return false;
              } });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.acosh.js": function (_require145) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.acosh.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.3 Math.acosh(x)
            var $export = _require145('./_export');
            var log1p = _require145('./_math-log1p');
            var sqrt = Math.sqrt;
            var $acosh = Math.acosh;

            $export($export.S + $export.F * !($acosh
            // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
            && Math.floor($acosh(Number.MAX_VALUE)) == 710
            // Tor Browser bug: Math.acosh(Infinity) -> NaN
            && $acosh(Infinity) == Infinity), 'Math', {
              acosh: function acosh(x) {
                return (x = +x) < 1 ? NaN : x > 94906265.62425156 ? Math.log(x) + Math.LN2 : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_math-log1p.js": function (_require146, _exports119, _module111) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_math-log1p.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.20 Math.log1p(x)
            _module111.exports = Math.log1p || function log1p(x) {
              return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.asinh.js": function (_require147) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.asinh.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.5 Math.asinh(x)
            var $export = _require147('./_export');
            var $asinh = Math.asinh;

            function asinh(x) {
              return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
            }

            // Tor Browser bug: Math.asinh(0) -> -0
            $export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.atanh.js": function (_require148) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.atanh.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.7 Math.atanh(x)
            var $export = _require148('./_export');
            var $atanh = Math.atanh;

            // Tor Browser bug: Math.atanh(-0) -> 0
            $export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
              atanh: function atanh(x) {
                return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.cbrt.js": function (_require149) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.cbrt.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.9 Math.cbrt(x)
            var $export = _require149('./_export');
            var sign = _require149('./_math-sign');

            $export($export.S, 'Math', {
              cbrt: function cbrt(x) {
                return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_math-sign.js": function (_require150, _exports120, _module112) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_math-sign.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.28 Math.sign(x)
            _module112.exports = Math.sign || function sign(x) {
              // eslint-disable-next-line no-self-compare
              return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.clz32.js": function (_require151) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.clz32.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.11 Math.clz32(x)
            var $export = _require151('./_export');

            $export($export.S, 'Math', {
              clz32: function clz32(x) {
                return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.cosh.js": function (_require152) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.cosh.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.12 Math.cosh(x)
            var $export = _require152('./_export');
            var exp = Math.exp;

            $export($export.S, 'Math', {
              cosh: function cosh(x) {
                return (exp(x = +x) + exp(-x)) / 2;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.expm1.js": function (_require153) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.expm1.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.14 Math.expm1(x)
            var $export = _require153('./_export');
            var $expm1 = _require153('./_math-expm1');

            $export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_math-expm1.js": function (_require154, _exports121, _module113) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_math-expm1.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.14 Math.expm1(x)
            var $expm1 = Math.expm1;
            _module113.exports = !$expm1
            // Old FF bug
            || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
            // Tor Browser bug
            || $expm1(-2e-17) != -2e-17 ? function expm1(x) {
              return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
            } : $expm1;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.fround.js": function (_require155) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.fround.js                                                                     //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.16 Math.fround(x)
            var $export = _require155('./_export');

            $export($export.S, 'Math', { fround: _require155('./_math-fround') });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_math-fround.js": function (_require156, _exports122, _module114) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_math-fround.js                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.16 Math.fround(x)
            var sign = _require156('./_math-sign');
            var pow = Math.pow;
            var EPSILON = pow(2, -52);
            var EPSILON32 = pow(2, -23);
            var MAX32 = pow(2, 127) * (2 - EPSILON32);
            var MIN32 = pow(2, -126);

            var roundTiesToEven = function (n) {
              return n + 1 / EPSILON - 1 / EPSILON;
            };

            _module114.exports = Math.fround || function fround(x) {
              var $abs = Math.abs(x);
              var $sign = sign(x);
              var a, result;
              if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
              a = (1 + EPSILON32 / EPSILON) * $abs;
              result = a - (a - $abs);
              // eslint-disable-next-line no-self-compare
              if (result > MAX32 || result != result) return $sign * Infinity;
              return $sign * result;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.hypot.js": function (_require157) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.hypot.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
            var $export = _require157('./_export');
            var abs = Math.abs;

            $export($export.S, 'Math', {
              hypot: function hypot(value1, value2) {
                // eslint-disable-line no-unused-vars
                var sum = 0;
                var i = 0;
                var aLen = arguments.length;
                var larg = 0;
                var arg, div;
                while (i < aLen) {
                  arg = abs(arguments[i++]);
                  if (larg < arg) {
                    div = larg / arg;
                    sum = sum * div * div + 1;
                    larg = arg;
                  } else if (arg > 0) {
                    div = arg / larg;
                    sum += div * div;
                  } else sum += arg;
                }
                return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.imul.js": function (_require158) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.imul.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.18 Math.imul(x, y)
            var $export = _require158('./_export');
            var $imul = Math.imul;

            // some WebKit versions fails with big numbers, some has wrong arity
            $export($export.S + $export.F * _require158('./_fails')(function () {
              return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
            }), 'Math', {
              imul: function imul(x, y) {
                var UINT16 = 0xffff;
                var xn = +x;
                var yn = +y;
                var xl = UINT16 & xn;
                var yl = UINT16 & yn;
                return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.log10.js": function (_require159) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.log10.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.21 Math.log10(x)
            var $export = _require159('./_export');

            $export($export.S, 'Math', {
              log10: function log10(x) {
                return Math.log(x) * Math.LOG10E;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.log1p.js": function (_require160) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.log1p.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.20 Math.log1p(x)
            var $export = _require160('./_export');

            $export($export.S, 'Math', { log1p: _require160('./_math-log1p') });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.log2.js": function (_require161) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.log2.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.22 Math.log2(x)
            var $export = _require161('./_export');

            $export($export.S, 'Math', {
              log2: function log2(x) {
                return Math.log(x) / Math.LN2;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.sign.js": function (_require162) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.sign.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.28 Math.sign(x)
            var $export = _require162('./_export');

            $export($export.S, 'Math', { sign: _require162('./_math-sign') });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.sinh.js": function (_require163) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.sinh.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.30 Math.sinh(x)
            var $export = _require163('./_export');
            var expm1 = _require163('./_math-expm1');
            var exp = Math.exp;

            // V8 near Chromium 38 has a problem with very small numbers
            $export($export.S + $export.F * _require163('./_fails')(function () {
              return !Math.sinh(-2e-17) != -2e-17;
            }), 'Math', {
              sinh: function sinh(x) {
                return Math.abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.tanh.js": function (_require164) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.tanh.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.33 Math.tanh(x)
            var $export = _require164('./_export');
            var expm1 = _require164('./_math-expm1');
            var exp = Math.exp;

            $export($export.S, 'Math', {
              tanh: function tanh(x) {
                var a = expm1(x = +x);
                var b = expm1(-x);
                return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.math.trunc.js": function (_require165) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.math.trunc.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.2.2.34 Math.trunc(x)
            var $export = _require165('./_export');

            $export($export.S, 'Math', {
              trunc: function trunc(it) {
                return (it > 0 ? Math.floor : Math.ceil)(it);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.create.js": function (_require166) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.create.js                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $export = _require166('./_export');
            // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
            $export($export.S, 'Object', { create: _require166('./_object-create') });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.define-property.js": function (_require167) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.define-property.js                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $export = _require167('./_export');
            // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
            $export($export.S + $export.F * !_require167('./_descriptors'), 'Object', { defineProperty: _require167('./_object-dp').f });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.define-properties.js": function (_require168) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.define-properties.js                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $export = _require168('./_export');
            // 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
            $export($export.S + $export.F * !_require168('./_descriptors'), 'Object', { defineProperties: _require168('./_object-dps') });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.get-own-property-descriptor.js": function (_require169) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.get-own-property-descriptor.js                                              //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
            var toIObject = _require169('./_to-iobject');
            var $getOwnPropertyDescriptor = _require169('./_object-gopd').f;

            _require169('./_object-sap')('getOwnPropertyDescriptor', function () {
              return function getOwnPropertyDescriptor(it, key) {
                return $getOwnPropertyDescriptor(toIObject(it), key);
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-sap.js": function (_require170, _exports123, _module115) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-sap.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // most Object methods by ES6 should accept primitives
            var $export = _require170('./_export');
            var core = _require170('./_core');
            var fails = _require170('./_fails');
            _module115.exports = function (KEY, exec) {
              var fn = (core.Object || {})[KEY] || Object[KEY];
              var exp = {};
              exp[KEY] = exec(fn);
              $export($export.S + $export.F * fails(function () {
                fn(1);
              }), 'Object', exp);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.get-prototype-of.js": function (_require171) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.get-prototype-of.js                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.9 Object.getPrototypeOf(O)
            var toObject = _require171('./_to-object');
            var $getPrototypeOf = _require171('./_object-gpo');

            _require171('./_object-sap')('getPrototypeOf', function () {
              return function getPrototypeOf(it) {
                return $getPrototypeOf(toObject(it));
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.keys.js": function (_require172) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.keys.js                                                                     //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.14 Object.keys(O)
            var toObject = _require172('./_to-object');
            var $keys = _require172('./_object-keys');

            _require172('./_object-sap')('keys', function () {
              return function keys(it) {
                return $keys(toObject(it));
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.get-own-property-names.js": function (_require173) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.get-own-property-names.js                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.7 Object.getOwnPropertyNames(O)
            _require173('./_object-sap')('getOwnPropertyNames', function () {
              return _require173('./_object-gopn-ext').f;
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.freeze.js": function (_require174) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.freeze.js                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.5 Object.freeze(O)
            var isObject = _require174('./_is-object');
            var meta = _require174('./_meta').onFreeze;

            _require174('./_object-sap')('freeze', function ($freeze) {
              return function freeze(it) {
                return $freeze && isObject(it) ? $freeze(meta(it)) : it;
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.seal.js": function (_require175) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.seal.js                                                                     //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.17 Object.seal(O)
            var isObject = _require175('./_is-object');
            var meta = _require175('./_meta').onFreeze;

            _require175('./_object-sap')('seal', function ($seal) {
              return function seal(it) {
                return $seal && isObject(it) ? $seal(meta(it)) : it;
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.prevent-extensions.js": function (_require176) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.prevent-extensions.js                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.15 Object.preventExtensions(O)
            var isObject = _require176('./_is-object');
            var meta = _require176('./_meta').onFreeze;

            _require176('./_object-sap')('preventExtensions', function ($preventExtensions) {
              return function preventExtensions(it) {
                return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.is-frozen.js": function (_require177) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.is-frozen.js                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.12 Object.isFrozen(O)
            var isObject = _require177('./_is-object');

            _require177('./_object-sap')('isFrozen', function ($isFrozen) {
              return function isFrozen(it) {
                return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.is-sealed.js": function (_require178) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.is-sealed.js                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.13 Object.isSealed(O)
            var isObject = _require178('./_is-object');

            _require178('./_object-sap')('isSealed', function ($isSealed) {
              return function isSealed(it) {
                return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.is-extensible.js": function (_require179) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.is-extensible.js                                                            //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.2.11 Object.isExtensible(O)
            var isObject = _require179('./_is-object');

            _require179('./_object-sap')('isExtensible', function ($isExtensible) {
              return function isExtensible(it) {
                return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.assign.js": function (_require180) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.assign.js                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.3.1 Object.assign(target, source)
            var $export = _require180('./_export');

            $export($export.S + $export.F, 'Object', { assign: _require180('./_object-assign') });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-assign.js": function (_require181, _exports124, _module116) {
            // 19.1.2.1 Object.assign(target, source, ...)
            var getKeys = _require181('./_object-keys');
            var gOPS = _require181('./_object-gops');
            var pIE = _require181('./_object-pie');
            var toObject = _require181('./_to-object');
            var IObject = _require181('./_iobject');
            var $assign = Object.assign;

            // should work with symbols and should have deterministic property order (V8 bug)
            _module116.exports = !$assign || _require181('./_fails')(function () {
              var A = {};
              var B = {};
              // eslint-disable-next-line no-undef
              var S = Symbol();
              var K = 'abcdefghijklmnopqrst';
              A[S] = 7;
              K.split('').forEach(function (k) {
                B[k] = k;
              });
              return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
            }) ? function assign(target, source) {
              // eslint-disable-line no-unused-vars
              var T = toObject(target);
              var aLen = arguments.length;
              var index = 1;
              var getSymbols = gOPS.f;
              var isEnum = pIE.f;
              while (aLen > index) {
                var S = IObject(arguments[index++]);
                var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
                var length = keys.length;
                var j = 0;
                var key;
                while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
              }return T;
            } : $assign;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.is.js": function (_require182) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.is.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.3.10 Object.is(value1, value2)
            var $export = _require182('./_export');
            $export($export.S, 'Object', { is: _require182('./_same-value') });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_same-value.js": function (_require183, _exports125, _module117) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_same-value.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 7.2.9 SameValue(x, y)
            _module117.exports = Object.is || function is(x, y) {
              // eslint-disable-next-line no-self-compare
              return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.set-prototype-of.js": function (_require184) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.object.set-prototype-of.js                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 19.1.3.19 Object.setPrototypeOf(O, proto)
            var $export = _require184('./_export');
            $export($export.S, 'Object', { setPrototypeOf: _require184('./_set-proto').set });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.object.to-string.js": function (_require185) {
            // 19.1.3.6 Object.prototype.toString()
            var classof = _require185('./_classof');
            var test = {};
            test[_require185('./_wks')('toStringTag')] = 'z';
            if (test + '' != '[object z]') {
              _require185('./_redefine')(Object.prototype, 'toString', function toString() {
                return '[object ' + classof(this) + ']';
              }, true);
            }

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.regexp.constructor.js": function (_require186) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.regexp.constructor.js                                                              //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var global = _require186('./_global');
            var inheritIfRequired = _require186('./_inherit-if-required');
            var dP = _require186('./_object-dp').f;
            var gOPN = _require186('./_object-gopn').f;
            var isRegExp = _require186('./_is-regexp');
            var $flags = _require186('./_flags');
            var $RegExp = global.RegExp;
            var Base = $RegExp;
            var proto = $RegExp.prototype;
            var re1 = /a/g;
            var re2 = /a/g;
            // "new" creates a new object, old webkit buggy here
            var CORRECT_NEW = new $RegExp(re1) !== re1;

            if (_require186('./_descriptors') && (!CORRECT_NEW || _require186('./_fails')(function () {
              re2[_require186('./_wks')('match')] = false;
              // RegExp constructor can alter flags and IsRegExp works correct with @@match
              return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
            }))) {
              $RegExp = function RegExp(p, f) {
                var tiRE = this instanceof $RegExp;
                var piRE = isRegExp(p);
                var fiU = f === undefined;
                return !tiRE && piRE && p.constructor === $RegExp && fiU ? p : inheritIfRequired(CORRECT_NEW ? new Base(piRE && !fiU ? p.source : p, f) : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f), tiRE ? this : proto, $RegExp);
              };
              var proxy = function (key) {
                key in $RegExp || dP($RegExp, key, {
                  configurable: true,
                  get: function () {
                    return Base[key];
                  },
                  set: function (it) {
                    Base[key] = it;
                  }
                });
              };
              for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
              proto.constructor = $RegExp;
              $RegExp.prototype = proto;
              _require186('./_redefine')(global, 'RegExp', $RegExp);
            }

            _require186('./_set-species')('RegExp');

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_is-regexp.js": function (_require187, _exports126, _module118) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_is-regexp.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 7.2.8 IsRegExp(argument)
            var isObject = _require187('./_is-object');
            var cof = _require187('./_cof');
            var MATCH = _require187('./_wks')('match');
            _module118.exports = function (it) {
              var isRegExp;
              return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_flags.js": function (_require188, _exports127, _module119) {
            // 21.2.5.3 get RegExp.prototype.flags
            var anObject = _require188('./_an-object');
            _module119.exports = function () {
              var that = anObject(this);
              var result = '';
              if (that.global) result += 'g';
              if (that.ignoreCase) result += 'i';
              if (that.multiline) result += 'm';
              if (that.unicode) result += 'u';
              if (that.sticky) result += 'y';
              return result;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.regexp.to-string.js": function (_require189) {
            _require189('./es6.regexp.flags');
            var anObject = _require189('./_an-object');
            var $flags = _require189('./_flags');
            var DESCRIPTORS = _require189('./_descriptors');
            var TO_STRING = 'toString';
            var $toString = /./[TO_STRING];

            var define = function (fn) {
              _require189('./_redefine')(RegExp.prototype, TO_STRING, fn, true);
            };

            // 21.2.5.14 RegExp.prototype.toString()
            if (_require189('./_fails')(function () {
              return $toString.call({ source: 'a', flags: 'b' }) != '/a/b';
            })) {
              define(function toString() {
                var R = anObject(this);
                return '/'.concat(R.source, '/', 'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
              });
              // FF44- RegExp#toString has a wrong name
            } else if ($toString.name != TO_STRING) {
              define(function toString() {
                return $toString.call(this);
              });
            }

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.regexp.flags.js": function (_require190) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.regexp.flags.js                                                                    //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 21.2.5.3 get RegExp.prototype.flags()
            if (_require190('./_descriptors') && /./g.flags != 'g') _require190('./_object-dp').f(RegExp.prototype, 'flags', {
              configurable: true,
              get: _require190('./_flags')
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.regexp.match.js": function (_require191) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.regexp.match.js                                                                    //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // @@match logic
            _require191('./_fix-re-wks')('match', 1, function (defined, MATCH, $match) {
              // 21.1.3.11 String.prototype.match(regexp)
              return [function match(regexp) {
                var O = defined(this);
                var fn = regexp == undefined ? undefined : regexp[MATCH];
                return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
              }, $match];
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_fix-re-wks.js": function (_require192, _exports128, _module120) {
            var hide = _require192('./_hide');
            var redefine = _require192('./_redefine');
            var fails = _require192('./_fails');
            var defined = _require192('./_defined');
            var wks = _require192('./_wks');

            _module120.exports = function (KEY, length, exec) {
              var SYMBOL = wks(KEY);
              var fns = exec(defined, SYMBOL, ''[KEY]);
              var strfn = fns[0];
              var rxfn = fns[1];
              if (fails(function () {
                var O = {};
                O[SYMBOL] = function () {
                  return 7;
                };
                return ''[KEY](O) != 7;
              })) {
                redefine(String.prototype, KEY, strfn);
                hide(RegExp.prototype, SYMBOL, length == 2
                // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
                // 21.2.5.11 RegExp.prototype[@@split](string, limit)
                ? function (string, arg) {
                  return rxfn.call(string, this, arg);
                }
                // 21.2.5.6 RegExp.prototype[@@match](string)
                // 21.2.5.9 RegExp.prototype[@@search](string)
                : function (string) {
                  return rxfn.call(string, this);
                });
              }
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.regexp.replace.js": function (_require193) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.regexp.replace.js                                                                  //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // @@replace logic
            _require193('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace) {
              // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
              return [function replace(searchValue, replaceValue) {
                var O = defined(this);
                var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
                return fn !== undefined ? fn.call(searchValue, O, replaceValue) : $replace.call(String(O), searchValue, replaceValue);
              }, $replace];
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.regexp.search.js": function (_require194) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.regexp.search.js                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // @@search logic
            _require194('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search) {
              // 21.1.3.15 String.prototype.search(regexp)
              return [function search(regexp) {
                var O = defined(this);
                var fn = regexp == undefined ? undefined : regexp[SEARCH];
                return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
              }, $search];
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.regexp.split.js": function (_require195) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.regexp.split.js                                                                    //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // @@split logic
            _require195('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {
              var isRegExp = _require195('./_is-regexp');
              var _split = $split;
              var $push = [].push;
              var $SPLIT = 'split';
              var LENGTH = 'length';
              var LAST_INDEX = 'lastIndex';
              if ('abbc'[$SPLIT](/(b)*/)[1] == 'c' || 'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 || 'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 || '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 || '.'[$SPLIT](/()()/)[LENGTH] > 1 || ''[$SPLIT](/.?/)[LENGTH]) {
                var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
                // based on es5-shim implementation, need to rework it
                $split = function (separator, limit) {
                  var string = String(this);
                  if (separator === undefined && limit === 0) return [];
                  // If `separator` is not a regex, use native split
                  if (!isRegExp(separator)) return _split.call(string, separator, limit);
                  var output = [];
                  var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');
                  var lastLastIndex = 0;
                  var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
                  // Make `global` and avoid `lastIndex` issues by working with a copy
                  var separatorCopy = new RegExp(separator.source, flags + 'g');
                  var separator2, match, lastIndex, lastLength, i;
                  // Doesn't need flags gy, but they don't hurt
                  if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
                  while (match = separatorCopy.exec(string)) {
                    // `separatorCopy.lastIndex` is not reliable cross-browser
                    lastIndex = match.index + match[0][LENGTH];
                    if (lastIndex > lastLastIndex) {
                      output.push(string.slice(lastLastIndex, match.index));
                      // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
                      // eslint-disable-next-line no-loop-func
                      if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {
                        for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;
                      });
                      if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
                      lastLength = match[0][LENGTH];
                      lastLastIndex = lastIndex;
                      if (output[LENGTH] >= splitLimit) break;
                    }
                    if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
                  }
                  if (lastLastIndex === string[LENGTH]) {
                    if (lastLength || !separatorCopy.test('')) output.push('');
                  } else output.push(string.slice(lastLastIndex));
                  return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
                };
                // Chakra, V8
              } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
                $split = function (separator, limit) {
                  return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
                };
              }
              // 21.1.3.17 String.prototype.split(separator, limit)
              return [function split(separator, limit) {
                var O = defined(this);
                var fn = separator == undefined ? undefined : separator[SPLIT];
                return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
              }, $split];
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.from-code-point.js": function (_require196) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.string.from-code-point.js                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $export = _require196('./_export');
            var toAbsoluteIndex = _require196('./_to-absolute-index');
            var fromCharCode = String.fromCharCode;
            var $fromCodePoint = String.fromCodePoint;

            // length should be 1, old FF problem
            $export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
              // 21.1.2.2 String.fromCodePoint(...codePoints)
              fromCodePoint: function fromCodePoint(x) {
                // eslint-disable-line no-unused-vars
                var res = [];
                var aLen = arguments.length;
                var i = 0;
                var code;
                while (aLen > i) {
                  code = +arguments[i++];
                  if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
                  res.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00));
                }return res.join('');
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.raw.js": function (_require197) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.string.raw.js                                                                      //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $export = _require197('./_export');
            var toIObject = _require197('./_to-iobject');
            var toLength = _require197('./_to-length');

            $export($export.S, 'String', {
              // 21.1.2.4 String.raw(callSite, ...substitutions)
              raw: function raw(callSite) {
                var tpl = toIObject(callSite.raw);
                var len = toLength(tpl.length);
                var aLen = arguments.length;
                var res = [];
                var i = 0;
                while (len > i) {
                  res.push(String(tpl[i++]));
                  if (i < aLen) res.push(String(arguments[i]));
                }return res.join('');
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.trim.js": function (_require198) {
            // 21.1.3.25 String.prototype.trim()
            _require198('./_string-trim')('trim', function ($trim) {
              return function trim() {
                return $trim(this, 3);
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_string-trim.js": function (_require199, _exports129, _module121) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_string-trim.js                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $export = _require199('./_export');
            var defined = _require199('./_defined');
            var fails = _require199('./_fails');
            var spaces = _require199('./_string-ws');
            var space = '[' + spaces + ']';
            var non = '\u200b\u0085';
            var ltrim = RegExp('^' + space + space + '*');
            var rtrim = RegExp(space + space + '*$');

            var exporter = function (KEY, exec, ALIAS) {
              var exp = {};
              var FORCE = fails(function () {
                return !!spaces[KEY]() || non[KEY]() != non;
              });
              var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
              if (ALIAS) exp[ALIAS] = fn;
              $export($export.P + $export.F * FORCE, 'String', exp);
            };

            // 1 -> String#trimLeft
            // 2 -> String#trimRight
            // 3 -> String#trim
            var trim = exporter.trim = function (string, TYPE) {
              string = String(defined(string));
              if (TYPE & 1) string = string.replace(ltrim, '');
              if (TYPE & 2) string = string.replace(rtrim, '');
              return string;
            };

            _module121.exports = exporter;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_string-ws.js": function (_require200, _exports130, _module122) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_string-ws.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module122.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' + '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.code-point-at.js": function (_require201) {
            var $export = _require201('./_export');
            var $at = _require201('./_string-at')(false);
            $export($export.P, 'String', {
              // 21.1.3.3 String.prototype.codePointAt(pos)
              codePointAt: function codePointAt(pos) {
                return $at(this, pos);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.ends-with.js": function (_require202) {
            var $export = _require202('./_export');
            var toLength = _require202('./_to-length');
            var context = _require202('./_string-context');
            var ENDS_WITH = 'endsWith';
            var $endsWith = ''[ENDS_WITH];

            $export($export.P + $export.F * _require202('./_fails-is-regexp')(ENDS_WITH), 'String', {
              endsWith: function endsWith(searchString /* , endPosition = @length */) {
                var that = context(this, searchString, ENDS_WITH);
                var endPosition = arguments.length > 1 ? arguments[1] : undefined;
                var len = toLength(that.length);
                var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
                var search = String(searchString);
                return $endsWith ? $endsWith.call(that, search, end) : that.slice(end - search.length, end) === search;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_string-context.js": function (_require203, _exports131, _module123) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_string-context.js                                                                     //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // helper for String#{startsWith, endsWith, includes}
            var isRegExp = _require203('./_is-regexp');
            var defined = _require203('./_defined');

            _module123.exports = function (that, searchString, NAME) {
              if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
              return String(defined(that));
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_fails-is-regexp.js": function (_require204, _exports132, _module124) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_fails-is-regexp.js                                                                    //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var MATCH = _require204('./_wks')('match');
            _module124.exports = function (KEY) {
              var re = /./;
              try {
                '/./'[KEY](re);
              } catch (e) {
                try {
                  re[MATCH] = false;
                  return !'/./'[KEY](re);
                } catch (f) {/* empty */}
              }return true;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.includes.js": function (_require205) {
            var $export = _require205('./_export');
            var context = _require205('./_string-context');
            var INCLUDES = 'includes';

            $export($export.P + $export.F * _require205('./_fails-is-regexp')(INCLUDES), 'String', {
              includes: function includes(searchString /* , position = 0 */) {
                return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.repeat.js": function (_require206) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.string.repeat.js                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $export = _require206('./_export');

            $export($export.P, 'String', {
              // 21.1.3.13 String.prototype.repeat(count)
              repeat: _require206('./_string-repeat')
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_string-repeat.js": function (_require207, _exports133, _module125) {
            var toInteger = _require207('./_to-integer');
            var defined = _require207('./_defined');

            _module125.exports = function repeat(count) {
              var str = String(defined(this));
              var res = '';
              var n = toInteger(count);
              if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
              for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
              return res;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.starts-with.js": function (_require208) {
            var $export = _require208('./_export');
            var toLength = _require208('./_to-length');
            var context = _require208('./_string-context');
            var STARTS_WITH = 'startsWith';
            var $startsWith = ''[STARTS_WITH];

            $export($export.P + $export.F * _require208('./_fails-is-regexp')(STARTS_WITH), 'String', {
              startsWith: function startsWith(searchString /* , position = 0 */) {
                var that = context(this, searchString, STARTS_WITH);
                var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
                var search = String(searchString);
                return $startsWith ? $startsWith.call(that, search, index) : that.slice(index, index + search.length) === search;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.anchor.js": function (_require209) {
            // B.2.3.2 String.prototype.anchor(name)
            _require209('./_string-html')('anchor', function (createHTML) {
              return function anchor(name) {
                return createHTML(this, 'a', 'name', name);
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_string-html.js": function (_require210, _exports134, _module126) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_string-html.js                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $export = _require210('./_export');
            var fails = _require210('./_fails');
            var defined = _require210('./_defined');
            var quot = /"/g;
            // B.2.3.2.1 CreateHTML(string, tag, attribute, value)
            var createHTML = function (string, tag, attribute, value) {
              var S = String(defined(string));
              var p1 = '<' + tag;
              if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
              return p1 + '>' + S + '</' + tag + '>';
            };
            _module126.exports = function (NAME, exec) {
              var O = {};
              O[NAME] = exec(createHTML);
              $export($export.P + $export.F * fails(function () {
                var test = ''[NAME]('"');
                return test !== test.toLowerCase() || test.split('"').length > 3;
              }), 'String', O);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.big.js": function (_require211) {
            // B.2.3.3 String.prototype.big()
            _require211('./_string-html')('big', function (createHTML) {
              return function big() {
                return createHTML(this, 'big', '', '');
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.blink.js": function (_require212) {
            // B.2.3.4 String.prototype.blink()
            _require212('./_string-html')('blink', function (createHTML) {
              return function blink() {
                return createHTML(this, 'blink', '', '');
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.bold.js": function (_require213) {
            // B.2.3.5 String.prototype.bold()
            _require213('./_string-html')('bold', function (createHTML) {
              return function bold() {
                return createHTML(this, 'b', '', '');
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.fixed.js": function (_require214) {
            // B.2.3.6 String.prototype.fixed()
            _require214('./_string-html')('fixed', function (createHTML) {
              return function fixed() {
                return createHTML(this, 'tt', '', '');
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.fontcolor.js": function (_require215) {
            // B.2.3.7 String.prototype.fontcolor(color)
            _require215('./_string-html')('fontcolor', function (createHTML) {
              return function fontcolor(color) {
                return createHTML(this, 'font', 'color', color);
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.fontsize.js": function (_require216) {
            // B.2.3.8 String.prototype.fontsize(size)
            _require216('./_string-html')('fontsize', function (createHTML) {
              return function fontsize(size) {
                return createHTML(this, 'font', 'size', size);
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.italics.js": function (_require217) {
            // B.2.3.9 String.prototype.italics()
            _require217('./_string-html')('italics', function (createHTML) {
              return function italics() {
                return createHTML(this, 'i', '', '');
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.link.js": function (_require218) {
            // B.2.3.10 String.prototype.link(url)
            _require218('./_string-html')('link', function (createHTML) {
              return function link(url) {
                return createHTML(this, 'a', 'href', url);
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.small.js": function (_require219) {
            // B.2.3.11 String.prototype.small()
            _require219('./_string-html')('small', function (createHTML) {
              return function small() {
                return createHTML(this, 'small', '', '');
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.strike.js": function (_require220) {
            // B.2.3.12 String.prototype.strike()
            _require220('./_string-html')('strike', function (createHTML) {
              return function strike() {
                return createHTML(this, 'strike', '', '');
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.sub.js": function (_require221) {
            // B.2.3.13 String.prototype.sub()
            _require221('./_string-html')('sub', function (createHTML) {
              return function sub() {
                return createHTML(this, 'sub', '', '');
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.string.sup.js": function (_require222) {
            // B.2.3.14 String.prototype.sup()
            _require222('./_string-html')('sup', function (createHTML) {
              return function sup() {
                return createHTML(this, 'sup', '', '');
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.weak-map.js": function (_require223, _exports135, _module127) {
            var each = _require223('./_array-methods')(0);
            var redefine = _require223('./_redefine');
            var meta = _require223('./_meta');
            var assign = _require223('./_object-assign');
            var weak = _require223('./_collection-weak');
            var isObject = _require223('./_is-object');
            var fails = _require223('./_fails');
            var validate = _require223('./_validate-collection');
            var WEAK_MAP = 'WeakMap';
            var getWeak = meta.getWeak;
            var isExtensible = Object.isExtensible;
            var uncaughtFrozenStore = weak.ufstore;
            var tmp = {};
            var InternalMap;

            var wrapper = function (get) {
              return function WeakMap() {
                return get(this, arguments.length > 0 ? arguments[0] : undefined);
              };
            };

            var methods = {
              // 23.3.3.3 WeakMap.prototype.get(key)
              get: function get(key) {
                if (isObject(key)) {
                  var data = getWeak(key);
                  if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
                  return data ? data[this._i] : undefined;
                }
              },
              // 23.3.3.5 WeakMap.prototype.set(key, value)
              set: function set(key, value) {
                return weak.def(validate(this, WEAK_MAP), key, value);
              }
            };

            // 23.3 WeakMap Objects
            var $WeakMap = _module127.exports = _require223('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);

            // IE11 WeakMap frozen keys fix
            if (fails(function () {
              return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;
            })) {
              InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
              assign(InternalMap.prototype, methods);
              meta.NEED = true;
              each(['delete', 'has', 'get', 'set'], function (key) {
                var proto = $WeakMap.prototype;
                var method = proto[key];
                redefine(proto, key, function (a, b) {
                  // store frozen objects on internal weakmap shim
                  if (isObject(a) && !isExtensible(a)) {
                    if (!this._f) this._f = new InternalMap();
                    var result = this._f[key](a, b);
                    return key == 'set' ? this : result;
                    // store all the rest on native weakmap
                  }return method.call(this, a, b);
                });
              });
            }

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_collection-weak.js": function (_require224, _exports136, _module128) {
            var redefineAll = _require224('./_redefine-all');
            var getWeak = _require224('./_meta').getWeak;
            var anObject = _require224('./_an-object');
            var isObject = _require224('./_is-object');
            var anInstance = _require224('./_an-instance');
            var forOf = _require224('./_for-of');
            var createArrayMethod = _require224('./_array-methods');
            var $has = _require224('./_has');
            var validate = _require224('./_validate-collection');
            var arrayFind = createArrayMethod(5);
            var arrayFindIndex = createArrayMethod(6);
            var id = 0;

            // fallback for uncaught frozen keys
            var uncaughtFrozenStore = function (that) {
              return that._l || (that._l = new UncaughtFrozenStore());
            };
            var UncaughtFrozenStore = function () {
              this.a = [];
            };
            var findUncaughtFrozen = function (store, key) {
              return arrayFind(store.a, function (it) {
                return it[0] === key;
              });
            };
            UncaughtFrozenStore.prototype = {
              get: function (key) {
                var entry = findUncaughtFrozen(this, key);
                if (entry) return entry[1];
              },
              has: function (key) {
                return !!findUncaughtFrozen(this, key);
              },
              set: function (key, value) {
                var entry = findUncaughtFrozen(this, key);
                if (entry) entry[1] = value;else this.a.push([key, value]);
              },
              'delete': function (key) {
                var index = arrayFindIndex(this.a, function (it) {
                  return it[0] === key;
                });
                if (~index) this.a.splice(index, 1);
                return !!~index;
              }
            };

            _module128.exports = {
              getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
                var C = wrapper(function (that, iterable) {
                  anInstance(that, C, NAME, '_i');
                  that._t = NAME; // collection type
                  that._i = id++; // collection id
                  that._l = undefined; // leak store for uncaught frozen objects
                  if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
                });
                redefineAll(C.prototype, {
                  // 23.3.3.2 WeakMap.prototype.delete(key)
                  // 23.4.3.3 WeakSet.prototype.delete(value)
                  'delete': function (key) {
                    if (!isObject(key)) return false;
                    var data = getWeak(key);
                    if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
                    return data && $has(data, this._i) && delete data[this._i];
                  },
                  // 23.3.3.4 WeakMap.prototype.has(key)
                  // 23.4.3.4 WeakSet.prototype.has(value)
                  has: function has(key) {
                    if (!isObject(key)) return false;
                    var data = getWeak(key);
                    if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
                    return data && $has(data, this._i);
                  }
                });
                return C;
              },
              def: function (that, key, value) {
                var data = getWeak(anObject(key), true);
                if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;
                return that;
              },
              ufstore: uncaughtFrozenStore
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "web.dom.iterable.js": function (_require225) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/web.dom.iterable.js                                                                    //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $iterators = _require225('./es6.array.iterator');
            var getKeys = _require225('./_object-keys');
            var redefine = _require225('./_redefine');
            var global = _require225('./_global');
            var hide = _require225('./_hide');
            var Iterators = _require225('./_iterators');
            var wks = _require225('./_wks');
            var ITERATOR = wks('iterator');
            var TO_STRING_TAG = wks('toStringTag');
            var ArrayValues = Iterators.Array;

            var DOMIterables = {
              CSSRuleList: true, // TODO: Not spec compliant, should be false.
              CSSStyleDeclaration: false,
              CSSValueList: false,
              ClientRectList: false,
              DOMRectList: false,
              DOMStringList: false,
              DOMTokenList: true,
              DataTransferItemList: false,
              FileList: false,
              HTMLAllCollection: false,
              HTMLCollection: false,
              HTMLFormElement: false,
              HTMLSelectElement: false,
              MediaList: true, // TODO: Not spec compliant, should be false.
              MimeTypeArray: false,
              NamedNodeMap: false,
              NodeList: true,
              PaintRequestList: false,
              Plugin: false,
              PluginArray: false,
              SVGLengthList: false,
              SVGNumberList: false,
              SVGPathSegList: false,
              SVGPointList: false,
              SVGStringList: false,
              SVGTransformList: false,
              SourceBufferList: false,
              StyleSheetList: true, // TODO: Not spec compliant, should be false.
              TextTrackCueList: false,
              TextTrackList: false,
              TouchList: false
            };

            for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
              var NAME = collections[i];
              var explicit = DOMIterables[NAME];
              var Collection = global[NAME];
              var proto = Collection && Collection.prototype;
              var key;
              if (proto) {
                if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
                if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
                Iterators[NAME] = ArrayValues;
                if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
              }
            }

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.weak-set.js": function (_require226) {
            var weak = _require226('./_collection-weak');
            var validate = _require226('./_validate-collection');
            var WEAK_SET = 'WeakSet';

            // 23.4 WeakSet Objects
            _require226('./_collection')(WEAK_SET, function (get) {
              return function WeakSet() {
                return get(this, arguments.length > 0 ? arguments[0] : undefined);
              };
            }, {
              // 23.4.3.1 WeakSet.prototype.add(value)
              add: function add(value) {
                return weak.def(validate(this, WEAK_SET), value, true);
              }
            }, weak, false, true);

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.array.includes.js": function (_require227) {
            // https://github.com/tc39/Array.prototype.includes
            var $export = _require227('./_export');
            var $includes = _require227('./_array-includes')(true);

            $export($export.P, 'Array', {
              includes: function includes(el /* , fromIndex = 0 */) {
                return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
              }
            });

            _require227('./_add-to-unscopables')('includes');

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.array.flat-map.js": function (_require228) {
            // https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
            var $export = _require228('./_export');
            var flattenIntoArray = _require228('./_flatten-into-array');
            var toObject = _require228('./_to-object');
            var toLength = _require228('./_to-length');
            var aFunction = _require228('./_a-function');
            var arraySpeciesCreate = _require228('./_array-species-create');

            $export($export.P, 'Array', {
              flatMap: function flatMap(callbackfn /* , thisArg */) {
                var O = toObject(this);
                var sourceLen, A;
                aFunction(callbackfn);
                sourceLen = toLength(O.length);
                A = arraySpeciesCreate(O, 0);
                flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
                return A;
              }
            });

            _require228('./_add-to-unscopables')('flatMap');

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_flatten-into-array.js": function (_require229, _exports137, _module129) {
            // https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
            var isArray = _require229('./_is-array');
            var isObject = _require229('./_is-object');
            var toLength = _require229('./_to-length');
            var ctx = _require229('./_ctx');
            var IS_CONCAT_SPREADABLE = _require229('./_wks')('isConcatSpreadable');

            function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
              var targetIndex = start;
              var sourceIndex = 0;
              var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
              var element, spreadable;

              while (sourceIndex < sourceLen) {
                if (sourceIndex in source) {
                  element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

                  spreadable = false;
                  if (isObject(element)) {
                    spreadable = element[IS_CONCAT_SPREADABLE];
                    spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
                  }

                  if (spreadable && depth > 0) {
                    targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
                  } else {
                    if (targetIndex >= 0x1fffffffffffff) throw TypeError();
                    target[targetIndex] = element;
                  }

                  targetIndex++;
                }
                sourceIndex++;
              }
              return targetIndex;
            }

            _module129.exports = flattenIntoArray;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.array.flatten.js": function (_require230) {
            // https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten
            var $export = _require230('./_export');
            var flattenIntoArray = _require230('./_flatten-into-array');
            var toObject = _require230('./_to-object');
            var toLength = _require230('./_to-length');
            var toInteger = _require230('./_to-integer');
            var arraySpeciesCreate = _require230('./_array-species-create');

            $export($export.P, 'Array', {
              flatten: function flatten() /* depthArg = 1 */{
                var depthArg = arguments[0];
                var O = toObject(this);
                var sourceLen = toLength(O.length);
                var A = arraySpeciesCreate(O, 0);
                flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
                return A;
              }
            });

            _require230('./_add-to-unscopables')('flatten');

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.object.get-own-property-descriptors.js": function (_require231) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es7.object.get-own-property-descriptors.js                                             //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // https://github.com/tc39/proposal-object-getownpropertydescriptors
            var $export = _require231('./_export');
            var ownKeys = _require231('./_own-keys');
            var toIObject = _require231('./_to-iobject');
            var gOPD = _require231('./_object-gopd');
            var createProperty = _require231('./_create-property');

            $export($export.S, 'Object', {
              getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
                var O = toIObject(object);
                var getDesc = gOPD.f;
                var keys = ownKeys(O);
                var result = {};
                var i = 0;
                var key, desc;
                while (keys.length > i) {
                  desc = getDesc(O, key = keys[i++]);
                  if (desc !== undefined) createProperty(result, key, desc);
                }
                return result;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_own-keys.js": function (_require232, _exports138, _module130) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_own-keys.js                                                                           //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // all object keys, includes non-enumerable and symbols
            var gOPN = _require232('./_object-gopn');
            var gOPS = _require232('./_object-gops');
            var anObject = _require232('./_an-object');
            var Reflect = _require232('./_global').Reflect;
            _module130.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
              var keys = gOPN.f(anObject(it));
              var getSymbols = gOPS.f;
              return getSymbols ? keys.concat(getSymbols(it)) : keys;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.object.values.js": function (_require233) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es7.object.values.js                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // https://github.com/tc39/proposal-object-values-entries
            var $export = _require233('./_export');
            var $values = _require233('./_object-to-array')(false);

            $export($export.S, 'Object', {
              values: function values(it) {
                return $values(it);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-to-array.js": function (_require234, _exports139, _module131) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_object-to-array.js                                                                    //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var getKeys = _require234('./_object-keys');
            var toIObject = _require234('./_to-iobject');
            var isEnum = _require234('./_object-pie').f;
            _module131.exports = function (isEntries) {
              return function (it) {
                var O = toIObject(it);
                var keys = getKeys(O);
                var length = keys.length;
                var i = 0;
                var result = [];
                var key;
                while (length > i) if (isEnum.call(O, key = keys[i++])) {
                  result.push(isEntries ? [key, O[key]] : O[key]);
                }return result;
              };
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.object.entries.js": function (_require235) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es7.object.entries.js                                                                  //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // https://github.com/tc39/proposal-object-values-entries
            var $export = _require235('./_export');
            var $entries = _require235('./_object-to-array')(true);

            $export($export.S, 'Object', {
              entries: function entries(it) {
                return $entries(it);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.object.define-getter.js": function (_require236) {
            var $export = _require236('./_export');
            var toObject = _require236('./_to-object');
            var aFunction = _require236('./_a-function');
            var $defineProperty = _require236('./_object-dp');

            // B.2.2.2 Object.prototype.__defineGetter__(P, getter)
            _require236('./_descriptors') && $export($export.P + _require236('./_object-forced-pam'), 'Object', {
              __defineGetter__: function __defineGetter__(P, getter) {
                $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_object-forced-pam.js": function (_require237, _exports140, _module132) {
            // Forced replacement prototype accessors methods
            _module132.exports = _require237('./_library') || !_require237('./_fails')(function () {
              var K = Math.random();
              // In FF throws only define methods
              // eslint-disable-next-line no-undef, no-useless-call
              __defineSetter__.call(null, K, function () {/* empty */});
              delete _require237('./_global')[K];
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.object.define-setter.js": function (_require238) {
            var $export = _require238('./_export');
            var toObject = _require238('./_to-object');
            var aFunction = _require238('./_a-function');
            var $defineProperty = _require238('./_object-dp');

            // B.2.2.3 Object.prototype.__defineSetter__(P, setter)
            _require238('./_descriptors') && $export($export.P + _require238('./_object-forced-pam'), 'Object', {
              __defineSetter__: function __defineSetter__(P, setter) {
                $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.object.lookup-getter.js": function (_require239) {
            var $export = _require239('./_export');
            var toObject = _require239('./_to-object');
            var toPrimitive = _require239('./_to-primitive');
            var getPrototypeOf = _require239('./_object-gpo');
            var getOwnPropertyDescriptor = _require239('./_object-gopd').f;

            // B.2.2.4 Object.prototype.__lookupGetter__(P)
            _require239('./_descriptors') && $export($export.P + _require239('./_object-forced-pam'), 'Object', {
              __lookupGetter__: function __lookupGetter__(P) {
                var O = toObject(this);
                var K = toPrimitive(P, true);
                var D;
                do {
                  if (D = getOwnPropertyDescriptor(O, K)) return D.get;
                } while (O = getPrototypeOf(O));
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.object.lookup-setter.js": function (_require240) {
            var $export = _require240('./_export');
            var toObject = _require240('./_to-object');
            var toPrimitive = _require240('./_to-primitive');
            var getPrototypeOf = _require240('./_object-gpo');
            var getOwnPropertyDescriptor = _require240('./_object-gopd').f;

            // B.2.2.5 Object.prototype.__lookupSetter__(P)
            _require240('./_descriptors') && $export($export.P + _require240('./_object-forced-pam'), 'Object', {
              __lookupSetter__: function __lookupSetter__(P) {
                var O = toObject(this);
                var K = toPrimitive(P, true);
                var D;
                do {
                  if (D = getOwnPropertyDescriptor(O, K)) return D.set;
                } while (O = getPrototypeOf(O));
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.string.pad-start.js": function (_require241) {
            // https://github.com/tc39/proposal-string-pad-start-end
            var $export = _require241('./_export');
            var $pad = _require241('./_string-pad');
            var userAgent = _require241('./_user-agent');

            // https://github.com/zloirock/core-js/issues/280
            $export($export.P + $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent), 'String', {
              padStart: function padStart(maxLength /* , fillString = ' ' */) {
                return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_string-pad.js": function (_require242, _exports141, _module133) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_string-pad.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // https://github.com/tc39/proposal-string-pad-start-end
            var toLength = _require242('./_to-length');
            var repeat = _require242('./_string-repeat');
            var defined = _require242('./_defined');

            _module133.exports = function (that, maxLength, fillString, left) {
              var S = String(defined(that));
              var stringLength = S.length;
              var fillStr = fillString === undefined ? ' ' : String(fillString);
              var intMaxLength = toLength(maxLength);
              if (intMaxLength <= stringLength || fillStr == '') return S;
              var fillLen = intMaxLength - stringLength;
              var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
              if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
              return left ? stringFiller + S : S + stringFiller;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_user-agent.js": function (_require243, _exports142, _module134) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_user-agent.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var global = _require243('./_global');
            var navigator = global.navigator;

            _module134.exports = navigator && navigator.userAgent || '';

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es7.string.pad-end.js": function (_require244) {
            // https://github.com/tc39/proposal-string-pad-start-end
            var $export = _require244('./_export');
            var $pad = _require244('./_string-pad');
            var userAgent = _require244('./_user-agent');

            // https://github.com/zloirock/core-js/issues/280
            $export($export.P + $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent), 'String', {
              padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
                return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.number.epsilon.js": function (_require245) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.number.epsilon.js                                                                  //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.1.2.1 Number.EPSILON
            var $export = _require245('./_export');

            $export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.number.is-finite.js": function (_require246) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.number.is-finite.js                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.1.2.2 Number.isFinite(number)
            var $export = _require246('./_export');
            var _isFinite = _require246('./_global').isFinite;

            $export($export.S, 'Number', {
              isFinite: function isFinite(it) {
                return typeof it == 'number' && _isFinite(it);
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.number.is-integer.js": function (_require247) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.number.is-integer.js                                                               //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.1.2.3 Number.isInteger(number)
            var $export = _require247('./_export');

            $export($export.S, 'Number', { isInteger: _require247('./_is-integer') });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_is-integer.js": function (_require248, _exports143, _module135) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_is-integer.js                                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.1.2.3 Number.isInteger(number)
            var isObject = _require248('./_is-object');
            var floor = Math.floor;
            _module135.exports = function isInteger(it) {
              return !isObject(it) && isFinite(it) && floor(it) === it;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.number.is-nan.js": function (_require249) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.number.is-nan.js                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.1.2.4 Number.isNaN(number)
            var $export = _require249('./_export');

            $export($export.S, 'Number', {
              isNaN: function isNaN(number) {
                // eslint-disable-next-line no-self-compare
                return number != number;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.number.is-safe-integer.js": function (_require250) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.number.is-safe-integer.js                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.1.2.5 Number.isSafeInteger(number)
            var $export = _require250('./_export');
            var isInteger = _require250('./_is-integer');
            var abs = Math.abs;

            $export($export.S, 'Number', {
              isSafeInteger: function isSafeInteger(number) {
                return isInteger(number) && abs(number) <= 0x1fffffffffffff;
              }
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.number.max-safe-integer.js": function (_require251) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.number.max-safe-integer.js                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.1.2.6 Number.MAX_SAFE_INTEGER
            var $export = _require251('./_export');

            $export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.number.min-safe-integer.js": function (_require252) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.number.min-safe-integer.js                                                         //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 20.1.2.10 Number.MIN_SAFE_INTEGER
            var $export = _require252('./_export');

            $export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.number.parse-float.js": function (_require253) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.number.parse-float.js                                                              //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $export = _require253('./_export');
            var $parseFloat = _require253('./_parse-float');
            // 20.1.2.12 Number.parseFloat(string)
            $export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_parse-float.js": function (_require254, _exports144, _module136) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_parse-float.js                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $parseFloat = _require254('./_global').parseFloat;
            var $trim = _require254('./_string-trim').trim;

            _module136.exports = 1 / $parseFloat(_require254('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {
              var string = $trim(String(str), 3);
              var result = $parseFloat(string);
              return result === 0 && string.charAt(0) == '-' ? -0 : result;
            } : $parseFloat;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.number.parse-int.js": function (_require255) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.number.parse-int.js                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $export = _require255('./_export');
            var $parseInt = _require255('./_parse-int');
            // 20.1.2.13 Number.parseInt(string, radix)
            $export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_parse-int.js": function (_require256, _exports145, _module137) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_parse-int.js                                                                          //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var $parseInt = _require256('./_global').parseInt;
            var $trim = _require256('./_string-trim').trim;
            var ws = _require256('./_string-ws');
            var hex = /^[-+]?0[xX]/;

            _module137.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
              var string = $trim(String(str), 3);
              return $parseInt(string, radix >>> 0 || (hex.test(string) ? 16 : 10));
            } : $parseInt;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.typed.uint8-array.js": function (_require257) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.typed.uint8-array.js                                                               //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require257('./_typed-array')('Uint8', 1, function (init) {
              return function Uint8Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_typed-array.js": function (_require258, _exports146, _module138) {
            if (_require258('./_descriptors')) {
              var LIBRARY = _require258('./_library');
              var global = _require258('./_global');
              var fails = _require258('./_fails');
              var $export = _require258('./_export');
              var $typed = _require258('./_typed');
              var $buffer = _require258('./_typed-buffer');
              var ctx = _require258('./_ctx');
              var anInstance = _require258('./_an-instance');
              var propertyDesc = _require258('./_property-desc');
              var hide = _require258('./_hide');
              var redefineAll = _require258('./_redefine-all');
              var toInteger = _require258('./_to-integer');
              var toLength = _require258('./_to-length');
              var toIndex = _require258('./_to-index');
              var toAbsoluteIndex = _require258('./_to-absolute-index');
              var toPrimitive = _require258('./_to-primitive');
              var has = _require258('./_has');
              var classof = _require258('./_classof');
              var isObject = _require258('./_is-object');
              var toObject = _require258('./_to-object');
              var isArrayIter = _require258('./_is-array-iter');
              var create = _require258('./_object-create');
              var getPrototypeOf = _require258('./_object-gpo');
              var gOPN = _require258('./_object-gopn').f;
              var getIterFn = _require258('./core.get-iterator-method');
              var uid = _require258('./_uid');
              var wks = _require258('./_wks');
              var createArrayMethod = _require258('./_array-methods');
              var createArrayIncludes = _require258('./_array-includes');
              var speciesConstructor = _require258('./_species-constructor');
              var ArrayIterators = _require258('./es6.array.iterator');
              var Iterators = _require258('./_iterators');
              var $iterDetect = _require258('./_iter-detect');
              var setSpecies = _require258('./_set-species');
              var arrayFill = _require258('./_array-fill');
              var arrayCopyWithin = _require258('./_array-copy-within');
              var $DP = _require258('./_object-dp');
              var $GOPD = _require258('./_object-gopd');
              var dP = $DP.f;
              var gOPD = $GOPD.f;
              var RangeError = global.RangeError;
              var TypeError = global.TypeError;
              var Uint8Array = global.Uint8Array;
              var ARRAY_BUFFER = 'ArrayBuffer';
              var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
              var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
              var PROTOTYPE = 'prototype';
              var ArrayProto = Array[PROTOTYPE];
              var $ArrayBuffer = $buffer.ArrayBuffer;
              var $DataView = $buffer.DataView;
              var arrayForEach = createArrayMethod(0);
              var arrayFilter = createArrayMethod(2);
              var arraySome = createArrayMethod(3);
              var arrayEvery = createArrayMethod(4);
              var arrayFind = createArrayMethod(5);
              var arrayFindIndex = createArrayMethod(6);
              var arrayIncludes = createArrayIncludes(true);
              var arrayIndexOf = createArrayIncludes(false);
              var arrayValues = ArrayIterators.values;
              var arrayKeys = ArrayIterators.keys;
              var arrayEntries = ArrayIterators.entries;
              var arrayLastIndexOf = ArrayProto.lastIndexOf;
              var arrayReduce = ArrayProto.reduce;
              var arrayReduceRight = ArrayProto.reduceRight;
              var arrayJoin = ArrayProto.join;
              var arraySort = ArrayProto.sort;
              var arraySlice = ArrayProto.slice;
              var arrayToString = ArrayProto.toString;
              var arrayToLocaleString = ArrayProto.toLocaleString;
              var ITERATOR = wks('iterator');
              var TAG = wks('toStringTag');
              var TYPED_CONSTRUCTOR = uid('typed_constructor');
              var DEF_CONSTRUCTOR = uid('def_constructor');
              var ALL_CONSTRUCTORS = $typed.CONSTR;
              var TYPED_ARRAY = $typed.TYPED;
              var VIEW = $typed.VIEW;
              var WRONG_LENGTH = 'Wrong length!';

              var $map = createArrayMethod(1, function (O, length) {
                return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
              });

              var LITTLE_ENDIAN = fails(function () {
                // eslint-disable-next-line no-undef
                return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
              });

              var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
                new Uint8Array(1).set({});
              });

              var toOffset = function (it, BYTES) {
                var offset = toInteger(it);
                if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
                return offset;
              };

              var validate = function (it) {
                if (isObject(it) && TYPED_ARRAY in it) return it;
                throw TypeError(it + ' is not a typed array!');
              };

              var allocate = function (C, length) {
                if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
                  throw TypeError('It is not a typed array constructor!');
                }return new C(length);
              };

              var speciesFromList = function (O, list) {
                return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
              };

              var fromList = function (C, list) {
                var index = 0;
                var length = list.length;
                var result = allocate(C, length);
                while (length > index) result[index] = list[index++];
                return result;
              };

              var addGetter = function (it, key, internal) {
                dP(it, key, { get: function () {
                    return this._d[internal];
                  } });
              };

              var $from = function from(source /* , mapfn, thisArg */) {
                var O = toObject(source);
                var aLen = arguments.length;
                var mapfn = aLen > 1 ? arguments[1] : undefined;
                var mapping = mapfn !== undefined;
                var iterFn = getIterFn(O);
                var i, length, values, result, step, iterator;
                if (iterFn != undefined && !isArrayIter(iterFn)) {
                  for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
                    values.push(step.value);
                  }O = values;
                }
                if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
                for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
                  result[i] = mapping ? mapfn(O[i], i) : O[i];
                }
                return result;
              };

              var $of = function of() /* ...items */{
                var index = 0;
                var length = arguments.length;
                var result = allocate(this, length);
                while (length > index) result[index] = arguments[index++];
                return result;
              };

              // iOS Safari 6.x fails here
              var TO_LOCALE_BUG = !!Uint8Array && fails(function () {
                arrayToLocaleString.call(new Uint8Array(1));
              });

              var $toLocaleString = function toLocaleString() {
                return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
              };

              var proto = {
                copyWithin: function copyWithin(target, start /* , end */) {
                  return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
                },
                every: function every(callbackfn /* , thisArg */) {
                  return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                fill: function fill(value /* , start, end */) {
                  // eslint-disable-line no-unused-vars
                  return arrayFill.apply(validate(this), arguments);
                },
                filter: function filter(callbackfn /* , thisArg */) {
                  return speciesFromList(this, arrayFilter(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined));
                },
                find: function find(predicate /* , thisArg */) {
                  return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
                },
                findIndex: function findIndex(predicate /* , thisArg */) {
                  return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
                },
                forEach: function forEach(callbackfn /* , thisArg */) {
                  arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                indexOf: function indexOf(searchElement /* , fromIndex */) {
                  return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
                },
                includes: function includes(searchElement /* , fromIndex */) {
                  return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
                },
                join: function join(separator) {
                  // eslint-disable-line no-unused-vars
                  return arrayJoin.apply(validate(this), arguments);
                },
                lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) {
                  // eslint-disable-line no-unused-vars
                  return arrayLastIndexOf.apply(validate(this), arguments);
                },
                map: function map(mapfn /* , thisArg */) {
                  return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                reduce: function reduce(callbackfn /* , initialValue */) {
                  // eslint-disable-line no-unused-vars
                  return arrayReduce.apply(validate(this), arguments);
                },
                reduceRight: function reduceRight(callbackfn /* , initialValue */) {
                  // eslint-disable-line no-unused-vars
                  return arrayReduceRight.apply(validate(this), arguments);
                },
                reverse: function reverse() {
                  var that = this;
                  var length = validate(that).length;
                  var middle = Math.floor(length / 2);
                  var index = 0;
                  var value;
                  while (index < middle) {
                    value = that[index];
                    that[index++] = that[--length];
                    that[length] = value;
                  }return that;
                },
                some: function some(callbackfn /* , thisArg */) {
                  return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                sort: function sort(comparefn) {
                  return arraySort.call(validate(this), comparefn);
                },
                subarray: function subarray(begin, end) {
                  var O = validate(this);
                  var length = O.length;
                  var $begin = toAbsoluteIndex(begin, length);
                  return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(O.buffer, O.byteOffset + $begin * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin));
                }
              };

              var $slice = function slice(start, end) {
                return speciesFromList(this, arraySlice.call(validate(this), start, end));
              };

              var $set = function set(arrayLike /* , offset */) {
                validate(this);
                var offset = toOffset(arguments[1], 1);
                var length = this.length;
                var src = toObject(arrayLike);
                var len = toLength(src.length);
                var index = 0;
                if (len + offset > length) throw RangeError(WRONG_LENGTH);
                while (index < len) this[offset + index] = src[index++];
              };

              var $iterators = {
                entries: function entries() {
                  return arrayEntries.call(validate(this));
                },
                keys: function keys() {
                  return arrayKeys.call(validate(this));
                },
                values: function values() {
                  return arrayValues.call(validate(this));
                }
              };

              var isTAIndex = function (target, key) {
                return isObject(target) && target[TYPED_ARRAY] && typeof key != 'symbol' && key in target && String(+key) == String(key);
              };
              var $getDesc = function getOwnPropertyDescriptor(target, key) {
                return isTAIndex(target, key = toPrimitive(key, true)) ? propertyDesc(2, target[key]) : gOPD(target, key);
              };
              var $setDesc = function defineProperty(target, key, desc) {
                if (isTAIndex(target, key = toPrimitive(key, true)) && isObject(desc) && has(desc, 'value') && !has(desc, 'get') && !has(desc, 'set')
                // TODO: add validation descriptor w/o calling accessors
                && !desc.configurable && (!has(desc, 'writable') || desc.writable) && (!has(desc, 'enumerable') || desc.enumerable)) {
                  target[key] = desc.value;
                  return target;
                }return dP(target, key, desc);
              };

              if (!ALL_CONSTRUCTORS) {
                $GOPD.f = $getDesc;
                $DP.f = $setDesc;
              }

              $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
                getOwnPropertyDescriptor: $getDesc,
                defineProperty: $setDesc
              });

              if (fails(function () {
                arrayToString.call({});
              })) {
                arrayToString = arrayToLocaleString = function toString() {
                  return arrayJoin.call(this);
                };
              }

              var $TypedArrayPrototype$ = redefineAll({}, proto);
              redefineAll($TypedArrayPrototype$, $iterators);
              hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
              redefineAll($TypedArrayPrototype$, {
                slice: $slice,
                set: $set,
                constructor: function () {/* noop */},
                toString: arrayToString,
                toLocaleString: $toLocaleString
              });
              addGetter($TypedArrayPrototype$, 'buffer', 'b');
              addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
              addGetter($TypedArrayPrototype$, 'byteLength', 'l');
              addGetter($TypedArrayPrototype$, 'length', 'e');
              dP($TypedArrayPrototype$, TAG, {
                get: function () {
                  return this[TYPED_ARRAY];
                }
              });

              // eslint-disable-next-line max-statements
              _module138.exports = function (KEY, BYTES, wrapper, CLAMPED) {
                CLAMPED = !!CLAMPED;
                var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
                var GETTER = 'get' + KEY;
                var SETTER = 'set' + KEY;
                var TypedArray = global[NAME];
                var Base = TypedArray || {};
                var TAC = TypedArray && getPrototypeOf(TypedArray);
                var FORCED = !TypedArray || !$typed.ABV;
                var O = {};
                var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
                var getter = function (that, index) {
                  var data = that._d;
                  return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
                };
                var setter = function (that, index, value) {
                  var data = that._d;
                  if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
                  data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
                };
                var addElement = function (that, index) {
                  dP(that, index, {
                    get: function () {
                      return getter(this, index);
                    },
                    set: function (value) {
                      return setter(this, index, value);
                    },
                    enumerable: true
                  });
                };
                if (FORCED) {
                  TypedArray = wrapper(function (that, data, $offset, $length) {
                    anInstance(that, TypedArray, NAME, '_d');
                    var index = 0;
                    var offset = 0;
                    var buffer, byteLength, length, klass;
                    if (!isObject(data)) {
                      length = toIndex(data);
                      byteLength = length * BYTES;
                      buffer = new $ArrayBuffer(byteLength);
                    } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
                      buffer = data;
                      offset = toOffset($offset, BYTES);
                      var $len = data.byteLength;
                      if ($length === undefined) {
                        if ($len % BYTES) throw RangeError(WRONG_LENGTH);
                        byteLength = $len - offset;
                        if (byteLength < 0) throw RangeError(WRONG_LENGTH);
                      } else {
                        byteLength = toLength($length) * BYTES;
                        if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
                      }
                      length = byteLength / BYTES;
                    } else if (TYPED_ARRAY in data) {
                      return fromList(TypedArray, data);
                    } else {
                      return $from.call(TypedArray, data);
                    }
                    hide(that, '_d', {
                      b: buffer,
                      o: offset,
                      l: byteLength,
                      e: length,
                      v: new $DataView(buffer)
                    });
                    while (index < length) addElement(that, index++);
                  });
                  TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
                  hide(TypedArrayPrototype, 'constructor', TypedArray);
                } else if (!fails(function () {
                  TypedArray(1);
                }) || !fails(function () {
                  new TypedArray(-1); // eslint-disable-line no-new
                }) || !$iterDetect(function (iter) {
                  new TypedArray(); // eslint-disable-line no-new
                  new TypedArray(null); // eslint-disable-line no-new
                  new TypedArray(1.5); // eslint-disable-line no-new
                  new TypedArray(iter); // eslint-disable-line no-new
                }, true)) {
                  TypedArray = wrapper(function (that, data, $offset, $length) {
                    anInstance(that, TypedArray, NAME);
                    var klass;
                    // `ws` module bug, temporarily remove validation length for Uint8Array
                    // https://github.com/websockets/ws/pull/645
                    if (!isObject(data)) return new Base(toIndex(data));
                    if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
                      return $length !== undefined ? new Base(data, toOffset($offset, BYTES), $length) : $offset !== undefined ? new Base(data, toOffset($offset, BYTES)) : new Base(data);
                    }
                    if (TYPED_ARRAY in data) return fromList(TypedArray, data);
                    return $from.call(TypedArray, data);
                  });
                  arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
                    if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
                  });
                  TypedArray[PROTOTYPE] = TypedArrayPrototype;
                  if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
                }
                var $nativeIterator = TypedArrayPrototype[ITERATOR];
                var CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
                var $iterator = $iterators.values;
                hide(TypedArray, TYPED_CONSTRUCTOR, true);
                hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
                hide(TypedArrayPrototype, VIEW, true);
                hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

                if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
                  dP(TypedArrayPrototype, TAG, {
                    get: function () {
                      return NAME;
                    }
                  });
                }

                O[NAME] = TypedArray;

                $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

                $export($export.S, NAME, {
                  BYTES_PER_ELEMENT: BYTES
                });

                $export($export.S + $export.F * fails(function () {
                  Base.of.call(TypedArray, 1);
                }), NAME, {
                  from: $from,
                  of: $of
                });

                if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

                $export($export.P, NAME, proto);

                setSpecies(NAME);

                $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

                $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

                if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

                $export($export.P + $export.F * fails(function () {
                  new TypedArray(1).slice();
                }), NAME, { slice: $slice });

                $export($export.P + $export.F * (fails(function () {
                  return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
                }) || !fails(function () {
                  TypedArrayPrototype.toLocaleString.call([1, 2]);
                })), NAME, { toLocaleString: $toLocaleString });

                Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
                if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
              };
            } else _module138.exports = function () {/* empty */};

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_typed.js": function (_require259, _exports147, _module139) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_typed.js                                                                              //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var global = _require259('./_global');
            var hide = _require259('./_hide');
            var uid = _require259('./_uid');
            var TYPED = uid('typed_array');
            var VIEW = uid('view');
            var ABV = !!(global.ArrayBuffer && global.DataView);
            var CONSTR = ABV;
            var i = 0;
            var l = 9;
            var Typed;

            var TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(',');

            while (i < l) {
              if (Typed = global[TypedArrayConstructors[i++]]) {
                hide(Typed.prototype, TYPED, true);
                hide(Typed.prototype, VIEW, true);
              } else CONSTR = false;
            }

            _module139.exports = {
              ABV: ABV,
              CONSTR: CONSTR,
              TYPED: TYPED,
              VIEW: VIEW
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_typed-buffer.js": function (_require260, _exports148) {
            var global = _require260('./_global');
            var DESCRIPTORS = _require260('./_descriptors');
            var LIBRARY = _require260('./_library');
            var $typed = _require260('./_typed');
            var hide = _require260('./_hide');
            var redefineAll = _require260('./_redefine-all');
            var fails = _require260('./_fails');
            var anInstance = _require260('./_an-instance');
            var toInteger = _require260('./_to-integer');
            var toLength = _require260('./_to-length');
            var toIndex = _require260('./_to-index');
            var gOPN = _require260('./_object-gopn').f;
            var dP = _require260('./_object-dp').f;
            var arrayFill = _require260('./_array-fill');
            var setToStringTag = _require260('./_set-to-string-tag');
            var ARRAY_BUFFER = 'ArrayBuffer';
            var DATA_VIEW = 'DataView';
            var PROTOTYPE = 'prototype';
            var WRONG_LENGTH = 'Wrong length!';
            var WRONG_INDEX = 'Wrong index!';
            var $ArrayBuffer = global[ARRAY_BUFFER];
            var $DataView = global[DATA_VIEW];
            var Math = global.Math;
            var RangeError = global.RangeError;
            // eslint-disable-next-line no-shadow-restricted-names
            var Infinity = global.Infinity;
            var BaseBuffer = $ArrayBuffer;
            var abs = Math.abs;
            var pow = Math.pow;
            var floor = Math.floor;
            var log = Math.log;
            var LN2 = Math.LN2;
            var BUFFER = 'buffer';
            var BYTE_LENGTH = 'byteLength';
            var BYTE_OFFSET = 'byteOffset';
            var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
            var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
            var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

            // IEEE754 conversions based on https://github.com/feross/ieee754
            function packIEEE754(value, mLen, nBytes) {
              var buffer = new Array(nBytes);
              var eLen = nBytes * 8 - mLen - 1;
              var eMax = (1 << eLen) - 1;
              var eBias = eMax >> 1;
              var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
              var i = 0;
              var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
              var e, m, c;
              value = abs(value);
              // eslint-disable-next-line no-self-compare
              if (value != value || value === Infinity) {
                // eslint-disable-next-line no-self-compare
                m = value != value ? 1 : 0;
                e = eMax;
              } else {
                e = floor(log(value) / LN2);
                if (value * (c = pow(2, -e)) < 1) {
                  e--;
                  c *= 2;
                }
                if (e + eBias >= 1) {
                  value += rt / c;
                } else {
                  value += rt * pow(2, 1 - eBias);
                }
                if (value * c >= 2) {
                  e++;
                  c /= 2;
                }
                if (e + eBias >= eMax) {
                  m = 0;
                  e = eMax;
                } else if (e + eBias >= 1) {
                  m = (value * c - 1) * pow(2, mLen);
                  e = e + eBias;
                } else {
                  m = value * pow(2, eBias - 1) * pow(2, mLen);
                  e = 0;
                }
              }
              for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
              e = e << mLen | m;
              eLen += mLen;
              for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
              buffer[--i] |= s * 128;
              return buffer;
            }
            function unpackIEEE754(buffer, mLen, nBytes) {
              var eLen = nBytes * 8 - mLen - 1;
              var eMax = (1 << eLen) - 1;
              var eBias = eMax >> 1;
              var nBits = eLen - 7;
              var i = nBytes - 1;
              var s = buffer[i--];
              var e = s & 127;
              var m;
              s >>= 7;
              for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
              m = e & (1 << -nBits) - 1;
              e >>= -nBits;
              nBits += mLen;
              for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
              if (e === 0) {
                e = 1 - eBias;
              } else if (e === eMax) {
                return m ? NaN : s ? -Infinity : Infinity;
              } else {
                m = m + pow(2, mLen);
                e = e - eBias;
              }return (s ? -1 : 1) * m * pow(2, e - mLen);
            }

            function unpackI32(bytes) {
              return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
            }
            function packI8(it) {
              return [it & 0xff];
            }
            function packI16(it) {
              return [it & 0xff, it >> 8 & 0xff];
            }
            function packI32(it) {
              return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
            }
            function packF64(it) {
              return packIEEE754(it, 52, 8);
            }
            function packF32(it) {
              return packIEEE754(it, 23, 4);
            }

            function addGetter(C, key, internal) {
              dP(C[PROTOTYPE], key, { get: function () {
                  return this[internal];
                } });
            }

            function get(view, bytes, index, isLittleEndian) {
              var numIndex = +index;
              var intIndex = toIndex(numIndex);
              if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
              var store = view[$BUFFER]._b;
              var start = intIndex + view[$OFFSET];
              var pack = store.slice(start, start + bytes);
              return isLittleEndian ? pack : pack.reverse();
            }
            function set(view, bytes, index, conversion, value, isLittleEndian) {
              var numIndex = +index;
              var intIndex = toIndex(numIndex);
              if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
              var store = view[$BUFFER]._b;
              var start = intIndex + view[$OFFSET];
              var pack = conversion(+value);
              for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
            }

            if (!$typed.ABV) {
              $ArrayBuffer = function ArrayBuffer(length) {
                anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
                var byteLength = toIndex(length);
                this._b = arrayFill.call(new Array(byteLength), 0);
                this[$LENGTH] = byteLength;
              };

              $DataView = function DataView(buffer, byteOffset, byteLength) {
                anInstance(this, $DataView, DATA_VIEW);
                anInstance(buffer, $ArrayBuffer, DATA_VIEW);
                var bufferLength = buffer[$LENGTH];
                var offset = toInteger(byteOffset);
                if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
                byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
                if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
                this[$BUFFER] = buffer;
                this[$OFFSET] = offset;
                this[$LENGTH] = byteLength;
              };

              if (DESCRIPTORS) {
                addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
                addGetter($DataView, BUFFER, '_b');
                addGetter($DataView, BYTE_LENGTH, '_l');
                addGetter($DataView, BYTE_OFFSET, '_o');
              }

              redefineAll($DataView[PROTOTYPE], {
                getInt8: function getInt8(byteOffset) {
                  return get(this, 1, byteOffset)[0] << 24 >> 24;
                },
                getUint8: function getUint8(byteOffset) {
                  return get(this, 1, byteOffset)[0];
                },
                getInt16: function getInt16(byteOffset /* , littleEndian */) {
                  var bytes = get(this, 2, byteOffset, arguments[1]);
                  return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
                },
                getUint16: function getUint16(byteOffset /* , littleEndian */) {
                  var bytes = get(this, 2, byteOffset, arguments[1]);
                  return bytes[1] << 8 | bytes[0];
                },
                getInt32: function getInt32(byteOffset /* , littleEndian */) {
                  return unpackI32(get(this, 4, byteOffset, arguments[1]));
                },
                getUint32: function getUint32(byteOffset /* , littleEndian */) {
                  return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
                },
                getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
                  return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
                },
                getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
                  return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
                },
                setInt8: function setInt8(byteOffset, value) {
                  set(this, 1, byteOffset, packI8, value);
                },
                setUint8: function setUint8(byteOffset, value) {
                  set(this, 1, byteOffset, packI8, value);
                },
                setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
                  set(this, 2, byteOffset, packI16, value, arguments[2]);
                },
                setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
                  set(this, 2, byteOffset, packI16, value, arguments[2]);
                },
                setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
                  set(this, 4, byteOffset, packI32, value, arguments[2]);
                },
                setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
                  set(this, 4, byteOffset, packI32, value, arguments[2]);
                },
                setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
                  set(this, 4, byteOffset, packF32, value, arguments[2]);
                },
                setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
                  set(this, 8, byteOffset, packF64, value, arguments[2]);
                }
              });
            } else {
              if (!fails(function () {
                $ArrayBuffer(1);
              }) || !fails(function () {
                new $ArrayBuffer(-1); // eslint-disable-line no-new
              }) || fails(function () {
                new $ArrayBuffer(); // eslint-disable-line no-new
                new $ArrayBuffer(1.5); // eslint-disable-line no-new
                new $ArrayBuffer(NaN); // eslint-disable-line no-new
                return $ArrayBuffer.name != ARRAY_BUFFER;
              })) {
                $ArrayBuffer = function ArrayBuffer(length) {
                  anInstance(this, $ArrayBuffer);
                  return new BaseBuffer(toIndex(length));
                };
                var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
                for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
                  if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
                }
                if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
              }
              // iOS Safari 7.x bug
              var view = new $DataView(new $ArrayBuffer(2));
              var $setInt8 = $DataView[PROTOTYPE].setInt8;
              view.setInt8(0, 2147483648);
              view.setInt8(1, 2147483649);
              if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
                setInt8: function setInt8(byteOffset, value) {
                  $setInt8.call(this, byteOffset, value << 24 >> 24);
                },
                setUint8: function setUint8(byteOffset, value) {
                  $setInt8.call(this, byteOffset, value << 24 >> 24);
                }
              }, true);
            }
            setToStringTag($ArrayBuffer, ARRAY_BUFFER);
            setToStringTag($DataView, DATA_VIEW);
            hide($DataView[PROTOTYPE], $typed.VIEW, true);
            _exports148[ARRAY_BUFFER] = $ArrayBuffer;
            _exports148[DATA_VIEW] = $DataView;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_to-index.js": function (_require261, _exports149, _module140) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_to-index.js                                                                           //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // https://tc39.github.io/ecma262/#sec-toindex
            var toInteger = _require261('./_to-integer');
            var toLength = _require261('./_to-length');
            _module140.exports = function (it) {
              if (it === undefined) return 0;
              var number = toInteger(it);
              var length = toLength(number);
              if (number !== length) throw RangeError('Wrong length!');
              return length;
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "_species-constructor.js": function (_require262, _exports150, _module141) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/_species-constructor.js                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // 7.3.20 SpeciesConstructor(O, defaultConstructor)
            var anObject = _require262('./_an-object');
            var aFunction = _require262('./_a-function');
            var SPECIES = _require262('./_wks')('species');
            _module141.exports = function (O, D) {
              var C = anObject(O).constructor;
              var S;
              return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
            };

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "es6.typed.uint32-array.js": function (_require263) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/modules/es6.typed.uint32-array.js                                                              //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require263('./_typed-array')('Uint32', 4, function (init) {
              return function Uint32Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
              };
            });

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } }, "es6": { "array.js": function (_require264, _exports151, _module142) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/es6/array.js                                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require264('../modules/es6.string.iterator');
            _require264('../modules/es6.array.is-array');
            _require264('../modules/es6.array.from');
            _require264('../modules/es6.array.of');
            _require264('../modules/es6.array.join');
            _require264('../modules/es6.array.slice');
            _require264('../modules/es6.array.sort');
            _require264('../modules/es6.array.for-each');
            _require264('../modules/es6.array.map');
            _require264('../modules/es6.array.filter');
            _require264('../modules/es6.array.some');
            _require264('../modules/es6.array.every');
            _require264('../modules/es6.array.reduce');
            _require264('../modules/es6.array.reduce-right');
            _require264('../modules/es6.array.index-of');
            _require264('../modules/es6.array.last-index-of');
            _require264('../modules/es6.array.copy-within');
            _require264('../modules/es6.array.fill');
            _require264('../modules/es6.array.find');
            _require264('../modules/es6.array.find-index');
            _require264('../modules/es6.array.species');
            _require264('../modules/es6.array.iterator');
            _module142.exports = _require264('../modules/_core').Array;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "function.js": function (_require265, _exports152, _module143) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/es6/function.js                                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require265('../modules/es6.function.bind');
            _require265('../modules/es6.function.name');
            _require265('../modules/es6.function.has-instance');
            _module143.exports = _require265('../modules/_core').Function;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "math.js": function (_require266, _exports153, _module144) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/es6/math.js                                                                                    //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require266('../modules/es6.math.acosh');
            _require266('../modules/es6.math.asinh');
            _require266('../modules/es6.math.atanh');
            _require266('../modules/es6.math.cbrt');
            _require266('../modules/es6.math.clz32');
            _require266('../modules/es6.math.cosh');
            _require266('../modules/es6.math.expm1');
            _require266('../modules/es6.math.fround');
            _require266('../modules/es6.math.hypot');
            _require266('../modules/es6.math.imul');
            _require266('../modules/es6.math.log10');
            _require266('../modules/es6.math.log1p');
            _require266('../modules/es6.math.log2');
            _require266('../modules/es6.math.sign');
            _require266('../modules/es6.math.sinh');
            _require266('../modules/es6.math.tanh');
            _require266('../modules/es6.math.trunc');
            _module144.exports = _require266('../modules/_core').Math;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "object.js": function (_require267, _exports154, _module145) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/es6/object.js                                                                                  //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require267('../modules/es6.symbol');
            _require267('../modules/es6.object.create');
            _require267('../modules/es6.object.define-property');
            _require267('../modules/es6.object.define-properties');
            _require267('../modules/es6.object.get-own-property-descriptor');
            _require267('../modules/es6.object.get-prototype-of');
            _require267('../modules/es6.object.keys');
            _require267('../modules/es6.object.get-own-property-names');
            _require267('../modules/es6.object.freeze');
            _require267('../modules/es6.object.seal');
            _require267('../modules/es6.object.prevent-extensions');
            _require267('../modules/es6.object.is-frozen');
            _require267('../modules/es6.object.is-sealed');
            _require267('../modules/es6.object.is-extensible');
            _require267('../modules/es6.object.assign');
            _require267('../modules/es6.object.is');
            _require267('../modules/es6.object.set-prototype-of');
            _require267('../modules/es6.object.to-string');

            _module145.exports = _require267('../modules/_core').Object;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "regexp.js": function (_require268, _exports155, _module146) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/es6/regexp.js                                                                                  //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require268('../modules/es6.regexp.constructor');
            _require268('../modules/es6.regexp.to-string');
            _require268('../modules/es6.regexp.flags');
            _require268('../modules/es6.regexp.match');
            _require268('../modules/es6.regexp.replace');
            _require268('../modules/es6.regexp.search');
            _require268('../modules/es6.regexp.split');
            _module146.exports = _require268('../modules/_core').RegExp;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "string.js": function (_require269, _exports156, _module147) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/es6/string.js                                                                                  //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require269('../modules/es6.string.from-code-point');
            _require269('../modules/es6.string.raw');
            _require269('../modules/es6.string.trim');
            _require269('../modules/es6.string.iterator');
            _require269('../modules/es6.string.code-point-at');
            _require269('../modules/es6.string.ends-with');
            _require269('../modules/es6.string.includes');
            _require269('../modules/es6.string.repeat');
            _require269('../modules/es6.string.starts-with');
            _require269('../modules/es6.string.anchor');
            _require269('../modules/es6.string.big');
            _require269('../modules/es6.string.blink');
            _require269('../modules/es6.string.bold');
            _require269('../modules/es6.string.fixed');
            _require269('../modules/es6.string.fontcolor');
            _require269('../modules/es6.string.fontsize');
            _require269('../modules/es6.string.italics');
            _require269('../modules/es6.string.link');
            _require269('../modules/es6.string.small');
            _require269('../modules/es6.string.strike');
            _require269('../modules/es6.string.sub');
            _require269('../modules/es6.string.sup');
            _require269('../modules/es6.regexp.match');
            _require269('../modules/es6.regexp.replace');
            _require269('../modules/es6.regexp.search');
            _require269('../modules/es6.regexp.split');
            _module147.exports = _require269('../modules/_core').String;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "weak-map.js": function (_require270, _exports157, _module148) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/es6/weak-map.js                                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require270('../modules/es6.object.to-string');
            _require270('../modules/es6.array.iterator');
            _require270('../modules/es6.weak-map');
            _module148.exports = _require270('../modules/_core').WeakMap;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "weak-set.js": function (_require271, _exports158, _module149) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/es6/weak-set.js                                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require271('../modules/es6.object.to-string');
            _require271('../modules/web.dom.iterable');
            _require271('../modules/es6.weak-set');
            _module149.exports = _require271('../modules/_core').WeakSet;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } }, "es7": { "array.js": function (_require272, _exports159, _module150) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/es7/array.js                                                                                   //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require272('../modules/es7.array.includes');
            _require272('../modules/es7.array.flat-map');
            _require272('../modules/es7.array.flatten');
            _module150.exports = _require272('../modules/_core').Array;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "object.js": function (_require273, _exports160, _module151) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // node_modules/core-js/es7/object.js                                                                                  //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require273('../modules/es7.object.get-own-property-descriptors');
            _require273('../modules/es7.object.values');
            _require273('../modules/es7.object.entries');
            _require273('../modules/es7.object.define-getter');
            _require273('../modules/es7.object.define-setter');
            _require273('../modules/es7.object.lookup-getter');
            _require273('../modules/es7.object.lookup-setter');
            _module151.exports = _require273('../modules/_core').Object;

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } }, "library": { "fn": { "object": { "assign.js": function (_require274, _exports161, _module152) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/core-js/library/fn/object/assign.js                                                                    //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _require274('../../modules/es6.object.assign');
                _module152.exports = _require274('../../modules/_core').Object.assign;

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "create.js": function (_require275, _exports162, _module153) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/core-js/library/fn/object/create.js                                                                    //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _require275('../../modules/es6.object.create');
                var $Object = _require275('../../modules/_core').Object;
                _module153.exports = function create(P, D) {
                  return $Object.create(P, D);
                };

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "get-own-property-descriptor.js": function (_require276, _exports163, _module154) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/core-js/library/fn/object/get-own-property-descriptor.js                                               //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _require276('../../modules/es6.object.get-own-property-descriptor');
                var $Object = _require276('../../modules/_core').Object;
                _module154.exports = function getOwnPropertyDescriptor(it, key) {
                  return $Object.getOwnPropertyDescriptor(it, key);
                };

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "get-own-property-symbols.js": function (_require277, _exports164, _module155) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/core-js/library/fn/object/get-own-property-symbols.js                                                  //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _require277('../../modules/es6.symbol');
                _module155.exports = _require277('../../modules/_core').Object.getOwnPropertySymbols;

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "keys.js": function (_require278, _exports165, _module156) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/core-js/library/fn/object/keys.js                                                                      //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _require278('../../modules/es6.object.keys');
                _module156.exports = _require278('../../modules/_core').Object.keys;

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "define-property.js": function (_require279, _exports166, _module157) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/core-js/library/fn/object/define-property.js                                                           //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _require279('../../modules/es6.object.define-property');
                var $Object = _require279('../../modules/_core').Object;
                _module157.exports = function defineProperty(it, key, desc) {
                  return $Object.defineProperty(it, key, desc);
                };

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              } }, "symbol": { "iterator.js": function (_require280, _exports167, _module158) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/core-js/library/fn/symbol/iterator.js                                                                  //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _require280('../../modules/es6.string.iterator');
                _require280('../../modules/web.dom.iterable');
                _module158.exports = _require280('../../modules/_wks-ext').f('iterator');

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "index.js": function (_require281, _exports168, _module159) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/core-js/library/fn/symbol/index.js                                                                     //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _require281('../../modules/es6.symbol');
                _require281('../../modules/es6.object.to-string');
                _require281('../../modules/es7.symbol.async-iterator');
                _require281('../../modules/es7.symbol.observable');
                _module159.exports = _require281('../../modules/_core').Symbol;

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              } }, "array": { "from.js": function (_require282, _exports169, _module160) {

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                     //
                // node_modules/core-js/library/fn/array/from.js                                                                       //
                //                                                                                                                     //
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _require282('../../modules/es6.string.iterator');
                _require282('../../modules/es6.array.from');
                _module160.exports = _require282('../../modules/_core').Array.from;

                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              } }, "is-iterable.js": function (_require283, _exports170, _module161) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/fn/is-iterable.js                                                                      //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _require283('../modules/web.dom.iterable');
              _require283('../modules/es6.string.iterator');
              _module161.exports = _require283('../modules/core.is-iterable');

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            } }, "modules": { "es6.object.assign.js": function (_require284) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/es6.object.assign.js                                                           //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 19.1.3.1 Object.assign(target, source)
              var $export = _require284('./_export');

              $export($export.S + $export.F, 'Object', { assign: _require284('./_object-assign') });

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_export.js": function (_require285, _exports172, _module162) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_export.js                                                                     //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var global = _require285('./_global');
              var core = _require285('./_core');
              var ctx = _require285('./_ctx');
              var hide = _require285('./_hide');
              var has = _require285('./_has');
              var PROTOTYPE = 'prototype';

              var $export = function (type, name, source) {
                var IS_FORCED = type & $export.F;
                var IS_GLOBAL = type & $export.G;
                var IS_STATIC = type & $export.S;
                var IS_PROTO = type & $export.P;
                var IS_BIND = type & $export.B;
                var IS_WRAP = type & $export.W;
                var _exports171 = IS_GLOBAL ? core : core[name] || (core[name] = {});
                var expProto = _exports171[PROTOTYPE];
                var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
                var key, own, out;
                if (IS_GLOBAL) source = name;
                for (key in source) {
                  // contains in native
                  own = !IS_FORCED && target && target[key] !== undefined;
                  if (own && has(_exports171, key)) continue;
                  // export native or passed
                  out = own ? target[key] : source[key];
                  // prevent global pollution for namespaces
                  _exports171[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
                  // bind timers to global for call from export context
                  : IS_BIND && own ? ctx(out, global)
                  // wrap global constructors for prevent change them in library
                  : IS_WRAP && target[key] == out ? function (C) {
                    var F = function (a, b, c) {
                      if (this instanceof C) {
                        switch (arguments.length) {
                          case 0:
                            return new C();
                          case 1:
                            return new C(a);
                          case 2:
                            return new C(a, b);
                        }return new C(a, b, c);
                      }return C.apply(this, arguments);
                    };
                    F[PROTOTYPE] = C[PROTOTYPE];
                    return F;
                    // make static versions for prototype methods
                  }(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
                  // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
                  if (IS_PROTO) {
                    (_exports171.virtual || (_exports171.virtual = {}))[key] = out;
                    // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
                    if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
                  }
                }
              };
              // type bitmap
              $export.F = 1; // forced
              $export.G = 2; // global
              $export.S = 4; // static
              $export.P = 8; // proto
              $export.B = 16; // bind
              $export.W = 32; // wrap
              $export.U = 64; // safe
              $export.R = 128; // real proto method for `library`
              _module162.exports = $export;

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_global.js": function (_require286, _exports173, _module163) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_global.js                                                                     //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
              var global = _module163.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self
              // eslint-disable-next-line no-new-func
              : Function('return this')();
              if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_core.js": function (_require287, _exports174, _module164) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_core.js                                                                       //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var core = _module164.exports = { version: '2.5.7' };
              if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_ctx.js": function (_require288, _exports175, _module165) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_ctx.js                                                                        //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // optional / simple context binding
              var aFunction = _require288('./_a-function');
              _module165.exports = function (fn, that, length) {
                aFunction(fn);
                if (that === undefined) return fn;
                switch (length) {
                  case 1:
                    return function (a) {
                      return fn.call(that, a);
                    };
                  case 2:
                    return function (a, b) {
                      return fn.call(that, a, b);
                    };
                  case 3:
                    return function (a, b, c) {
                      return fn.call(that, a, b, c);
                    };
                }
                return function () /* ...args */{
                  return fn.apply(that, arguments);
                };
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_a-function.js": function (_require289, _exports176, _module166) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_a-function.js                                                                 //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module166.exports = function (it) {
                if (typeof it != 'function') throw TypeError(it + ' is not a function!');
                return it;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_hide.js": function (_require290, _exports177, _module167) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_hide.js                                                                       //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var dP = _require290('./_object-dp');
              var createDesc = _require290('./_property-desc');
              _module167.exports = _require290('./_descriptors') ? function (object, key, value) {
                return dP.f(object, key, createDesc(1, value));
              } : function (object, key, value) {
                object[key] = value;
                return object;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-dp.js": function (_require291, _exports178) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-dp.js                                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var anObject = _require291('./_an-object');
              var IE8_DOM_DEFINE = _require291('./_ie8-dom-define');
              var toPrimitive = _require291('./_to-primitive');
              var dP = Object.defineProperty;

              _exports178.f = _require291('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
                anObject(O);
                P = toPrimitive(P, true);
                anObject(Attributes);
                if (IE8_DOM_DEFINE) try {
                  return dP(O, P, Attributes);
                } catch (e) {/* empty */}
                if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
                if ('value' in Attributes) O[P] = Attributes.value;
                return O;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_an-object.js": function (_require292, _exports179, _module168) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_an-object.js                                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var isObject = _require292('./_is-object');
              _module168.exports = function (it) {
                if (!isObject(it)) throw TypeError(it + ' is not an object!');
                return it;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_is-object.js": function (_require293, _exports180, _module169) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_is-object.js                                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module169.exports = function (it) {
                return typeof it === 'object' ? it !== null : typeof it === 'function';
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_ie8-dom-define.js": function (_require294, _exports181, _module170) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_ie8-dom-define.js                                                             //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module170.exports = !_require294('./_descriptors') && !_require294('./_fails')(function () {
                return Object.defineProperty(_require294('./_dom-create')('div'), 'a', { get: function () {
                    return 7;
                  } }).a != 7;
              });

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_descriptors.js": function (_require295, _exports182, _module171) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_descriptors.js                                                                //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // Thank's IE8 for his funny defineProperty
              _module171.exports = !_require295('./_fails')(function () {
                return Object.defineProperty({}, 'a', { get: function () {
                    return 7;
                  } }).a != 7;
              });

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_fails.js": function (_require296, _exports183, _module172) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_fails.js                                                                      //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module172.exports = function (exec) {
                try {
                  return !!exec();
                } catch (e) {
                  return true;
                }
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_dom-create.js": function (_require297, _exports184, _module173) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_dom-create.js                                                                 //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var isObject = _require297('./_is-object');
              var document = _require297('./_global').document;
              // typeof document.createElement is 'object' in old IE
              var is = isObject(document) && isObject(document.createElement);
              _module173.exports = function (it) {
                return is ? document.createElement(it) : {};
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_to-primitive.js": function (_require298, _exports185, _module174) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_to-primitive.js                                                               //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 7.1.1 ToPrimitive(input [, PreferredType])
              var isObject = _require298('./_is-object');
              // instead of the ES6 spec version, we didn't implement @@toPrimitive case
              // and the second argument - flag - preferred type is a string
              _module174.exports = function (it, S) {
                if (!isObject(it)) return it;
                var fn, val;
                if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
                if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
                if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
                throw TypeError("Can't convert object to primitive value");
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_property-desc.js": function (_require299, _exports186, _module175) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_property-desc.js                                                              //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module175.exports = function (bitmap, value) {
                return {
                  enumerable: !(bitmap & 1),
                  configurable: !(bitmap & 2),
                  writable: !(bitmap & 4),
                  value: value
                };
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_has.js": function (_require300, _exports187, _module176) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_has.js                                                                        //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var hasOwnProperty = {}.hasOwnProperty;
              _module176.exports = function (it, key) {
                return hasOwnProperty.call(it, key);
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-assign.js": function (_require301, _exports188, _module177) {
              // 19.1.2.1 Object.assign(target, source, ...)
              var getKeys = _require301('./_object-keys');
              var gOPS = _require301('./_object-gops');
              var pIE = _require301('./_object-pie');
              var toObject = _require301('./_to-object');
              var IObject = _require301('./_iobject');
              var $assign = Object.assign;

              // should work with symbols and should have deterministic property order (V8 bug)
              _module177.exports = !$assign || _require301('./_fails')(function () {
                var A = {};
                var B = {};
                // eslint-disable-next-line no-undef
                var S = Symbol();
                var K = 'abcdefghijklmnopqrst';
                A[S] = 7;
                K.split('').forEach(function (k) {
                  B[k] = k;
                });
                return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
              }) ? function assign(target, source) {
                // eslint-disable-line no-unused-vars
                var T = toObject(target);
                var aLen = arguments.length;
                var index = 1;
                var getSymbols = gOPS.f;
                var isEnum = pIE.f;
                while (aLen > index) {
                  var S = IObject(arguments[index++]);
                  var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
                  var length = keys.length;
                  var j = 0;
                  var key;
                  while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
                }return T;
              } : $assign;

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-keys.js": function (_require302, _exports189, _module178) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-keys.js                                                                //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 19.1.2.14 / 15.2.3.14 Object.keys(O)
              var $keys = _require302('./_object-keys-internal');
              var enumBugKeys = _require302('./_enum-bug-keys');

              _module178.exports = Object.keys || function keys(O) {
                return $keys(O, enumBugKeys);
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-keys-internal.js": function (_require303, _exports190, _module179) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-keys-internal.js                                                       //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var has = _require303('./_has');
              var toIObject = _require303('./_to-iobject');
              var arrayIndexOf = _require303('./_array-includes')(false);
              var IE_PROTO = _require303('./_shared-key')('IE_PROTO');

              _module179.exports = function (object, names) {
                var O = toIObject(object);
                var i = 0;
                var result = [];
                var key;
                for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
                // Don't enum bug & hidden keys
                while (names.length > i) if (has(O, key = names[i++])) {
                  ~arrayIndexOf(result, key) || result.push(key);
                }
                return result;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_to-iobject.js": function (_require304, _exports191, _module180) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_to-iobject.js                                                                 //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // to indexed object, toObject with fallback for non-array-like ES3 strings
              var IObject = _require304('./_iobject');
              var defined = _require304('./_defined');
              _module180.exports = function (it) {
                return IObject(defined(it));
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_iobject.js": function (_require305, _exports192, _module181) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_iobject.js                                                                    //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // fallback for non-array-like ES3 and non-enumerable old V8 strings
              var cof = _require305('./_cof');
              // eslint-disable-next-line no-prototype-builtins
              _module181.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
                return cof(it) == 'String' ? it.split('') : Object(it);
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_cof.js": function (_require306, _exports193, _module182) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_cof.js                                                                        //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var toString = {}.toString;

              _module182.exports = function (it) {
                return toString.call(it).slice(8, -1);
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_defined.js": function (_require307, _exports194, _module183) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_defined.js                                                                    //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 7.2.1 RequireObjectCoercible(argument)
              _module183.exports = function (it) {
                if (it == undefined) throw TypeError("Can't call method on  " + it);
                return it;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_array-includes.js": function (_require308, _exports195, _module184) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_array-includes.js                                                             //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // false -> Array#indexOf
              // true  -> Array#includes
              var toIObject = _require308('./_to-iobject');
              var toLength = _require308('./_to-length');
              var toAbsoluteIndex = _require308('./_to-absolute-index');
              _module184.exports = function (IS_INCLUDES) {
                return function ($this, el, fromIndex) {
                  var O = toIObject($this);
                  var length = toLength(O.length);
                  var index = toAbsoluteIndex(fromIndex, length);
                  var value;
                  // Array#includes uses SameValueZero equality algorithm
                  // eslint-disable-next-line no-self-compare
                  if (IS_INCLUDES && el != el) while (length > index) {
                    value = O[index++];
                    // eslint-disable-next-line no-self-compare
                    if (value != value) return true;
                    // Array#indexOf ignores holes, Array#includes - not
                  } else for (; length > index; index++) if (IS_INCLUDES || index in O) {
                    if (O[index] === el) return IS_INCLUDES || index || 0;
                  }return !IS_INCLUDES && -1;
                };
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_to-length.js": function (_require309, _exports196, _module185) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_to-length.js                                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 7.1.15 ToLength
              var toInteger = _require309('./_to-integer');
              var min = Math.min;
              _module185.exports = function (it) {
                return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_to-integer.js": function (_require310, _exports197, _module186) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_to-integer.js                                                                 //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 7.1.4 ToInteger
              var ceil = Math.ceil;
              var floor = Math.floor;
              _module186.exports = function (it) {
                return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_to-absolute-index.js": function (_require311, _exports198, _module187) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_to-absolute-index.js                                                          //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var toInteger = _require311('./_to-integer');
              var max = Math.max;
              var min = Math.min;
              _module187.exports = function (index, length) {
                index = toInteger(index);
                return index < 0 ? max(index + length, 0) : min(index, length);
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_shared-key.js": function (_require312, _exports199, _module188) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_shared-key.js                                                                 //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var shared = _require312('./_shared')('keys');
              var uid = _require312('./_uid');
              _module188.exports = function (key) {
                return shared[key] || (shared[key] = uid(key));
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_shared.js": function (_require313, _exports200, _module189) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_shared.js                                                                     //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var core = _require313('./_core');
              var global = _require313('./_global');
              var SHARED = '__core-js_shared__';
              var store = global[SHARED] || (global[SHARED] = {});

              (_module189.exports = function (key, value) {
                return store[key] || (store[key] = value !== undefined ? value : {});
              })('versions', []).push({
                version: core.version,
                mode: _require313('./_library') ? 'pure' : 'global',
                copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
              });

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_library.js": function (_require314, _exports201, _module190) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_library.js                                                                    //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module190.exports = true;

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_uid.js": function (_require315, _exports202, _module191) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_uid.js                                                                        //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var id = 0;
              var px = Math.random();
              _module191.exports = function (key) {
                return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_enum-bug-keys.js": function (_require316, _exports203, _module192) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_enum-bug-keys.js                                                              //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // IE 8- don't enum bug keys
              _module192.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-gops.js": function (_require317, _exports204) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-gops.js                                                                //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _exports204.f = Object.getOwnPropertySymbols;

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-pie.js": function (_require318, _exports205) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-pie.js                                                                 //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _exports205.f = {}.propertyIsEnumerable;

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_to-object.js": function (_require319, _exports206, _module193) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_to-object.js                                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 7.1.13 ToObject(argument)
              var defined = _require319('./_defined');
              _module193.exports = function (it) {
                return Object(defined(it));
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "es6.object.create.js": function (_require320) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/es6.object.create.js                                                           //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var $export = _require320('./_export');
              // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
              $export($export.S, 'Object', { create: _require320('./_object-create') });

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-create.js": function (_require321, _exports207, _module194) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-create.js                                                              //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
              var anObject = _require321('./_an-object');
              var dPs = _require321('./_object-dps');
              var enumBugKeys = _require321('./_enum-bug-keys');
              var IE_PROTO = _require321('./_shared-key')('IE_PROTO');
              var Empty = function () {/* empty */};
              var PROTOTYPE = 'prototype';

              // Create object with fake `null` prototype: use iframe Object with cleared prototype
              var createDict = function () {
                // Thrash, waste and sodomy: IE GC bug
                var iframe = _require321('./_dom-create')('iframe');
                var i = enumBugKeys.length;
                var lt = '<';
                var gt = '>';
                var iframeDocument;
                iframe.style.display = 'none';
                _require321('./_html').appendChild(iframe);
                iframe.src = 'javascript:'; // eslint-disable-line no-script-url
                // createDict = iframe.contentWindow.Object;
                // html.removeChild(iframe);
                iframeDocument = iframe.contentWindow.document;
                iframeDocument.open();
                iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
                iframeDocument.close();
                createDict = iframeDocument.F;
                while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
                return createDict();
              };

              _module194.exports = Object.create || function create(O, Properties) {
                var result;
                if (O !== null) {
                  Empty[PROTOTYPE] = anObject(O);
                  result = new Empty();
                  Empty[PROTOTYPE] = null;
                  // add "__proto__" for Object.getPrototypeOf polyfill
                  result[IE_PROTO] = O;
                } else result = createDict();
                return Properties === undefined ? result : dPs(result, Properties);
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-dps.js": function (_require322, _exports208, _module195) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-dps.js                                                                 //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var dP = _require322('./_object-dp');
              var anObject = _require322('./_an-object');
              var getKeys = _require322('./_object-keys');

              _module195.exports = _require322('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
                anObject(O);
                var keys = getKeys(Properties);
                var length = keys.length;
                var i = 0;
                var P;
                while (length > i) dP.f(O, P = keys[i++], Properties[P]);
                return O;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_html.js": function (_require323, _exports209, _module196) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_html.js                                                                       //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var document = _require323('./_global').document;
              _module196.exports = document && document.documentElement;

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "es6.string.iterator.js": function (_require324) {
              var $at = _require324('./_string-at')(true);

              // 21.1.3.27 String.prototype[@@iterator]()
              _require324('./_iter-define')(String, 'String', function (iterated) {
                this._t = String(iterated); // target
                this._i = 0; // next index
                // 21.1.5.2.1 %StringIteratorPrototype%.next()
              }, function () {
                var O = this._t;
                var index = this._i;
                var point;
                if (index >= O.length) return { value: undefined, done: true };
                point = $at(O, index);
                this._i += point.length;
                return { value: point, done: false };
              });

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_string-at.js": function (_require325, _exports210, _module197) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_string-at.js                                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var toInteger = _require325('./_to-integer');
              var defined = _require325('./_defined');
              // true  -> String#at
              // false -> String#codePointAt
              _module197.exports = function (TO_STRING) {
                return function (that, pos) {
                  var s = String(defined(that));
                  var i = toInteger(pos);
                  var l = s.length;
                  var a, b;
                  if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
                  a = s.charCodeAt(i);
                  return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
                };
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_iter-define.js": function (_require326, _exports211, _module198) {
              var LIBRARY = _require326('./_library');
              var $export = _require326('./_export');
              var redefine = _require326('./_redefine');
              var hide = _require326('./_hide');
              var Iterators = _require326('./_iterators');
              var $iterCreate = _require326('./_iter-create');
              var setToStringTag = _require326('./_set-to-string-tag');
              var getPrototypeOf = _require326('./_object-gpo');
              var ITERATOR = _require326('./_wks')('iterator');
              var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
              var FF_ITERATOR = '@@iterator';
              var KEYS = 'keys';
              var VALUES = 'values';

              var returnThis = function () {
                return this;
              };

              _module198.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
                $iterCreate(Constructor, NAME, next);
                var getMethod = function (kind) {
                  if (!BUGGY && kind in proto) return proto[kind];
                  switch (kind) {
                    case KEYS:
                      return function keys() {
                        return new Constructor(this, kind);
                      };
                    case VALUES:
                      return function values() {
                        return new Constructor(this, kind);
                      };
                  }return function entries() {
                    return new Constructor(this, kind);
                  };
                };
                var TAG = NAME + ' Iterator';
                var DEF_VALUES = DEFAULT == VALUES;
                var VALUES_BUG = false;
                var proto = Base.prototype;
                var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
                var $default = $native || getMethod(DEFAULT);
                var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
                var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
                var methods, key, IteratorPrototype;
                // Fix native
                if ($anyNative) {
                  IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
                  if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
                    // Set @@toStringTag to native iterators
                    setToStringTag(IteratorPrototype, TAG, true);
                    // fix for some old engines
                    if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
                  }
                }
                // fix Array#{values, @@iterator}.name in V8 / FF
                if (DEF_VALUES && $native && $native.name !== VALUES) {
                  VALUES_BUG = true;
                  $default = function values() {
                    return $native.call(this);
                  };
                }
                // Define iterator
                if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
                  hide(proto, ITERATOR, $default);
                }
                // Plug for library
                Iterators[NAME] = $default;
                Iterators[TAG] = returnThis;
                if (DEFAULT) {
                  methods = {
                    values: DEF_VALUES ? $default : getMethod(VALUES),
                    keys: IS_SET ? $default : getMethod(KEYS),
                    entries: $entries
                  };
                  if (FORCED) for (key in methods) {
                    if (!(key in proto)) redefine(proto, key, methods[key]);
                  } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
                }
                return methods;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_redefine.js": function (_require327, _exports212, _module199) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_redefine.js                                                                   //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module199.exports = _require327('./_hide');

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_iterators.js": function (_require328, _exports213, _module200) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_iterators.js                                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module200.exports = {};

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_iter-create.js": function (_require329, _exports214, _module201) {
              var create = _require329('./_object-create');
              var descriptor = _require329('./_property-desc');
              var setToStringTag = _require329('./_set-to-string-tag');
              var IteratorPrototype = {};

              // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
              _require329('./_hide')(IteratorPrototype, _require329('./_wks')('iterator'), function () {
                return this;
              });

              _module201.exports = function (Constructor, NAME, next) {
                Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
                setToStringTag(Constructor, NAME + ' Iterator');
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_set-to-string-tag.js": function (_require330, _exports215, _module202) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_set-to-string-tag.js                                                          //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var def = _require330('./_object-dp').f;
              var has = _require330('./_has');
              var TAG = _require330('./_wks')('toStringTag');

              _module202.exports = function (it, tag, stat) {
                if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_wks.js": function (_require331, _exports216, _module203) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_wks.js                                                                        //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var store = _require331('./_shared')('wks');
              var uid = _require331('./_uid');
              var Symbol = _require331('./_global').Symbol;
              var USE_SYMBOL = typeof Symbol == 'function';

              var $exports = _module203.exports = function (name) {
                return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
              };

              $exports.store = store;

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-gpo.js": function (_require332, _exports217, _module204) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-gpo.js                                                                 //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
              var has = _require332('./_has');
              var toObject = _require332('./_to-object');
              var IE_PROTO = _require332('./_shared-key')('IE_PROTO');
              var ObjectProto = Object.prototype;

              _module204.exports = Object.getPrototypeOf || function (O) {
                O = toObject(O);
                if (has(O, IE_PROTO)) return O[IE_PROTO];
                if (typeof O.constructor == 'function' && O instanceof O.constructor) {
                  return O.constructor.prototype;
                }return O instanceof Object ? ObjectProto : null;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "web.dom.iterable.js": function (_require333) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/web.dom.iterable.js                                                            //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _require333('./es6.array.iterator');
              var global = _require333('./_global');
              var hide = _require333('./_hide');
              var Iterators = _require333('./_iterators');
              var TO_STRING_TAG = _require333('./_wks')('toStringTag');

              var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' + 'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' + 'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' + 'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' + 'TextTrackList,TouchList').split(',');

              for (var i = 0; i < DOMIterables.length; i++) {
                var NAME = DOMIterables[i];
                var Collection = global[NAME];
                var proto = Collection && Collection.prototype;
                if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
                Iterators[NAME] = Iterators.Array;
              }

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "es6.array.iterator.js": function (_require334, _exports218, _module205) {
              var addToUnscopables = _require334('./_add-to-unscopables');
              var step = _require334('./_iter-step');
              var Iterators = _require334('./_iterators');
              var toIObject = _require334('./_to-iobject');

              // 22.1.3.4 Array.prototype.entries()
              // 22.1.3.13 Array.prototype.keys()
              // 22.1.3.29 Array.prototype.values()
              // 22.1.3.30 Array.prototype[@@iterator]()
              _module205.exports = _require334('./_iter-define')(Array, 'Array', function (iterated, kind) {
                this._t = toIObject(iterated); // target
                this._i = 0; // next index
                this._k = kind; // kind
                // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
              }, function () {
                var O = this._t;
                var kind = this._k;
                var index = this._i++;
                if (!O || index >= O.length) {
                  this._t = undefined;
                  return step(1);
                }
                if (kind == 'keys') return step(0, index);
                if (kind == 'values') return step(0, O[index]);
                return step(0, [index, O[index]]);
              }, 'values');

              // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
              Iterators.Arguments = Iterators.Array;

              addToUnscopables('keys');
              addToUnscopables('values');
              addToUnscopables('entries');

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_add-to-unscopables.js": function (_require335, _exports219, _module206) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_add-to-unscopables.js                                                         //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module206.exports = function () {/* empty */};

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_iter-step.js": function (_require336, _exports220, _module207) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_iter-step.js                                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module207.exports = function (done, value) {
                return { value: value, done: !!done };
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_wks-ext.js": function (_require337, _exports221) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_wks-ext.js                                                                    //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _exports221.f = _require337('./_wks');

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "es6.symbol.js": function (_require338) {
              // ECMAScript 6 symbols shim
              var global = _require338('./_global');
              var has = _require338('./_has');
              var DESCRIPTORS = _require338('./_descriptors');
              var $export = _require338('./_export');
              var redefine = _require338('./_redefine');
              var META = _require338('./_meta').KEY;
              var $fails = _require338('./_fails');
              var shared = _require338('./_shared');
              var setToStringTag = _require338('./_set-to-string-tag');
              var uid = _require338('./_uid');
              var wks = _require338('./_wks');
              var wksExt = _require338('./_wks-ext');
              var wksDefine = _require338('./_wks-define');
              var enumKeys = _require338('./_enum-keys');
              var isArray = _require338('./_is-array');
              var anObject = _require338('./_an-object');
              var isObject = _require338('./_is-object');
              var toIObject = _require338('./_to-iobject');
              var toPrimitive = _require338('./_to-primitive');
              var createDesc = _require338('./_property-desc');
              var _create = _require338('./_object-create');
              var gOPNExt = _require338('./_object-gopn-ext');
              var $GOPD = _require338('./_object-gopd');
              var $DP = _require338('./_object-dp');
              var $keys = _require338('./_object-keys');
              var gOPD = $GOPD.f;
              var dP = $DP.f;
              var gOPN = gOPNExt.f;
              var $Symbol = global.Symbol;
              var $JSON = global.JSON;
              var _stringify = $JSON && $JSON.stringify;
              var PROTOTYPE = 'prototype';
              var HIDDEN = wks('_hidden');
              var TO_PRIMITIVE = wks('toPrimitive');
              var isEnum = {}.propertyIsEnumerable;
              var SymbolRegistry = shared('symbol-registry');
              var AllSymbols = shared('symbols');
              var OPSymbols = shared('op-symbols');
              var ObjectProto = Object[PROTOTYPE];
              var USE_NATIVE = typeof $Symbol == 'function';
              var QObject = global.QObject;
              // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
              var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

              // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
              var setSymbolDesc = DESCRIPTORS && $fails(function () {
                return _create(dP({}, 'a', {
                  get: function () {
                    return dP(this, 'a', { value: 7 }).a;
                  }
                })).a != 7;
              }) ? function (it, key, D) {
                var protoDesc = gOPD(ObjectProto, key);
                if (protoDesc) delete ObjectProto[key];
                dP(it, key, D);
                if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
              } : dP;

              var wrap = function (tag) {
                var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
                sym._k = tag;
                return sym;
              };

              var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
                return typeof it == 'symbol';
              } : function (it) {
                return it instanceof $Symbol;
              };

              var $defineProperty = function defineProperty(it, key, D) {
                if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
                anObject(it);
                key = toPrimitive(key, true);
                anObject(D);
                if (has(AllSymbols, key)) {
                  if (!D.enumerable) {
                    if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
                    it[HIDDEN][key] = true;
                  } else {
                    if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
                    D = _create(D, { enumerable: createDesc(0, false) });
                  }return setSymbolDesc(it, key, D);
                }return dP(it, key, D);
              };
              var $defineProperties = function defineProperties(it, P) {
                anObject(it);
                var keys = enumKeys(P = toIObject(P));
                var i = 0;
                var l = keys.length;
                var key;
                while (l > i) $defineProperty(it, key = keys[i++], P[key]);
                return it;
              };
              var $create = function create(it, P) {
                return P === undefined ? _create(it) : $defineProperties(_create(it), P);
              };
              var $propertyIsEnumerable = function propertyIsEnumerable(key) {
                var E = isEnum.call(this, key = toPrimitive(key, true));
                if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
                return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
              };
              var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
                it = toIObject(it);
                key = toPrimitive(key, true);
                if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
                var D = gOPD(it, key);
                if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
                return D;
              };
              var $getOwnPropertyNames = function getOwnPropertyNames(it) {
                var names = gOPN(toIObject(it));
                var result = [];
                var i = 0;
                var key;
                while (names.length > i) {
                  if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
                }return result;
              };
              var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
                var IS_OP = it === ObjectProto;
                var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
                var result = [];
                var i = 0;
                var key;
                while (names.length > i) {
                  if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
                }return result;
              };

              // 19.4.1.1 Symbol([description])
              if (!USE_NATIVE) {
                $Symbol = function Symbol() {
                  if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
                  var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
                  var $set = function (value) {
                    if (this === ObjectProto) $set.call(OPSymbols, value);
                    if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
                    setSymbolDesc(this, tag, createDesc(1, value));
                  };
                  if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
                  return wrap(tag);
                };
                redefine($Symbol[PROTOTYPE], 'toString', function toString() {
                  return this._k;
                });

                $GOPD.f = $getOwnPropertyDescriptor;
                $DP.f = $defineProperty;
                _require338('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
                _require338('./_object-pie').f = $propertyIsEnumerable;
                _require338('./_object-gops').f = $getOwnPropertySymbols;

                if (DESCRIPTORS && !_require338('./_library')) {
                  redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
                }

                wksExt.f = function (name) {
                  return wrap(wks(name));
                };
              }

              $export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

              for (var es6Symbols =
              // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
              'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) wks(es6Symbols[j++]);

              for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

              $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
                // 19.4.2.1 Symbol.for(key)
                'for': function (key) {
                  return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
                },
                // 19.4.2.5 Symbol.keyFor(sym)
                keyFor: function keyFor(sym) {
                  if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
                  for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
                },
                useSetter: function () {
                  setter = true;
                },
                useSimple: function () {
                  setter = false;
                }
              });

              $export($export.S + $export.F * !USE_NATIVE, 'Object', {
                // 19.1.2.2 Object.create(O [, Properties])
                create: $create,
                // 19.1.2.4 Object.defineProperty(O, P, Attributes)
                defineProperty: $defineProperty,
                // 19.1.2.3 Object.defineProperties(O, Properties)
                defineProperties: $defineProperties,
                // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
                getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
                // 19.1.2.7 Object.getOwnPropertyNames(O)
                getOwnPropertyNames: $getOwnPropertyNames,
                // 19.1.2.8 Object.getOwnPropertySymbols(O)
                getOwnPropertySymbols: $getOwnPropertySymbols
              });

              // 24.3.2 JSON.stringify(value [, replacer [, space]])
              $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
                var S = $Symbol();
                // MS Edge converts symbol values to JSON as {}
                // WebKit converts symbol values to JSON as null
                // V8 throws on boxed symbols
                return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
              })), 'JSON', {
                stringify: function stringify(it) {
                  var args = [it];
                  var i = 1;
                  var replacer, $replacer;
                  while (arguments.length > i) args.push(arguments[i++]);
                  $replacer = replacer = args[1];
                  if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
                  if (!isArray(replacer)) replacer = function (key, value) {
                    if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
                    if (!isSymbol(value)) return value;
                  };
                  args[1] = replacer;
                  return _stringify.apply($JSON, args);
                }
              });

              // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
              $Symbol[PROTOTYPE][TO_PRIMITIVE] || _require338('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
              // 19.4.3.5 Symbol.prototype[@@toStringTag]
              setToStringTag($Symbol, 'Symbol');
              // 20.2.1.9 Math[@@toStringTag]
              setToStringTag(Math, 'Math', true);
              // 24.3.3 JSON[@@toStringTag]
              setToStringTag(global.JSON, 'JSON', true);

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_meta.js": function (_require339, _exports222, _module208) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_meta.js                                                                       //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var META = _require339('./_uid')('meta');
              var isObject = _require339('./_is-object');
              var has = _require339('./_has');
              var setDesc = _require339('./_object-dp').f;
              var id = 0;
              var isExtensible = Object.isExtensible || function () {
                return true;
              };
              var FREEZE = !_require339('./_fails')(function () {
                return isExtensible(Object.preventExtensions({}));
              });
              var setMeta = function (it) {
                setDesc(it, META, { value: {
                    i: 'O' + ++id, // object ID
                    w: {} // weak collections IDs
                  } });
              };
              var fastKey = function (it, create) {
                // return primitive with prefix
                if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
                if (!has(it, META)) {
                  // can't set metadata to uncaught frozen object
                  if (!isExtensible(it)) return 'F';
                  // not necessary to add metadata
                  if (!create) return 'E';
                  // add missing metadata
                  setMeta(it);
                  // return object ID
                }return it[META].i;
              };
              var getWeak = function (it, create) {
                if (!has(it, META)) {
                  // can't set metadata to uncaught frozen object
                  if (!isExtensible(it)) return true;
                  // not necessary to add metadata
                  if (!create) return false;
                  // add missing metadata
                  setMeta(it);
                  // return hash weak collections IDs
                }return it[META].w;
              };
              // add metadata on freeze-family methods calling
              var onFreeze = function (it) {
                if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
                return it;
              };
              var meta = _module208.exports = {
                KEY: META,
                NEED: false,
                fastKey: fastKey,
                getWeak: getWeak,
                onFreeze: onFreeze
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_wks-define.js": function (_require340, _exports223, _module209) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_wks-define.js                                                                 //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var global = _require340('./_global');
              var core = _require340('./_core');
              var LIBRARY = _require340('./_library');
              var wksExt = _require340('./_wks-ext');
              var defineProperty = _require340('./_object-dp').f;
              _module209.exports = function (name) {
                var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
                if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_enum-keys.js": function (_require341, _exports224, _module210) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_enum-keys.js                                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // all enumerable object keys, includes symbols
              var getKeys = _require341('./_object-keys');
              var gOPS = _require341('./_object-gops');
              var pIE = _require341('./_object-pie');
              _module210.exports = function (it) {
                var result = getKeys(it);
                var getSymbols = gOPS.f;
                if (getSymbols) {
                  var symbols = getSymbols(it);
                  var isEnum = pIE.f;
                  var i = 0;
                  var key;
                  while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
                }return result;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_is-array.js": function (_require342, _exports225, _module211) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_is-array.js                                                                   //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 7.2.2 IsArray(argument)
              var cof = _require342('./_cof');
              _module211.exports = Array.isArray || function isArray(arg) {
                return cof(arg) == 'Array';
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-gopn-ext.js": function (_require343, _exports226, _module212) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-gopn-ext.js                                                            //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
              var toIObject = _require343('./_to-iobject');
              var gOPN = _require343('./_object-gopn').f;
              var toString = {}.toString;

              var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

              var getWindowNames = function (it) {
                try {
                  return gOPN(it);
                } catch (e) {
                  return windowNames.slice();
                }
              };

              _module212.exports.f = function getOwnPropertyNames(it) {
                return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-gopn.js": function (_require344, _exports227) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-gopn.js                                                                //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
              var $keys = _require344('./_object-keys-internal');
              var hiddenKeys = _require344('./_enum-bug-keys').concat('length', 'prototype');

              _exports227.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
                return $keys(O, hiddenKeys);
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-gopd.js": function (_require345, _exports228) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-gopd.js                                                                //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var pIE = _require345('./_object-pie');
              var createDesc = _require345('./_property-desc');
              var toIObject = _require345('./_to-iobject');
              var toPrimitive = _require345('./_to-primitive');
              var has = _require345('./_has');
              var IE8_DOM_DEFINE = _require345('./_ie8-dom-define');
              var gOPD = Object.getOwnPropertyDescriptor;

              _exports228.f = _require345('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
                O = toIObject(O);
                P = toPrimitive(P, true);
                if (IE8_DOM_DEFINE) try {
                  return gOPD(O, P);
                } catch (e) {/* empty */}
                if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "es6.object.to-string.js": function () {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/es6.object.to-string.js                                                        //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

            }, "es7.symbol.async-iterator.js": function (_require346) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/es7.symbol.async-iterator.js                                                   //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _require346('./_wks-define')('asyncIterator');

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "es7.symbol.observable.js": function (_require347) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/es7.symbol.observable.js                                                       //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _require347('./_wks-define')('observable');

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "es6.array.from.js": function (_require348) {
              var ctx = _require348('./_ctx');
              var $export = _require348('./_export');
              var toObject = _require348('./_to-object');
              var call = _require348('./_iter-call');
              var isArrayIter = _require348('./_is-array-iter');
              var toLength = _require348('./_to-length');
              var createProperty = _require348('./_create-property');
              var getIterFn = _require348('./core.get-iterator-method');

              $export($export.S + $export.F * !_require348('./_iter-detect')(function (iter) {
                Array.from(iter);
              }), 'Array', {
                // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
                from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
                  var O = toObject(arrayLike);
                  var C = typeof this == 'function' ? this : Array;
                  var aLen = arguments.length;
                  var mapfn = aLen > 1 ? arguments[1] : undefined;
                  var mapping = mapfn !== undefined;
                  var index = 0;
                  var iterFn = getIterFn(O);
                  var length, result, step, iterator;
                  if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
                  // if object isn't iterable or it's array with default iterator - use simple case
                  if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
                    for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
                      createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
                    }
                  } else {
                    length = toLength(O.length);
                    for (result = new C(length); length > index; index++) {
                      createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
                    }
                  }
                  result.length = index;
                  return result;
                }
              });

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_iter-call.js": function (_require349, _exports229, _module213) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_iter-call.js                                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // call something on iterator step with safe closing on error
              var anObject = _require349('./_an-object');
              _module213.exports = function (iterator, fn, value, entries) {
                try {
                  return entries ? fn(anObject(value)[0], value[1]) : fn(value);
                  // 7.4.6 IteratorClose(iterator, completion)
                } catch (e) {
                  var ret = iterator['return'];
                  if (ret !== undefined) anObject(ret.call(iterator));
                  throw e;
                }
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_is-array-iter.js": function (_require350, _exports230, _module214) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_is-array-iter.js                                                              //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // check on default Array iterator
              var Iterators = _require350('./_iterators');
              var ITERATOR = _require350('./_wks')('iterator');
              var ArrayProto = Array.prototype;

              _module214.exports = function (it) {
                return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_create-property.js": function (_require351, _exports231, _module215) {
              var $defineProperty = _require351('./_object-dp');
              var createDesc = _require351('./_property-desc');

              _module215.exports = function (object, index, value) {
                if (index in object) $defineProperty.f(object, index, createDesc(0, value));else object[index] = value;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "core.get-iterator-method.js": function (_require352, _exports232, _module216) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/core.get-iterator-method.js                                                    //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var classof = _require352('./_classof');
              var ITERATOR = _require352('./_wks')('iterator');
              var Iterators = _require352('./_iterators');
              _module216.exports = _require352('./_core').getIteratorMethod = function (it) {
                if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_classof.js": function (_require353, _exports233, _module217) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_classof.js                                                                    //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // getting tag from 19.1.3.6 Object.prototype.toString()
              var cof = _require353('./_cof');
              var TAG = _require353('./_wks')('toStringTag');
              // ES3 wrong here
              var ARG = cof(function () {
                return arguments;
              }()) == 'Arguments';

              // fallback for IE11 Script Access Denied error
              var tryGet = function (it, key) {
                try {
                  return it[key];
                } catch (e) {/* empty */}
              };

              _module217.exports = function (it) {
                var O, T, B;
                return it === undefined ? 'Undefined' : it === null ? 'Null'
                // @@toStringTag case
                : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
                // builtinTag case
                : ARG ? cof(O)
                // ES3 arguments fallback
                : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_iter-detect.js": function (_require354, _exports234, _module218) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_iter-detect.js                                                                //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var ITERATOR = _require354('./_wks')('iterator');
              var SAFE_CLOSING = false;

              try {
                var riter = [7][ITERATOR]();
                riter['return'] = function () {
                  SAFE_CLOSING = true;
                };
                // eslint-disable-next-line no-throw-literal
                Array.from(riter, function () {
                  throw 2;
                });
              } catch (e) {/* empty */}

              _module218.exports = function (exec, skipClosing) {
                if (!skipClosing && !SAFE_CLOSING) return false;
                var safe = false;
                try {
                  var arr = [7];
                  var iter = arr[ITERATOR]();
                  iter.next = function () {
                    return { done: safe = true };
                  };
                  arr[ITERATOR] = function () {
                    return iter;
                  };
                  exec(arr);
                } catch (e) {/* empty */}
                return safe;
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "core.is-iterable.js": function (_require355, _exports235, _module219) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/core.is-iterable.js                                                            //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var classof = _require355('./_classof');
              var ITERATOR = _require355('./_wks')('iterator');
              var Iterators = _require355('./_iterators');
              _module219.exports = _require355('./_core').isIterable = function (it) {
                var O = Object(it);
                return O[ITERATOR] !== undefined || '@@iterator' in O
                // eslint-disable-next-line no-prototype-builtins
                || Iterators.hasOwnProperty(classof(O));
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "es6.object.get-own-property-descriptor.js": function (_require356) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js                                      //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
              var toIObject = _require356('./_to-iobject');
              var $getOwnPropertyDescriptor = _require356('./_object-gopd').f;

              _require356('./_object-sap')('getOwnPropertyDescriptor', function () {
                return function getOwnPropertyDescriptor(it, key) {
                  return $getOwnPropertyDescriptor(toIObject(it), key);
                };
              });

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "_object-sap.js": function (_require357, _exports236, _module220) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/_object-sap.js                                                                 //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // most Object methods by ES6 should accept primitives
              var $export = _require357('./_export');
              var core = _require357('./_core');
              var fails = _require357('./_fails');
              _module220.exports = function (KEY, exec) {
                var fn = (core.Object || {})[KEY] || Object[KEY];
                var exp = {};
                exp[KEY] = exec(fn);
                $export($export.S + $export.F * fails(function () {
                  fn(1);
                }), 'Object', exp);
              };

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "es6.object.keys.js": function (_require358) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/es6.object.keys.js                                                             //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              // 19.1.2.14 Object.keys(O)
              var toObject = _require358('./_to-object');
              var $keys = _require358('./_object-keys');

              _require358('./_object-sap')('keys', function () {
                return function keys(it) {
                  return $keys(toObject(it));
                };
              });

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "es6.object.define-property.js": function (_require359) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // node_modules/core-js/library/modules/es6.object.define-property.js                                                  //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var $export = _require359('./_export');
              // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
              $export($export.S + $export.F * !_require359('./_descriptors'), 'Object', { defineProperty: _require359('./_object-dp').f });

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            } } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/modules/client.js");

  /* Exports */
  Package._define("modules", _exports2, {
    meteorInstall: meteorInstall
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Exports */
  Package._define("modern-browsers");
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Exports */
  Package._define("babel-compiler");
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Exports */
  Package._define("ecmascript");
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Exports */
  Package._define("ecmascript-runtime");
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;

  /* Package-scope variables */
  var meteorBabelHelpers;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "babel-runtime": { "babel-runtime.js": function (_require, _exports) {

            /////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                         //
            // packages/babel-runtime/babel-runtime.js                                                 //
            //                                                                                         //
            /////////////////////////////////////////////////////////////////////////////////////////////
            //
            _exports.meteorBabelHelpers = _require("meteor-babel-helpers");

            try {
              var babelRuntimeVersion = _require("@babel/runtime/package.json").version;
            } catch (e) {
              throw new Error(["", "The @babel/runtime npm package could not be found in your node_modules ", "directory. Please run the following command to install it:", "", "  meteor npm install --save @babel/runtime", ""].join("\n"));
            }

            if (parseInt(babelRuntimeVersion, 10) < 6) {
              throw new Error(["", "The version of @babel/runtime installed in your node_modules directory ", "(" + babelRuntimeVersion + ") is out of date. Please upgrade it by running ", "", "  meteor npm install --save @babel/runtime", "", "in your application directory.", ""].join("\n"));
            } else if (parseInt(babelRuntimeVersion.split(".").shift()) >= 7) {
              // If Babel 7, only allow -beta.55 and earlier.  The final release, all RCs
              // and -beta.56 all suffere from the removal of the "builtins" helpers.
              var acceptableBabelRuntimeVersion = /^7\.0\.0-beta/.test(babelRuntimeVersion) && parseInt(babelRuntimeVersion.split(".").pop(), 10) <= 55;

              if (!acceptableBabelRuntimeVersion) {
                console.warn(["The version of @babel/runtime installed in your node_modules directory ", "(" + babelRuntimeVersion + ") contains a breaking change which was introduced by ", "https://github.com/babel/babel/pull/8266. Please either downgrade by ", "running the following command:", "", "  meteor npm install --save-exact @babel/runtime@7.0.0-beta.55", "", "or update to the latest beta version of Meteor 1.7.1, as explained in ", "this pull request: https://github.com/meteor/meteor/pull/9942.", ""].join("\n"));
              }
            }

            /////////////////////////////////////////////////////////////////////////////////////////////
          }, "node_modules": { "meteor-babel-helpers": { "package.json": function (_require3, _exports3) {

                /////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                         //
                // node_modules/meteor/babel-runtime/node_modules/meteor-babel-helpers/package.json        //
                //                                                                                         //
                /////////////////////////////////////////////////////////////////////////////////////////////
                //
                _exports3.name = "meteor-babel-helpers";
                _exports3.version = "0.0.3";
                _exports3.main = "index.js";

                /////////////////////////////////////////////////////////////////////////////////////////////
              }, "index.js": function (_require4, _exports4, _module) {

                /////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                         //
                // node_modules/meteor/babel-runtime/node_modules/meteor-babel-helpers/index.js            //
                //                                                                                         //
                /////////////////////////////////////////////////////////////////////////////////////////////
                //
                function canDefineNonEnumerableProperties() {
                  var testObj = {};
                  var testPropName = "t";

                  try {
                    Object.defineProperty(testObj, testPropName, {
                      enumerable: false,
                      value: testObj
                    });

                    for (var k in testObj) {
                      if (k === testPropName) {
                        return false;
                      }
                    }
                  } catch (e) {
                    return false;
                  }

                  return testObj[testPropName] === testObj;
                }

                function sanitizeEasy(value) {
                  return value;
                }

                function sanitizeHard(obj) {
                  if (Array.isArray(obj)) {
                    var newObj = {};
                    var keys = Object.keys(obj);
                    var keyCount = keys.length;
                    for (var i = 0; i < keyCount; ++i) {
                      var key = keys[i];
                      newObj[key] = obj[key];
                    }
                    return newObj;
                  }

                  return obj;
                }

                meteorBabelHelpers = _module.exports = {
                  // Meteor-specific runtime helper for wrapping the object of for-in
                  // loops, so that inherited Array methods defined by es5-shim can be
                  // ignored in browsers where they cannot be defined as non-enumerable.
                  sanitizeForInObject: canDefineNonEnumerableProperties() ? sanitizeEasy : sanitizeHard,

                  // Exposed so that we can test sanitizeForInObject in environments that
                  // support defining non-enumerable properties.
                  _sanitizeForInObjectHard: sanitizeHard
                };

                /////////////////////////////////////////////////////////////////////////////////////////////
              } } } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/babel-runtime/babel-runtime.js");

  /* Exports */
  Package._define("babel-runtime", _exports2, {
    meteorBabelHelpers: meteorBabelHelpers
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;

  /* Package-scope variables */
  var Promise;

  var _require = meteorInstall({ "node_modules": { "meteor": { "promise": { "modern.js": function () {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                  //
            // packages/promise/modern.js                                                                                       //
            //                                                                                                                  //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // Initialize the package-scoped Promise variable with global.Promise in
            // all environments, even if it's not defined.
            Promise = global.Promise;

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "legacy.js": function (_require2) {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                  //
            // packages/promise/legacy.js                                                                                       //
            //                                                                                                                  //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // In legacy environments, load a polyfill if global.Promise was not
            // defined in modern.js.
            if (typeof global.Promise === "function") {
              Promise = global.Promise;
            } else {
              Promise = global.Promise = _require2("promise/lib/es6-extensions");
            }

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "client.js": function (_require3) {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                  //
            // packages/promise/client.js                                                                                       //
            //                                                                                                                  //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _require3("./extensions.js");
            _require3("meteor-promise").makeCompatible(Promise);

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "extensions.js": function () {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                  //
            // packages/promise/extensions.js                                                                                   //
            //                                                                                                                  //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var proto = Promise.prototype;
            var hasOwn = Object.prototype.hasOwnProperty;

            proto.done = function (onFulfilled, onRejected) {
              var self = this;

              if (arguments.length > 0) {
                self = this.then.apply(this, arguments);
              }

              self.then(null, function (err) {
                Meteor._setImmediate(function () {
                  throw err;
                });
              });
            };

            if (!hasOwn.call(proto, "finally")) {
              proto["finally"] = function (onFinally) {
                var threw = false,
                    result;
                return this.then(function (value) {
                  result = value;
                  // Most implementations of Promise.prototype.finally call
                  // Promise.resolve(onFinally()) (or this.constructor.resolve or even
                  // this.constructor[Symbol.species].resolve, depending on how spec
                  // compliant they're trying to be), but this implementation simply
                  // relies on the standard Promise behavior of resolving any value
                  // returned from a .then callback function.
                  return onFinally();
                }, function (error) {
                  // Make the final .then callback (below) re-throw the error instead
                  // of returning it.
                  threw = true;
                  result = error;
                  return onFinally();
                }).then(function () {
                  if (threw) throw result;
                  return result;
                });
              };
            }

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "node_modules": { "promise": { "lib": { "es6-extensions.js": function (_require4, _exports2, _module) {

                  //This file contains the ES6 extensions to the core Promises/A+ API

                  var Promise = _require4('./core.js');

                  _module.exports = Promise;

                  /* Static Functions */

                  var TRUE = valuePromise(true);
                  var FALSE = valuePromise(false);
                  var NULL = valuePromise(null);
                  var UNDEFINED = valuePromise(undefined);
                  var ZERO = valuePromise(0);
                  var EMPTYSTRING = valuePromise('');

                  function valuePromise(value) {
                    var p = new Promise(Promise._44);
                    p._83 = 1;
                    p._18 = value;
                    return p;
                  }
                  Promise.resolve = function (value) {
                    if (value instanceof Promise) return value;

                    if (value === null) return NULL;
                    if (value === undefined) return UNDEFINED;
                    if (value === true) return TRUE;
                    if (value === false) return FALSE;
                    if (value === 0) return ZERO;
                    if (value === '') return EMPTYSTRING;

                    if (typeof value === 'object' || typeof value === 'function') {
                      try {
                        var then = value.then;
                        if (typeof then === 'function') {
                          return new Promise(then.bind(value));
                        }
                      } catch (ex) {
                        return new Promise(function (resolve, reject) {
                          reject(ex);
                        });
                      }
                    }
                    return valuePromise(value);
                  };

                  Promise.all = function (arr) {
                    var args = Array.prototype.slice.call(arr);

                    return new Promise(function (resolve, reject) {
                      if (args.length === 0) return resolve([]);
                      var remaining = args.length;
                      function res(i, val) {
                        if (val && (typeof val === 'object' || typeof val === 'function')) {
                          if (val instanceof Promise && val.then === Promise.prototype.then) {
                            while (val._83 === 3) {
                              val = val._18;
                            }
                            if (val._83 === 1) return res(i, val._18);
                            if (val._83 === 2) reject(val._18);
                            val.then(function (val) {
                              res(i, val);
                            }, reject);
                            return;
                          } else {
                            var then = val.then;
                            if (typeof then === 'function') {
                              var p = new Promise(then.bind(val));
                              p.then(function (val) {
                                res(i, val);
                              }, reject);
                              return;
                            }
                          }
                        }
                        args[i] = val;
                        if (--remaining === 0) {
                          resolve(args);
                        }
                      }
                      for (var i = 0; i < args.length; i++) {
                        res(i, args[i]);
                      }
                    });
                  };

                  Promise.reject = function (value) {
                    return new Promise(function (resolve, reject) {
                      reject(value);
                    });
                  };

                  Promise.race = function (values) {
                    return new Promise(function (resolve, reject) {
                      values.forEach(function (value) {
                        Promise.resolve(value).then(resolve, reject);
                      });
                    });
                  };

                  /* Prototype Methods */

                  Promise.prototype['catch'] = function (onRejected) {
                    return this.then(null, onRejected);
                  };

                  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                }, "core.js": function (_require5, _exports3, _module2) {

                  var asap = _require5('asap/raw');

                  function noop() {}

                  // States:
                  //
                  // 0 - pending
                  // 1 - fulfilled with _value
                  // 2 - rejected with _value
                  // 3 - adopted the state of another promise, _value
                  //
                  // once the state is no longer pending (0) it is immutable

                  // All `_` prefixed properties will be reduced to `_{random number}`
                  // at build time to obfuscate them and discourage their use.
                  // We don't use symbols or Object.defineProperty to fully hide them
                  // because the performance isn't good enough.


                  // to avoid using try/catch inside critical functions, we
                  // extract them to here.
                  var LAST_ERROR = null;
                  var IS_ERROR = {};
                  function getThen(obj) {
                    try {
                      return obj.then;
                    } catch (ex) {
                      LAST_ERROR = ex;
                      return IS_ERROR;
                    }
                  }

                  function tryCallOne(fn, a) {
                    try {
                      return fn(a);
                    } catch (ex) {
                      LAST_ERROR = ex;
                      return IS_ERROR;
                    }
                  }
                  function tryCallTwo(fn, a, b) {
                    try {
                      fn(a, b);
                    } catch (ex) {
                      LAST_ERROR = ex;
                      return IS_ERROR;
                    }
                  }

                  _module2.exports = Promise;

                  function Promise(fn) {
                    if (typeof this !== 'object') {
                      throw new TypeError('Promises must be constructed via new');
                    }
                    if (typeof fn !== 'function') {
                      throw new TypeError('Promise constructor\'s argument is not a function');
                    }
                    this._75 = 0;
                    this._83 = 0;
                    this._18 = null;
                    this._38 = null;
                    if (fn === noop) return;
                    doResolve(fn, this);
                  }
                  Promise._47 = null;
                  Promise._71 = null;
                  Promise._44 = noop;

                  Promise.prototype.then = function (onFulfilled, onRejected) {
                    if (this.constructor !== Promise) {
                      return safeThen(this, onFulfilled, onRejected);
                    }
                    var res = new Promise(noop);
                    handle(this, new Handler(onFulfilled, onRejected, res));
                    return res;
                  };

                  function safeThen(self, onFulfilled, onRejected) {
                    return new self.constructor(function (resolve, reject) {
                      var res = new Promise(noop);
                      res.then(resolve, reject);
                      handle(self, new Handler(onFulfilled, onRejected, res));
                    });
                  }
                  function handle(self, deferred) {
                    while (self._83 === 3) {
                      self = self._18;
                    }
                    if (Promise._47) {
                      Promise._47(self);
                    }
                    if (self._83 === 0) {
                      if (self._75 === 0) {
                        self._75 = 1;
                        self._38 = deferred;
                        return;
                      }
                      if (self._75 === 1) {
                        self._75 = 2;
                        self._38 = [self._38, deferred];
                        return;
                      }
                      self._38.push(deferred);
                      return;
                    }
                    handleResolved(self, deferred);
                  }

                  function handleResolved(self, deferred) {
                    asap(function () {
                      var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;
                      if (cb === null) {
                        if (self._83 === 1) {
                          resolve(deferred.promise, self._18);
                        } else {
                          reject(deferred.promise, self._18);
                        }
                        return;
                      }
                      var ret = tryCallOne(cb, self._18);
                      if (ret === IS_ERROR) {
                        reject(deferred.promise, LAST_ERROR);
                      } else {
                        resolve(deferred.promise, ret);
                      }
                    });
                  }
                  function resolve(self, newValue) {
                    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
                    if (newValue === self) {
                      return reject(self, new TypeError('A promise cannot be resolved with itself.'));
                    }
                    if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
                      var then = getThen(newValue);
                      if (then === IS_ERROR) {
                        return reject(self, LAST_ERROR);
                      }
                      if (then === self.then && newValue instanceof Promise) {
                        self._83 = 3;
                        self._18 = newValue;
                        finale(self);
                        return;
                      } else if (typeof then === 'function') {
                        doResolve(then.bind(newValue), self);
                        return;
                      }
                    }
                    self._83 = 1;
                    self._18 = newValue;
                    finale(self);
                  }

                  function reject(self, newValue) {
                    self._83 = 2;
                    self._18 = newValue;
                    if (Promise._71) {
                      Promise._71(self, newValue);
                    }
                    finale(self);
                  }
                  function finale(self) {
                    if (self._75 === 1) {
                      handle(self, self._38);
                      self._38 = null;
                    }
                    if (self._75 === 2) {
                      for (var i = 0; i < self._38.length; i++) {
                        handle(self, self._38[i]);
                      }
                      self._38 = null;
                    }
                  }

                  function Handler(onFulfilled, onRejected, promise) {
                    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
                    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
                    this.promise = promise;
                  }

                  /**
                   * Take a potentially misbehaving resolver function and make sure
                   * onFulfilled and onRejected are only called once.
                   *
                   * Makes no guarantees about asynchrony.
                   */
                  function doResolve(fn, promise) {
                    var done = false;
                    var res = tryCallTwo(fn, function (value) {
                      if (done) return;
                      done = true;
                      resolve(promise, value);
                    }, function (reason) {
                      if (done) return;
                      done = true;
                      reject(promise, reason);
                    });
                    if (!done && res === IS_ERROR) {
                      done = true;
                      reject(promise, LAST_ERROR);
                    }
                  }

                  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                } } }, "asap": { "package.json": function (_require6, _exports4) {

                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                  //
                // node_modules/meteor/promise/node_modules/asap/package.json                                                       //
                //                                                                                                                  //
                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _exports4.name = "asap";
                _exports4.version = "2.0.6";
                _exports4.browser = { "./asap": "./browser-asap.js", "./asap.js": "./browser-asap.js", "./raw": "./browser-raw.js", "./raw.js": "./browser-raw.js", "./test/domain.js": "./test/browser-domain.js" };
                _exports4.main = "./asap.js";

                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "raw.js": "/node_modules/meteor/promise/node_modules/asap/browser-raw.js", "browser-raw.js": function (_require7, _exports5, _module3) {

                // Use the fastest means possible to execute a task in its own turn, with
                // priority over other events including IO, animation, reflow, and redraw
                // events in browsers.
                //
                // An exception thrown by a task will permanently interrupt the processing of
                // subsequent tasks. The higher level `asap` function ensures that if an
                // exception is thrown by a task, that the task queue will continue flushing as
                // soon as possible, but if you use `rawAsap` directly, you are responsible to
                // either ensure that no exceptions are thrown from your task, or to manually
                // call `rawAsap.requestFlush` if an exception is thrown.
                _module3.exports = rawAsap;
                function rawAsap(task) {
                  if (!queue.length) {
                    requestFlush();
                    flushing = true;
                  }
                  // Equivalent to push, but avoids a function call.
                  queue[queue.length] = task;
                }

                var queue = [];
                // Once a flush has been requested, no further calls to `requestFlush` are
                // necessary until the next `flush` completes.
                var flushing = false;
                // `requestFlush` is an implementation-specific method that attempts to kick
                // off a `flush` event as quickly as possible. `flush` will attempt to exhaust
                // the event queue before yielding to the browser's own event loop.
                var requestFlush;
                // The position of the next task to execute in the task queue. This is
                // preserved between calls to `flush` so that it can be resumed if
                // a task throws an exception.
                var index = 0;
                // If a task schedules additional tasks recursively, the task queue can grow
                // unbounded. To prevent memory exhaustion, the task queue will periodically
                // truncate already-completed tasks.
                var capacity = 1024;

                // The flush function processes all tasks that have been scheduled with
                // `rawAsap` unless and until one of those tasks throws an exception.
                // If a task throws an exception, `flush` ensures that its state will remain
                // consistent and will resume where it left off when called again.
                // However, `flush` does not make any arrangements to be called again if an
                // exception is thrown.
                function flush() {
                  while (index < queue.length) {
                    var currentIndex = index;
                    // Advance the index before calling the task. This ensures that we will
                    // begin flushing on the next task the task throws an error.
                    index = index + 1;
                    queue[currentIndex].call();
                    // Prevent leaking memory for long chains of recursive calls to `asap`.
                    // If we call `asap` within tasks scheduled by `asap`, the queue will
                    // grow, but to avoid an O(n) walk for every task we execute, we don't
                    // shift tasks off the queue after they have been executed.
                    // Instead, we periodically shift 1024 tasks off the queue.
                    if (index > capacity) {
                      // Manually shift all values starting at the index back to the
                      // beginning of the queue.
                      for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
                        queue[scan] = queue[scan + index];
                      }
                      queue.length -= index;
                      index = 0;
                    }
                  }
                  queue.length = 0;
                  index = 0;
                  flushing = false;
                }

                // `requestFlush` is implemented using a strategy based on data collected from
                // every available SauceLabs Selenium web driver worker at time of writing.
                // https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593

                // Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
                // have WebKitMutationObserver but not un-prefixed MutationObserver.
                // Must use `global` or `self` instead of `window` to work in both frames and web
                // workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.

                /* globals self */
                var scope = typeof global !== "undefined" ? global : self;
                var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;

                // MutationObservers are desirable because they have high priority and work
                // reliably everywhere they are implemented.
                // They are implemented in all modern browsers.
                //
                // - Android 4-4.3
                // - Chrome 26-34
                // - Firefox 14-29
                // - Internet Explorer 11
                // - iPad Safari 6-7.1
                // - iPhone Safari 7-7.1
                // - Safari 6-7
                if (typeof BrowserMutationObserver === "function") {
                  requestFlush = makeRequestCallFromMutationObserver(flush);

                  // MessageChannels are desirable because they give direct access to the HTML
                  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
                  // 11-12, and in web workers in many engines.
                  // Although message channels yield to any queued rendering and IO tasks, they
                  // would be better than imposing the 4ms delay of timers.
                  // However, they do not work reliably in Internet Explorer or Safari.

                  // Internet Explorer 10 is the only browser that has setImmediate but does
                  // not have MutationObservers.
                  // Although setImmediate yields to the browser's renderer, it would be
                  // preferrable to falling back to setTimeout since it does not have
                  // the minimum 4ms penalty.
                  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
                  // Desktop to a lesser extent) that renders both setImmediate and
                  // MessageChannel useless for the purposes of ASAP.
                  // https://github.com/kriskowal/q/issues/396

                  // Timers are implemented universally.
                  // We fall back to timers in workers in most engines, and in foreground
                  // contexts in the following browsers.
                  // However, note that even this simple case requires nuances to operate in a
                  // broad spectrum of browsers.
                  //
                  // - Firefox 3-13
                  // - Internet Explorer 6-9
                  // - iPad Safari 4.3
                  // - Lynx 2.8.7
                } else {
                  requestFlush = makeRequestCallFromTimer(flush);
                }

                // `requestFlush` requests that the high priority event queue be flushed as
                // soon as possible.
                // This is useful to prevent an error thrown in a task from stalling the event
                // queue if the exception handled by Node.js’s
                // `process.on("uncaughtException")` or by a domain.
                rawAsap.requestFlush = requestFlush;

                // To request a high priority event, we induce a mutation observer by toggling
                // the text of a text node between "1" and "-1".
                function makeRequestCallFromMutationObserver(callback) {
                  var toggle = 1;
                  var observer = new BrowserMutationObserver(callback);
                  var node = document.createTextNode("");
                  observer.observe(node, { characterData: true });
                  return function requestCall() {
                    toggle = -toggle;
                    node.data = toggle;
                  };
                }

                // The message channel technique was discovered by Malte Ubl and was the
                // original foundation for this library.
                // http://www.nonblocking.io/2011/06/windownexttick.html

                // Safari 6.0.5 (at least) intermittently fails to create message ports on a
                // page's first load. Thankfully, this version of Safari supports
                // MutationObservers, so we don't need to fall back in that case.

                // function makeRequestCallFromMessageChannel(callback) {
                //     var channel = new MessageChannel();
                //     channel.port1.onmessage = callback;
                //     return function requestCall() {
                //         channel.port2.postMessage(0);
                //     };
                // }

                // For reasons explained above, we are also unable to use `setImmediate`
                // under any circumstances.
                // Even if we were, there is another bug in Internet Explorer 10.
                // It is not sufficient to assign `setImmediate` to `requestFlush` because
                // `setImmediate` must be called *by name* and therefore must be wrapped in a
                // closure.
                // Never forget.

                // function makeRequestCallFromSetImmediate(callback) {
                //     return function requestCall() {
                //         setImmediate(callback);
                //     };
                // }

                // Safari 6.0 has a problem where timers will get lost while the user is
                // scrolling. This problem does not impact ASAP because Safari 6.0 supports
                // mutation observers, so that implementation is used instead.
                // However, if we ever elect to use timers in Safari, the prevalent work-around
                // is to add a scroll event listener that calls for a flush.

                // `setTimeout` does not call the passed callback if the delay is less than
                // approximately 7 in web workers in Firefox 8 through 18, and sometimes not
                // even then.

                function makeRequestCallFromTimer(callback) {
                  return function requestCall() {
                    // We dispatch a timeout with a specified delay of 0 for engines that
                    // can reliably accommodate that request. This will usually be snapped
                    // to a 4 milisecond delay, but once we're flushing, there's no delay
                    // between events.
                    var timeoutHandle = setTimeout(handleTimer, 0);
                    // However, since this timer gets frequently dropped in Firefox
                    // workers, we enlist an interval handle that will try to fire
                    // an event 20 times per second until it succeeds.
                    var intervalHandle = setInterval(handleTimer, 50);

                    function handleTimer() {
                      // Whichever timer succeeds will cancel both timers and
                      // execute the callback.
                      clearTimeout(timeoutHandle);
                      clearInterval(intervalHandle);
                      callback();
                    }
                  };
                }

                // This is for `asap.js` only.
                // Its name will be periodically randomized to break any code that depends on
                // its existence.
                rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;

                // ASAP was originally a nextTick shim included in Q. This was factored out
                // into this ASAP package. It was later adapted to RSVP which made further
                // amendments. These decisions, particularly to marginalize MessageChannel and
                // to capture the MutationObserver implementation in a closure, were integrated
                // back into ASAP proper.
                // https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js

                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              } }, "meteor-promise": { "package.json": function (_require8, _exports6) {

                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                  //
                // node_modules/meteor/promise/node_modules/meteor-promise/package.json                                             //
                //                                                                                                                  //
                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _exports6.name = "meteor-promise";
                _exports6.version = "0.8.6";
                _exports6.browser = "promise_client.js";
                _exports6.main = "promise_server.js";

                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "promise_client.js": function (_require9, _exports7) {

                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                                  //
                // node_modules/meteor/promise/node_modules/meteor-promise/promise_client.js                                        //
                //                                                                                                                  //
                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _exports7.makeCompatible = function (Promise) {
                  var es6PromiseThen = Promise.prototype.then;

                  Promise.prototype.then = function (onResolved, onRejected) {
                    if (typeof Meteor === "object" && typeof Meteor.bindEnvironment === "function") {
                      return es6PromiseThen.call(this, onResolved && Meteor.bindEnvironment(onResolved, raise), onRejected && Meteor.bindEnvironment(onRejected, raise));
                    }

                    return es6PromiseThen.call(this, onResolved, onRejected);
                  };
                };

                function raise(exception) {
                  throw exception;
                }

                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              } } } } } } }, {
    "extensions": [".js", ".json"]
  });
  _require("/node_modules/meteor/promise/modern.js");
  _require("/node_modules/meteor/promise/legacy.js");
  var _exports = _require("/node_modules/meteor/promise/client.js");

  /* Exports */
  Package._define("promise", _exports, {
    Promise: Promise
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;

  /* Package-scope variables */
  var URL;

  var _require3 = meteorInstall({ "node_modules": { "meteor": { "url": { "url_client.js": function (_require, _exports) {

            /////////////////////////////////////////////////////////////////////////////////
            //                                                                             //
            // packages/url/url_client.js                                                  //
            //                                                                             //
            /////////////////////////////////////////////////////////////////////////////////
            //
            var common = _require("./url_common.js");
            var URL = _exports.URL = common.URL;

            URL._constructUrl = function (url, query, params) {
              var query_match = /^(.*?)(\?.*)?$/.exec(url);
              return common.buildUrl(query_match[1], query_match[2], query, params);
            };

            /////////////////////////////////////////////////////////////////////////////////
          }, "url_common.js": function (_require2, _exports2) {

            /////////////////////////////////////////////////////////////////////////////////
            //                                                                             //
            // packages/url/url_common.js                                                  //
            //                                                                             //
            /////////////////////////////////////////////////////////////////////////////////
            //
            var URL = _exports2.URL = {};

            function encodeString(str) {
              return encodeURIComponent(str).replace(/\*/g, '%2A');
            }

            // Encode URL paramaters into a query string, handling nested objects and
            // arrays properly.
            URL._encodeParams = function (params, prefix) {
              var str = [];
              var isParamsArray = Array.isArray(params);
              for (var p in params) {
                if (Object.prototype.hasOwnProperty.call(params, p)) {
                  var k = prefix ? prefix + '[' + (isParamsArray ? '' : p) + ']' : p;
                  var v = params[p];
                  if (typeof v === 'object') {
                    str.push(this._encodeParams(v, k));
                  } else {
                    var encodedKey = encodeString(k).replace('%5B', '[').replace('%5D', ']');
                    str.push(encodedKey + '=' + encodeString(v));
                  }
                }
              }
              return str.join('&').replace(/%20/g, '+');
            };

            _exports2.buildUrl = function (before_qmark, from_qmark, opt_query, opt_params) {
              var url_without_query = before_qmark;
              var query = from_qmark ? from_qmark.slice(1) : null;

              if (typeof opt_query === "string") query = String(opt_query);

              if (opt_params) {
                query = query || "";
                var prms = URL._encodeParams(opt_params);
                if (query && prms) query += '&';
                query += prms;
              }

              var url = url_without_query;
              if (query !== null) url += "?" + query;

              return url;
            };

            /////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports3 = _require3("/node_modules/meteor/url/url_client.js");

  /* Exports */
  Package._define("url", _exports3, {
    URL: URL
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var URL = Package.url.URL;
  var meteorInstall = Package.modules.meteorInstall;

  /* Package-scope variables */
  var HTTP;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "http": { "httpcall_client.js": function (_require, _exports, _module) {

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                    //
            // packages/http/httpcall_client.js                                                                                   //
            //                                                                                                                    //
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var URL = _require("meteor/url").URL;
            var common = _require("./httpcall_common.js");
            var HTTP = _exports.HTTP = common.HTTP;
            var hasOwn = Object.prototype.hasOwnProperty;

            /**
             * @summary Perform an outbound HTTP request.
             * @locus Anywhere
             * @param {String} method The [HTTP method](http://en.wikipedia.org/wiki/HTTP_method) to use, such as "`GET`", "`POST`", or "`HEAD`".
             * @param {String} url The URL to retrieve.
             * @param {Object} [options]
             * @param {String} options.content String to use as the HTTP request body.
             * @param {Object} options.data JSON-able object to stringify and use as the HTTP request body. Overwrites `content`.
             * @param {String} options.query Query string to go in the URL. Overwrites any query string in `url`.
             * @param {Object} options.params Dictionary of request parameters to be encoded and placed in the URL (for GETs) or request body (for POSTs).  If `content` or `data` is specified, `params` will always be placed in the URL.
             * @param {String} options.auth HTTP basic authentication string of the form `"username:password"`
             * @param {Object} options.headers Dictionary of strings, headers to add to the HTTP request.
             * @param {Number} options.timeout Maximum time in milliseconds to wait for the request before failing.  There is no timeout by default.
             * @param {Boolean} options.followRedirects If `true`, transparently follow HTTP redirects. Cannot be set to `false` on the client. Default `true`.
             * @param {Object} options.npmRequestOptions On the server, `HTTP.call` is implemented by using the [npm `request` module](https://www.npmjs.com/package/request). Any options in this object will be passed directly to the `request` invocation.
             * @param {Function} options.beforeSend On the client, this will be called before the request is sent to allow for more direct manipulation of the underlying XMLHttpRequest object, which will be passed as the first argument. If the callback returns `false`, the request will be not be send.
             * @param {Function} [asyncCallback] Optional callback.  If passed, the method runs asynchronously, instead of synchronously, and calls asyncCallback.  On the client, this callback is required.
             */
            HTTP.call = function (method, url, options, callback) {

              ////////// Process arguments //////////

              if (!callback && typeof options === "function") {
                // support (method, url, callback) argument list
                callback = options;
                options = null;
              }

              options = options || {};

              if (typeof callback !== "function") throw new Error("Can't make a blocking HTTP call from the client; callback required.");

              method = (method || "").toUpperCase();

              var headers = {};

              var content = options.content;
              if (options.data) {
                content = JSON.stringify(options.data);
                headers['Content-Type'] = 'application/json';
              }

              var params_for_url, params_for_body;
              if (content || method === "GET" || method === "HEAD") params_for_url = options.params;else params_for_body = options.params;

              url = URL._constructUrl(url, options.query, params_for_url);

              if (options.followRedirects === false) throw new Error("Option followRedirects:false not supported on client.");

              if (hasOwn.call(options, 'npmRequestOptions')) {
                throw new Error("Option npmRequestOptions not supported on client.");
              }

              var username, password;
              if (options.auth) {
                var colonLoc = options.auth.indexOf(':');
                if (colonLoc < 0) throw new Error('Option auth should be of the form "username:password"');
                username = options.auth.substring(0, colonLoc);
                password = options.auth.substring(colonLoc + 1);
              }

              if (params_for_body) {
                content = URL._encodeParams(params_for_body);
              }

              if (options.headers) {
                Object.keys(options.headers).forEach(function (key) {
                  headers[key] = options.headers[key];
                });
              }

              ////////// Callback wrapping //////////

              // wrap callback to add a 'response' property on an error, in case
              // we have both (http 4xx/5xx error, which has a response payload)
              callback = function (callback) {
                var called = false;
                return function (error, response) {
                  if (!called) {
                    called = true;
                    if (error && response) {
                      error.response = response;
                    }
                    callback(error, response);
                  }
                };
              }(callback);

              ////////// Kickoff! //////////

              // from this point on, errors are because of something remote, not
              // something we should check in advance. Turn exceptions into error
              // results.
              try {
                // setup XHR object
                var xhr;
                if (typeof XMLHttpRequest !== "undefined") xhr = new XMLHttpRequest();else if (typeof ActiveXObject !== "undefined") xhr = new ActiveXObject("Microsoft.XMLHttp"); // IE6
                else throw new Error("Can't create XMLHttpRequest"); // ???

                xhr.open(method, url, true, username, password);

                for (var k in headers) xhr.setRequestHeader(k, headers[k]);

                // setup timeout
                var timed_out = false;
                var timer;
                if (options.timeout) {
                  timer = Meteor.setTimeout(function () {
                    timed_out = true;
                    xhr.abort();
                  }, options.timeout);
                };

                // callback on complete
                xhr.onreadystatechange = function (evt) {
                  if (xhr.readyState === 4) {
                    // COMPLETE
                    if (timer) Meteor.clearTimeout(timer);

                    if (timed_out) {
                      callback(new Error("Connection timeout"));
                    } else if (!xhr.status) {
                      // no HTTP response
                      callback(new Error("Connection lost"));
                    } else {

                      var response = {};
                      response.statusCode = xhr.status;
                      response.content = xhr.responseText;

                      response.headers = {};
                      var header_str = xhr.getAllResponseHeaders();

                      // https://github.com/meteor/meteor/issues/553
                      //
                      // In Firefox there is a weird issue, sometimes
                      // getAllResponseHeaders returns the empty string, but
                      // getResponseHeader returns correct results. Possibly this
                      // issue:
                      // https://bugzilla.mozilla.org/show_bug.cgi?id=608735
                      //
                      // If this happens we can't get a full list of headers, but
                      // at least get content-type so our JSON decoding happens
                      // correctly. In theory, we could try and rescue more header
                      // values with a list of common headers, but content-type is
                      // the only vital one for now.
                      if ("" === header_str && xhr.getResponseHeader("content-type")) header_str = "content-type: " + xhr.getResponseHeader("content-type");

                      var headers_raw = header_str.split(/\r?\n/);
                      headers_raw.forEach(function (h) {
                        var m = /^(.*?):(?:\s+)(.*)$/.exec(h);
                        if (m && m.length === 3) {
                          response.headers[m[1].toLowerCase()] = m[2];
                        }
                      });

                      common.populateData(response);

                      var error = null;
                      if (response.statusCode >= 400) {
                        error = common.makeErrorByStatus(response.statusCode, response.content);
                      }

                      callback(error, response);
                    }
                  }
                };

                // Allow custom control over XHR and abort early.
                if (typeof options.beforeSend === "function") {
                  // Call the callback and check to see if the request was aborted
                  if (false === options.beforeSend.call(null, xhr, options)) {
                    return xhr.abort();
                  }
                }

                // send it on its way
                xhr.send(content);
              } catch (err) {
                callback(err);
              }
            };

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "httpcall_common.js": function (_require3, _exports3) {

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                    //
            // packages/http/httpcall_common.js                                                                                   //
            //                                                                                                                    //
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var MAX_LENGTH = 500; // if you change this, also change the appropriate test
            var slice = Array.prototype.slice;

            _exports3.makeErrorByStatus = function (statusCode, content) {
              var message = "failed [" + statusCode + "]";

              if (content) {
                var stringContent = typeof content == "string" ? content : content.toString();

                message += ' ' + truncate(stringContent.replace(/\n/g, ' '), MAX_LENGTH);
              }

              return new Error(message);
            };

            function truncate(str, length) {
              return str.length > length ? str.slice(0, length) + '...' : str;
            }

            // Fill in `response.data` if the content-type is JSON.
            _exports3.populateData = function (response) {
              // Read Content-Type header, up to a ';' if there is one.
              // A typical header might be "application/json; charset=utf-8"
              // or just "application/json".
              var contentType = (response.headers['content-type'] || ';').split(';')[0];

              // Only try to parse data as JSON if server sets correct content type.
              if (['application/json', 'text/javascript', 'application/javascript', 'application/x-javascript'].indexOf(contentType) >= 0) {
                try {
                  response.data = JSON.parse(response.content);
                } catch (err) {
                  response.data = null;
                }
              } else {
                response.data = null;
              }
            };

            var HTTP = _exports3.HTTP = {};

            /**
             * @summary Send an HTTP `GET` request. Equivalent to calling [`HTTP.call`](#http_call) with "GET" as the first argument.
             * @param {String} url The URL to which the request should be sent.
             * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).
             * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.
             * @locus Anywhere
             */
            HTTP.get = function () /* varargs */{
              return HTTP.call.apply(this, ["GET"].concat(slice.call(arguments)));
            };

            /**
             * @summary Send an HTTP `POST` request. Equivalent to calling [`HTTP.call`](#http_call) with "POST" as the first argument.
             * @param {String} url The URL to which the request should be sent.
             * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).
             * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.
             * @locus Anywhere
             */
            HTTP.post = function () /* varargs */{
              return HTTP.call.apply(this, ["POST"].concat(slice.call(arguments)));
            };

            /**
             * @summary Send an HTTP `PUT` request. Equivalent to calling [`HTTP.call`](#http_call) with "PUT" as the first argument.
             * @param {String} url The URL to which the request should be sent.
             * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).
             * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.
             * @locus Anywhere
             */
            HTTP.put = function () /* varargs */{
              return HTTP.call.apply(this, ["PUT"].concat(slice.call(arguments)));
            };

            /**
             * @summary Send an HTTP `DELETE` request. Equivalent to calling [`HTTP.call`](#http_call) with "DELETE" as the first argument. (Named `del` to avoid conflict with the Javascript keyword `delete`)
             * @param {String} url The URL to which the request should be sent.
             * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).
             * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.
             * @locus Anywhere
             */
            HTTP.del = function () /* varargs */{
              return HTTP.call.apply(this, ["DELETE"].concat(slice.call(arguments)));
            };

            /**
             * @summary Send an HTTP `PATCH` request. Equivalent to calling [`HTTP.call`](#http_call) with "PATCH" as the first argument.
             * @param {String} url The URL to which the request should be sent.
             * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).
             * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.
             * @locus Anywhere
             */
            HTTP.patch = function () /* varargs */{
              return HTTP.call.apply(this, ["PATCH"].concat(slice.call(arguments)));
            };

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/http/httpcall_client.js");

  /* Exports */
  Package._define("http", _exports2, {
    HTTP: HTTP
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;
  var Promise = Package.promise.Promise;
  var HTTP = Package.http.HTTP;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "dynamic-import": { "client.js": function (_require, _exports, _module) {

            /////////////////////////////////////////////////////////////////////////////////
            //                                                                             //
            // packages/dynamic-import/client.js                                           //
            //                                                                             //
            /////////////////////////////////////////////////////////////////////////////////
            //
            var Module = _module.constructor;
            var cache = _require("./cache.js");
            var HTTP = _require("meteor/http").HTTP;
            var meteorInstall = _require("meteor/modules").meteorInstall;

            // Call module.dynamicImport(id) to fetch a module and any/all of its
            // dependencies that have not already been fetched, and evaluate them as
            // soon as they arrive. This runtime API makes it very easy to implement
            // ECMAScript dynamic import(...) syntax.
            Module.prototype.dynamicImport = function (id) {
              var module = this;
              return module.prefetch(id).then(function () {
                return getNamespace(module, id);
              });
            };

            // Called by Module.prototype.prefetch if there are any missing dynamic
            // modules that need to be fetched.
            meteorInstall.fetch = function (ids) {
              var tree = Object.create(null);
              var versions = Object.create(null);
              var dynamicVersions = _require("./dynamic-versions.js");
              var missing;

              function addSource(id, source) {
                addToTree(tree, id, makeModuleFunction(id, source, ids[id].options));
              }

              function addMissing(id) {
                addToTree(missing = missing || Object.create(null), id, 1);
              }

              Object.keys(ids).forEach(function (id) {
                var version = dynamicVersions.get(id);
                if (version) {
                  versions[id] = version;
                } else {
                  addMissing(id);
                }
              });

              return cache.checkMany(versions).then(function (sources) {
                Object.keys(sources).forEach(function (id) {
                  var source = sources[id];
                  if (source) {
                    addSource(id, source);
                  } else {
                    addMissing(id);
                  }
                });

                return missing && fetchMissing(missing).then(function (results) {
                  var versionsAndSourcesById = Object.create(null);
                  var flatResults = flattenModuleTree(results);

                  Object.keys(flatResults).forEach(function (id) {
                    var source = flatResults[id];
                    addSource(id, source);

                    var version = dynamicVersions.get(id);
                    if (version) {
                      versionsAndSourcesById[id] = {
                        version: version,
                        source: source
                      };
                    }
                  });

                  cache.setMany(versionsAndSourcesById);
                });
              }).then(function () {
                return tree;
              });
            };

            function flattenModuleTree(tree) {
              var parts = [""];
              var result = Object.create(null);

              function walk(t) {
                if (t && typeof t === "object") {
                  Object.keys(t).forEach(function (key) {
                    parts.push(key);
                    walk(t[key]);
                    parts.pop();
                  });
                } else if (typeof t === "string") {
                  result[parts.join("/")] = t;
                }
              }

              walk(tree);

              return result;
            }

            function makeModuleFunction(id, source, options) {
              // By calling (options && options.eval || eval) in a wrapper function,
              // we delay the cost of parsing and evaluating the module code until the
              // module is first imported.
              return function () {
                // If an options.eval function was provided in the second argument to
                // meteorInstall when this bundle was first installed, use that
                // function to parse and evaluate the dynamic module code in the scope
                // of the package. Otherwise fall back to indirect (global) eval.
                return (options && options.eval || eval)(
                // Wrap the function(require,exports,module){...} expression in
                // parentheses to force it to be parsed as an expression.
                "(" + source + ")\n//# sourceURL=" + id).apply(this, arguments);
              };
            }

            var secretKey = null;
            _exports.setSecretKey = function (key) {
              secretKey = key;
            };

            var fetchURL = _require("./common.js").fetchURL;

            function fetchMissing(missingTree) {
              return new Promise(function (resolve, reject) {
                // If the hostname of the URL returned by Meteor.absoluteUrl differs
                // from location.host, then we'll be making a cross-origin request
                // here, but that's fine because the dynamic-import server sets
                // appropriate CORS headers to enable fetching dynamic modules from
                // any origin. Browsers that check CORS do so by sending an additional
                // preflight OPTIONS request, which may add latency to the first
                // dynamic import() request, so it's a good idea for ROOT_URL to match
                // location.host if possible, though not strictly necessary.
                HTTP.call("POST", Meteor.absoluteUrl(fetchURL), {
                  query: secretKey ? "key=" + secretKey : void 0,
                  data: missingTree
                }, function (error, result) {
                  error ? reject(error) : resolve(result.data);
                });
              });
            }

            function addToTree(tree, id, value) {
              var parts = id.split("/");
              var lastIndex = parts.length - 1;
              parts.forEach(function (part, i) {
                if (part) {
                  tree = tree[part] = tree[part] || (i < lastIndex ? Object.create(null) : value);
                }
              });
            }

            function getNamespace(_module2, id) {
              var namespace;

              _module2.watch(_module2.require(id), {
                "*": function (ns) {
                  namespace = ns;
                }
              });

              // This helps with Babel interop, since we're not just returning the
              // module.exports object.
              Object.defineProperty(namespace, "__esModule", {
                value: true,
                enumerable: false
              });

              return namespace;
            }

            /////////////////////////////////////////////////////////////////////////////////
          }, "cache.js": function (_require3, _exports3, _module3) {

            /////////////////////////////////////////////////////////////////////////////////
            //                                                                             //
            // packages/dynamic-import/cache.js                                            //
            //                                                                             //
            /////////////////////////////////////////////////////////////////////////////////
            //
            var hasOwn = Object.prototype.hasOwnProperty;
            var dbPromise;

            var canUseCache =
            // The server doesn't benefit from dynamic module fetching, and almost
            // certainly doesn't support IndexedDB.
            Meteor.isClient &&
            // Cordova bundles all modules into the monolithic initial bundle, so
            // the dynamic module cache won't be necessary.
            !Meteor.isCordova &&
            // Caching can be confusing in development, and is designed to be a
            // transparent optimization for production performance.
            Meteor.isProduction;

            function getIDB() {
              if (typeof indexedDB !== "undefined") return indexedDB;
              if (typeof webkitIndexedDB !== "undefined") return webkitIndexedDB;
              if (typeof mozIndexedDB !== "undefined") return mozIndexedDB;
              if (typeof OIndexedDB !== "undefined") return OIndexedDB;
              if (typeof msIndexedDB !== "undefined") return msIndexedDB;
            }

            function withDB(callback) {
              dbPromise = dbPromise || new Promise(function (resolve, reject) {
                var idb = getIDB();
                if (!idb) {
                  throw new Error("IndexedDB not available");
                }

                // Incrementing the version number causes all existing object stores
                // to be deleted and recreates those specified by objectStoreMap.
                var request = idb.open("MeteorDynamicImportCache", 2);

                request.onupgradeneeded = function (event) {
                  var db = event.target.result;

                  // It's fine to delete existing object stores since onupgradeneeded
                  // is only called when we change the DB version number, and the data
                  // we're storing is disposable/reconstructible.
                  Array.from(db.objectStoreNames).forEach(db.deleteObjectStore, db);

                  Object.keys(objectStoreMap).forEach(function (name) {
                    db.createObjectStore(name, objectStoreMap[name]);
                  });
                };

                request.onerror = makeOnError(reject, "indexedDB.open");
                request.onsuccess = function (event) {
                  resolve(event.target.result);
                };
              });

              return dbPromise.then(callback, function (error) {
                return callback(null);
              });
            }

            var objectStoreMap = {
              sourcesByVersion: { keyPath: "version" }
            };

            function makeOnError(reject, source) {
              return function (event) {
                reject(new Error("IndexedDB failure in " + source + " " + JSON.stringify(event.target)));

                // Returning true from an onerror callback function prevents an
                // InvalidStateError in Firefox during Private Browsing. Silencing
                // that error is safe because we handle the error more gracefully by
                // passing it to the Promise reject function above.
                // https://github.com/meteor/meteor/issues/8697
                return true;
              };
            }

            var checkCount = 0;

            _exports3.checkMany = function (versions) {
              var ids = Object.keys(versions);
              var sourcesById = Object.create(null);

              // Initialize sourcesById with null values to indicate all sources are
              // missing (unless replaced with actual sources below).
              ids.forEach(function (id) {
                sourcesById[id] = null;
              });

              if (!canUseCache) {
                return Promise.resolve(sourcesById);
              }

              return withDB(function (db) {
                if (!db) {
                  // We thought we could used IndexedDB, but something went wrong
                  // while opening the database, so err on the side of safety.
                  return sourcesById;
                }

                var txn = db.transaction(["sourcesByVersion"], "readonly");

                var sourcesByVersion = txn.objectStore("sourcesByVersion");

                ++checkCount;

                function finish() {
                  --checkCount;
                  return sourcesById;
                }

                return Promise.all(ids.map(function (id) {
                  return new Promise(function (resolve, reject) {
                    var version = versions[id];
                    if (version) {
                      var sourceRequest = sourcesByVersion.get(version);
                      sourceRequest.onerror = makeOnError(reject, "sourcesByVersion.get");
                      sourceRequest.onsuccess = function (event) {
                        var result = event.target.result;
                        if (result) {
                          sourcesById[id] = result.source;
                        }
                        resolve();
                      };
                    } else resolve();
                  });
                })).then(finish, finish);
              });
            };

            var pendingVersionsAndSourcesById = Object.create(null);

            _exports3.setMany = function (versionsAndSourcesById) {
              if (canUseCache) {
                Object.assign(pendingVersionsAndSourcesById, versionsAndSourcesById);

                // Delay the call to flushSetMany so that it doesn't contribute to the
                // amount of time it takes to call module.dynamicImport.
                if (!flushSetMany.timer) {
                  flushSetMany.timer = setTimeout(flushSetMany, 100);
                }
              }
            };

            function flushSetMany() {
              if (checkCount > 0) {
                // If checkMany is currently underway, postpone the flush until later,
                // since updating the cache is less important than reading from it.
                return flushSetMany.timer = setTimeout(flushSetMany, 100);
              }

              flushSetMany.timer = null;

              var versionsAndSourcesById = pendingVersionsAndSourcesById;
              pendingVersionsAndSourcesById = Object.create(null);

              return withDB(function (db) {
                if (!db) {
                  // We thought we could used IndexedDB, but something went wrong
                  // while opening the database, so err on the side of safety.
                  return;
                }

                var setTxn = db.transaction(["sourcesByVersion"], "readwrite");

                var sourcesByVersion = setTxn.objectStore("sourcesByVersion");

                return Promise.all(Object.keys(versionsAndSourcesById).map(function (id) {
                  var info = versionsAndSourcesById[id];
                  return new Promise(function (resolve, reject) {
                    var request = sourcesByVersion.put({
                      version: info.version,
                      source: info.source
                    });
                    request.onerror = makeOnError(reject, "sourcesByVersion.put");
                    request.onsuccess = resolve;
                  });
                }));
              });
            }

            /////////////////////////////////////////////////////////////////////////////////
          }, "common.js": function (_require4, _exports4) {

            /////////////////////////////////////////////////////////////////////////////////
            //                                                                             //
            // packages/dynamic-import/common.js                                           //
            //                                                                             //
            /////////////////////////////////////////////////////////////////////////////////
            //
            _exports4.fetchURL = "/__meteor__/dynamic-import/fetch";

            /////////////////////////////////////////////////////////////////////////////////
          }, "dynamic-versions.js": function (_require5, _exports5, _module4) {

            /////////////////////////////////////////////////////////////////////////////////
            //                                                                             //
            // packages/dynamic-import/dynamic-versions.js                                 //
            //                                                                             //
            /////////////////////////////////////////////////////////////////////////////////
            //
            // This magic double-underscored identifier gets replaced in
            // tools/isobuild/bundler.js with a tree of hashes of all dynamic
            // modules, for use in client.js and cache.js.
            var versions = {};

            _exports5.get = function (id) {
              var tree = versions;
              var version = null;

              id.split("/").some(function (part) {
                if (part) {
                  // If the tree contains identifiers for Meteor packages with colons
                  // in their names, the colons should not have been replaced by
                  // underscores, but there's a bug that results in that behavior, so
                  // for now it seems safest to be tolerant of underscores here.
                  // https://github.com/meteor/meteor/pull/9103
                  tree = tree[part] || tree[part.replace(":", "_")];
                }

                if (!tree) {
                  // Terminate the search without reassigning version.
                  return true;
                }

                if (typeof tree === "string") {
                  version = tree;
                  return true;
                }
              });

              return version;
            };

            function getFlatModuleArray(tree) {
              var parts = [""];
              var result = [];

              function walk(t) {
                if (t && typeof t === "object") {
                  Object.keys(t).forEach(function (key) {
                    parts.push(key);
                    walk(t[key]);
                    parts.pop();
                  });
                } else if (typeof t === "string") {
                  result.push(parts.join("/"));
                }
              }

              walk(tree);

              return result;
            }

            // If Package.appcache is loaded, preload additional modules after the
            // core bundle has been loaded.
            function precacheOnLoad(event) {
              // Check inside onload to make sure Package.appcache has had a chance to
              // become available.
              if (!Package.appcache) {
                return;
              }

              // Prefetch in chunks to reduce overhead. If we call module.prefetch(id)
              // multiple times in the same tick of the event loop, all those modules
              // will be fetched in one HTTP POST request.
              function prefetchInChunks(modules, amount) {
                Promise.all(modules.splice(0, amount).map(function (id) {
                  return _module4.prefetch(id);
                })).then(function () {
                  if (modules.length > 0) {
                    prefetchInChunks(modules, amount);
                  }
                });
              }

              // Get a flat array of modules and start prefetching.
              prefetchInChunks(getFlatModuleArray(versions), 50);
            }

            // Use window.onload to only prefetch after the main bundle has loaded.
            if (global.addEventListener) {
              global.addEventListener('load', precacheOnLoad, false);
            } else if (global.attachEvent) {
              global.attachEvent('onload', precacheOnLoad);
            }

            /////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/dynamic-import/client.js");

  /* Exports */
  Package._define("dynamic-import", _exports2);
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;
  var Promise = Package.promise.Promise;

  /* Package-scope variables */
  var Symbol, Map, Set;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "ecmascript-runtime-client": { "modern.js": function (_require) {

            ///////////////////////////////////////////////////////////////////////////
            //                                                                       //
            // packages/ecmascript-runtime-client/modern.js                          //
            //                                                                       //
            ///////////////////////////////////////////////////////////////////////////
            //
            try {
              _require("core-js/modules/es7.object.get-own-property-descriptors");
            } catch (e) {
              throw new Error(["The core-js npm package could not be found in your node_modules ", "directory. Please run the following command to install it:", "", "  meteor npm install --save core-js", ""].join("\n"));
            }

            _require("core-js/modules/es6.object.is");
            _require("core-js/modules/es6.function.name");
            _require("core-js/modules/es6.number.is-finite");
            _require("core-js/modules/es6.number.is-nan");
            _require("core-js/modules/es7.array.flatten");
            _require("core-js/modules/es7.array.flat-map");
            _require("core-js/modules/es7.object.values");
            _require("core-js/modules/es7.object.entries");
            _require("core-js/modules/es7.string.pad-start");
            _require("core-js/modules/es7.string.pad-end");

            ///////////////////////////////////////////////////////////////////////////
          }, "legacy.js": function (_require3, _exports2, _module) {

            ///////////////////////////////////////////////////////////////////////////
            //                                                                       //
            // packages/ecmascript-runtime-client/legacy.js                          //
            //                                                                       //
            ///////////////////////////////////////////////////////////////////////////
            //
            try {
              _require3("core-js/modules/es6.symbol");
              _require3("core-js/modules/es6.map");
              _require3("core-js/modules/es6.set");

              var core = function () {
                try {
                  return _require3("core-js/modules/_core");
                } catch (e) {
                  // Older versions of core-js had a different file layout.
                  return _require3("core-js/modules/$.core");
                }
              }();
            } catch (e) {
              throw new Error(["The core-js npm package could not be found in your node_modules ", "directory. Please run the following command to install it:", "", "  meteor npm install --save core-js", ""].join("\n"));
            }

            Symbol = _exports2.Symbol = core.Symbol;
            Map = _exports2.Map = core.Map;
            Set = _exports2.Set = core.Set;

            // ECMAScript 2015 polyfills.
            _require3("core-js/es6/array");
            _require3("core-js/es6/function");
            _require3("core-js/es6/math");
            _require3("core-js/es6/object");
            _require3("core-js/es6/regexp");
            _require3("core-js/es6/string");
            _require3("core-js/es6/weak-map");
            _require3("core-js/es6/weak-set");

            // If the Reflect global namespace is missing or undefined, explicitly
            // initialize it as undefined, so that expressions like _typeof(Reflect)
            // won't throw in older browsers. Fixes #9598.
            if (typeof Reflect === "undefined") {
              global.Reflect = void 0;
            }

            // ECMAScript 2017 polyfills.
            _require3("core-js/es7/array");
            _require3("core-js/es7/object");
            _require3("core-js/modules/es7.string.pad-start");
            _require3("core-js/modules/es7.string.pad-end");

            // We want everything from the core-js/es6/number module except
            // es6.number.constructor.
            _require3('core-js/modules/es6.number.epsilon');
            _require3('core-js/modules/es6.number.is-finite');
            _require3('core-js/modules/es6.number.is-integer');
            _require3('core-js/modules/es6.number.is-nan');
            _require3('core-js/modules/es6.number.is-safe-integer');
            _require3('core-js/modules/es6.number.max-safe-integer');
            _require3('core-js/modules/es6.number.min-safe-integer');
            _require3('core-js/modules/es6.number.parse-float');
            _require3('core-js/modules/es6.number.parse-int');

            // Typed Arrays
            _require3('core-js/modules/es6.typed.uint8-array');
            _require3('core-js/modules/es6.typed.uint32-array');

            _require3("./modern.js");

            ///////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports = _require2("/node_modules/meteor/ecmascript-runtime-client/legacy.js");

  /* Exports */
  Package._define("ecmascript-runtime-client", _exports, {
    Symbol: Symbol,
    Map: Map,
    Set: Set
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var Tracker, Deps;

  var _require = meteorInstall({ "node_modules": { "meteor": { "tracker": { "tracker.js": function () {

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                    //
            // packages/tracker/tracker.js                                                                                        //
            //                                                                                                                    //
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            /////////////////////////////////////////////////////
            // Package docs at http://docs.meteor.com/#tracker //
            /////////////////////////////////////////////////////

            /**
             * @namespace Tracker
             * @summary The namespace for Tracker-related methods.
             */
            Tracker = {};
            /**
             * @namespace Deps
             * @deprecated
             */

            Deps = Tracker; // http://docs.meteor.com/#tracker_active

            /**
             * @summary True if there is a current computation, meaning that dependencies on reactive data sources will be tracked and potentially cause the current computation to be rerun.
             * @locus Client
             * @type {Boolean}
             */

            Tracker.active = false; // http://docs.meteor.com/#tracker_currentcomputation

            /**
             * @summary The current computation, or `null` if there isn't one.  The current computation is the [`Tracker.Computation`](#tracker_computation) object created by the innermost active call to `Tracker.autorun`, and it's the computation that gains dependencies when reactive data sources are accessed.
             * @locus Client
             * @type {Tracker.Computation}
             */

            Tracker.currentComputation = null;

            function setCurrentComputation(c) {
              Tracker.currentComputation = c;
              Tracker.active = !!c;
            }

            function _debugFunc() {
              // We want this code to work without Meteor, and also without
              // "console" (which is technically non-standard and may be missing
              // on some browser we come across, like it was on IE 7).
              //
              // Lazy evaluation because `Meteor` does not exist right away.(??)
              return typeof Meteor !== "undefined" ? Meteor._debug : typeof console !== "undefined" && console.error ? function () {
                console.error.apply(console, arguments);
              } : function () {};
            }

            function _maybeSuppressMoreLogs(messagesLength) {
              // Sometimes when running tests, we intentionally suppress logs on expected
              // printed errors. Since the current implementation of _throwOrLog can log
              // multiple separate log messages, suppress all of them if at least one suppress
              // is expected as we still want them to count as one.
              if (typeof Meteor !== "undefined") {
                if (Meteor._suppressed_log_expected()) {
                  Meteor._suppress_log(messagesLength - 1);
                }
              }
            }

            function _throwOrLog(from, e) {
              if (throwFirstError) {
                throw e;
              } else {
                var printArgs = ["Exception from Tracker " + from + " function:"];

                if (e.stack && e.message && e.name) {
                  var idx = e.stack.indexOf(e.message);

                  if (idx < 0 || idx > e.name.length + 2) {
                    // check for "Error: "
                    // message is not part of the stack
                    var message = e.name + ": " + e.message;
                    printArgs.push(message);
                  }
                }

                printArgs.push(e.stack);

                _maybeSuppressMoreLogs(printArgs.length);

                for (var i = 0; i < printArgs.length; i++) {
                  _debugFunc()(printArgs[i]);
                }
              }
            } // Takes a function `f`, and wraps it in a `Meteor._noYieldsAllowed`
            // block if we are running on the server. On the client, returns the
            // original function (since `Meteor._noYieldsAllowed` is a
            // no-op). This has the benefit of not adding an unnecessary stack
            // frame on the client.


            function withNoYieldsAllowed(f) {
              if (typeof Meteor === 'undefined' || Meteor.isClient) {
                return f;
              } else {
                return function () {
                  var args = arguments;

                  Meteor._noYieldsAllowed(function () {
                    f.apply(null, args);
                  });
                };
              }
            }

            var nextId = 1; // computations whose callbacks we should call at flush time

            var pendingComputations = []; // `true` if a Tracker.flush is scheduled, or if we are in Tracker.flush now

            var willFlush = false; // `true` if we are in Tracker.flush now

            var inFlush = false; // `true` if we are computing a computation now, either first time
            // or recompute.  This matches Tracker.active unless we are inside
            // Tracker.nonreactive, which nullfies currentComputation even though
            // an enclosing computation may still be running.

            var inCompute = false; // `true` if the `_throwFirstError` option was passed in to the call
            // to Tracker.flush that we are in. When set, throw rather than log the
            // first error encountered while flushing. Before throwing the error,
            // finish flushing (from a finally block), logging any subsequent
            // errors.

            var throwFirstError = false;
            var afterFlushCallbacks = [];

            function requireFlush() {
              if (!willFlush) {
                // We want this code to work without Meteor, see debugFunc above
                if (typeof Meteor !== "undefined") Meteor._setImmediate(Tracker._runFlush);else setTimeout(Tracker._runFlush, 0);
                willFlush = true;
              }
            } // Tracker.Computation constructor is visible but private
            // (throws an error if you try to call it)


            var constructingComputation = false; //
            // http://docs.meteor.com/#tracker_computation

            /**
             * @summary A Computation object represents code that is repeatedly rerun
             * in response to
             * reactive data changes. Computations don't have return values; they just
             * perform actions, such as rerendering a template on the screen. Computations
             * are created using Tracker.autorun. Use stop to prevent further rerunning of a
             * computation.
             * @instancename computation
             */

            Tracker.Computation =
            /*#__PURE__*/
            function () {
              function Computation(f, parent, onError) {
                if (!constructingComputation) throw new Error("Tracker.Computation constructor is private; use Tracker.autorun");
                constructingComputation = false; // http://docs.meteor.com/#computation_stopped

                /**
                 * @summary True if this computation has been stopped.
                 * @locus Client
                 * @memberOf Tracker.Computation
                 * @instance
                 * @name  stopped
                 */

                this.stopped = false; // http://docs.meteor.com/#computation_invalidated

                /**
                 * @summary True if this computation has been invalidated (and not yet rerun), or if it has been stopped.
                 * @locus Client
                 * @memberOf Tracker.Computation
                 * @instance
                 * @name  invalidated
                 * @type {Boolean}
                 */

                this.invalidated = false; // http://docs.meteor.com/#computation_firstrun

                /**
                 * @summary True during the initial run of the computation at the time `Tracker.autorun` is called, and false on subsequent reruns and at other times.
                 * @locus Client
                 * @memberOf Tracker.Computation
                 * @instance
                 * @name  firstRun
                 * @type {Boolean}
                 */

                this.firstRun = true;
                this._id = nextId++;
                this._onInvalidateCallbacks = [];
                this._onStopCallbacks = []; // the plan is at some point to use the parent relation
                // to constrain the order that computations are processed

                this._parent = parent;
                this._func = f;
                this._onError = onError;
                this._recomputing = false;
                var errored = true;

                try {
                  this._compute();

                  errored = false;
                } finally {
                  this.firstRun = false;
                  if (errored) this.stop();
                }
              } // http://docs.meteor.com/#computation_oninvalidate

              /**
               * @summary Registers `callback` to run when this computation is next invalidated, or runs it immediately if the computation is already invalidated.  The callback is run exactly once and not upon future invalidations unless `onInvalidate` is called again after the computation becomes valid again.
               * @locus Client
               * @param {Function} callback Function to be called on invalidation. Receives one argument, the computation that was invalidated.
               */

              var _proto = Computation.prototype;

              _proto.onInvalidate = function () {
                function onInvalidate(f) {
                  var _this = this;

                  if (typeof f !== 'function') throw new Error("onInvalidate requires a function");

                  if (this.invalidated) {
                    Tracker.nonreactive(function () {
                      withNoYieldsAllowed(f)(_this);
                    });
                  } else {
                    this._onInvalidateCallbacks.push(f);
                  }
                }

                return onInvalidate;
              }();
              /**
               * @summary Registers `callback` to run when this computation is stopped, or runs it immediately if the computation is already stopped.  The callback is run after any `onInvalidate` callbacks.
               * @locus Client
               * @param {Function} callback Function to be called on stop. Receives one argument, the computation that was stopped.
               */

              _proto.onStop = function () {
                function onStop(f) {
                  var _this2 = this;

                  if (typeof f !== 'function') throw new Error("onStop requires a function");

                  if (this.stopped) {
                    Tracker.nonreactive(function () {
                      withNoYieldsAllowed(f)(_this2);
                    });
                  } else {
                    this._onStopCallbacks.push(f);
                  }
                }

                return onStop;
              }(); // http://docs.meteor.com/#computation_invalidate

              /**
               * @summary Invalidates this computation so that it will be rerun.
               * @locus Client
               */

              _proto.invalidate = function () {
                function invalidate() {
                  var _this3 = this;

                  if (!this.invalidated) {
                    // if we're currently in _recompute(), don't enqueue
                    // ourselves, since we'll rerun immediately anyway.
                    if (!this._recomputing && !this.stopped) {
                      requireFlush();
                      pendingComputations.push(this);
                    }

                    this.invalidated = true; // callbacks can't add callbacks, because
                    // this.invalidated === true.

                    for (var i = 0, f; f = this._onInvalidateCallbacks[i]; i++) {
                      Tracker.nonreactive(function () {
                        withNoYieldsAllowed(f)(_this3);
                      });
                    }

                    this._onInvalidateCallbacks = [];
                  }
                }

                return invalidate;
              }(); // http://docs.meteor.com/#computation_stop

              /**
               * @summary Prevents this computation from rerunning.
               * @locus Client
               */

              _proto.stop = function () {
                function stop() {
                  var _this4 = this;

                  if (!this.stopped) {
                    this.stopped = true;
                    this.invalidate();

                    for (var i = 0, f; f = this._onStopCallbacks[i]; i++) {
                      Tracker.nonreactive(function () {
                        withNoYieldsAllowed(f)(_this4);
                      });
                    }

                    this._onStopCallbacks = [];
                  }
                }

                return stop;
              }();

              _proto._compute = function () {
                function _compute() {
                  this.invalidated = false;
                  var previous = Tracker.currentComputation;
                  setCurrentComputation(this);
                  var previousInCompute = inCompute;
                  inCompute = true;

                  try {
                    withNoYieldsAllowed(this._func)(this);
                  } finally {
                    setCurrentComputation(previous);
                    inCompute = previousInCompute;
                  }
                }

                return _compute;
              }();

              _proto._needsRecompute = function () {
                function _needsRecompute() {
                  return this.invalidated && !this.stopped;
                }

                return _needsRecompute;
              }();

              _proto._recompute = function () {
                function _recompute() {
                  this._recomputing = true;

                  try {
                    if (this._needsRecompute()) {
                      try {
                        this._compute();
                      } catch (e) {
                        if (this._onError) {
                          this._onError(e);
                        } else {
                          _throwOrLog("recompute", e);
                        }
                      }
                    }
                  } finally {
                    this._recomputing = false;
                  }
                }

                return _recompute;
              }();
              /**
               * @summary Process the reactive updates for this computation immediately
               * and ensure that the computation is rerun. The computation is rerun only
               * if it is invalidated.
               * @locus Client
               */

              _proto.flush = function () {
                function flush() {
                  if (this._recomputing) return;

                  this._recompute();
                }

                return flush;
              }();
              /**
               * @summary Causes the function inside this computation to run and
               * synchronously process all reactive updtes.
               * @locus Client
               */

              _proto.run = function () {
                function run() {
                  this.invalidate();
                  this.flush();
                }

                return run;
              }();

              return Computation;
            }(); //
            // http://docs.meteor.com/#tracker_dependency

            /**
             * @summary A Dependency represents an atomic unit of reactive data that a
             * computation might depend on. Reactive data sources such as Session or
             * Minimongo internally create different Dependency objects for different
             * pieces of data, each of which may be depended on by multiple computations.
             * When the data changes, the computations are invalidated.
             * @class
             * @instanceName dependency
             */

            Tracker.Dependency =
            /*#__PURE__*/
            function () {
              function Dependency() {
                this._dependentsById = Object.create(null);
              } // http://docs.meteor.com/#dependency_depend
              //
              // Adds `computation` to this set if it is not already
              // present.  Returns true if `computation` is a new member of the set.
              // If no argument, defaults to currentComputation, or does nothing
              // if there is no currentComputation.

              /**
               * @summary Declares that the current computation (or `fromComputation` if given) depends on `dependency`.  The computation will be invalidated the next time `dependency` changes.
                If there is no current computation and `depend()` is called with no arguments, it does nothing and returns false.
                Returns true if the computation is a new dependent of `dependency` rather than an existing one.
               * @locus Client
               * @param {Tracker.Computation} [fromComputation] An optional computation declared to depend on `dependency` instead of the current computation.
               * @returns {Boolean}
               */

              var _proto2 = Dependency.prototype;

              _proto2.depend = function () {
                function depend(computation) {
                  var _this5 = this;

                  if (!computation) {
                    if (!Tracker.active) return false;
                    computation = Tracker.currentComputation;
                  }

                  var id = computation._id;

                  if (!(id in this._dependentsById)) {
                    this._dependentsById[id] = computation;
                    computation.onInvalidate(function () {
                      delete _this5._dependentsById[id];
                    });
                    return true;
                  }

                  return false;
                }

                return depend;
              }(); // http://docs.meteor.com/#dependency_changed

              /**
               * @summary Invalidate all dependent computations immediately and remove them as dependents.
               * @locus Client
               */

              _proto2.changed = function () {
                function changed() {
                  for (var id in meteorBabelHelpers.sanitizeForInObject(this._dependentsById)) {
                    this._dependentsById[id].invalidate();
                  }
                }

                return changed;
              }(); // http://docs.meteor.com/#dependency_hasdependents

              /**
               * @summary True if this Dependency has one or more dependent Computations, which would be invalidated if this Dependency were to change.
               * @locus Client
               * @returns {Boolean}
               */

              _proto2.hasDependents = function () {
                function hasDependents() {
                  for (var id in meteorBabelHelpers.sanitizeForInObject(this._dependentsById)) {
                    return true;
                  }

                  return false;
                }

                return hasDependents;
              }();

              return Dependency;
            }(); // http://docs.meteor.com/#tracker_flush

            /**
             * @summary Process all reactive updates immediately and ensure that all invalidated computations are rerun.
             * @locus Client
             */

            Tracker.flush = function (options) {
              Tracker._runFlush({
                finishSynchronously: true,
                throwFirstError: options && options._throwFirstError
              });
            };
            /**
             * @summary True if we are computing a computation now, either first time or recompute.  This matches Tracker.active unless we are inside Tracker.nonreactive, which nullfies currentComputation even though an enclosing computation may still be running.
             * @locus Client
             * @returns {Boolean}
             */

            Tracker.inFlush = function () {
              return inFlush;
            }; // Run all pending computations and afterFlush callbacks.  If we were not called
            // directly via Tracker.flush, this may return before they're all done to allow
            // the event loop to run a little before continuing.


            Tracker._runFlush = function (options) {
              // XXX What part of the comment below is still true? (We no longer
              // have Spark)
              //
              // Nested flush could plausibly happen if, say, a flush causes
              // DOM mutation, which causes a "blur" event, which runs an
              // app event handler that calls Tracker.flush.  At the moment
              // Spark blocks event handlers during DOM mutation anyway,
              // because the LiveRange tree isn't valid.  And we don't have
              // any useful notion of a nested flush.
              //
              // https://app.asana.com/0/159908330244/385138233856
              if (Tracker.inFlush()) throw new Error("Can't call Tracker.flush while flushing");
              if (inCompute) throw new Error("Can't flush inside Tracker.autorun");
              options = options || {};
              inFlush = true;
              willFlush = true;
              throwFirstError = !!options.throwFirstError;
              var recomputedCount = 0;
              var finishedTry = false;

              try {
                while (pendingComputations.length || afterFlushCallbacks.length) {
                  // recompute all pending computations
                  while (pendingComputations.length) {
                    var comp = pendingComputations.shift();

                    comp._recompute();

                    if (comp._needsRecompute()) {
                      pendingComputations.unshift(comp);
                    }

                    if (!options.finishSynchronously && ++recomputedCount > 1000) {
                      finishedTry = true;
                      return;
                    }
                  }

                  if (afterFlushCallbacks.length) {
                    // call one afterFlush callback, which may
                    // invalidate more computations
                    var func = afterFlushCallbacks.shift();

                    try {
                      func();
                    } catch (e) {
                      _throwOrLog("afterFlush", e);
                    }
                  }
                }

                finishedTry = true;
              } finally {
                if (!finishedTry) {
                  // we're erroring due to throwFirstError being true.
                  inFlush = false; // needed before calling `Tracker.flush()` again
                  // finish flushing

                  Tracker._runFlush({
                    finishSynchronously: options.finishSynchronously,
                    throwFirstError: false
                  });
                }

                willFlush = false;
                inFlush = false;

                if (pendingComputations.length || afterFlushCallbacks.length) {
                  // We're yielding because we ran a bunch of computations and we aren't
                  // required to finish synchronously, so we'd like to give the event loop a
                  // chance. We should flush again soon.
                  if (options.finishSynchronously) {
                    throw new Error("still have more to do?"); // shouldn't happen
                  }

                  setTimeout(requireFlush, 10);
                }
              }
            }; // http://docs.meteor.com/#tracker_autorun
            //
            // Run f(). Record its dependencies. Rerun it whenever the
            // dependencies change.
            //
            // Returns a new Computation, which is also passed to f.
            //
            // Links the computation to the current computation
            // so that it is stopped if the current computation is invalidated.

            /**
             * @callback Tracker.ComputationFunction
             * @param {Tracker.Computation}
             */

            /**
             * @summary Run a function now and rerun it later whenever its dependencies
             * change. Returns a Computation object that can be used to stop or observe the
             * rerunning.
             * @locus Client
             * @param {Tracker.ComputationFunction} runFunc The function to run. It receives
             * one argument: the Computation object that will be returned.
             * @param {Object} [options]
             * @param {Function} options.onError Optional. The function to run when an error
             * happens in the Computation. The only argument it receives is the Error
             * thrown. Defaults to the error being logged to the console.
             * @returns {Tracker.Computation}
             */

            Tracker.autorun = function (f, options) {
              if (typeof f !== 'function') throw new Error('Tracker.autorun requires a function argument');
              options = options || {};
              constructingComputation = true;
              var c = new Tracker.Computation(f, Tracker.currentComputation, options.onError);
              if (Tracker.active) Tracker.onInvalidate(function () {
                c.stop();
              });
              return c;
            }; // http://docs.meteor.com/#tracker_nonreactive
            //
            // Run `f` with no current computation, returning the return value
            // of `f`.  Used to turn off reactivity for the duration of `f`,
            // so that reactive data sources accessed by `f` will not result in any
            // computations being invalidated.

            /**
             * @summary Run a function without tracking dependencies.
             * @locus Client
             * @param {Function} func A function to call immediately.
             */

            Tracker.nonreactive = function (f) {
              var previous = Tracker.currentComputation;
              setCurrentComputation(null);

              try {
                return f();
              } finally {
                setCurrentComputation(previous);
              }
            }; // http://docs.meteor.com/#tracker_oninvalidate

            /**
             * @summary Registers a new [`onInvalidate`](#computation_oninvalidate) callback on the current computation (which must exist), to be called immediately when the current computation is invalidated or stopped.
             * @locus Client
             * @param {Function} callback A callback function that will be invoked as `func(c)`, where `c` is the computation on which the callback is registered.
             */

            Tracker.onInvalidate = function (f) {
              if (!Tracker.active) throw new Error("Tracker.onInvalidate requires a currentComputation");
              Tracker.currentComputation.onInvalidate(f);
            }; // http://docs.meteor.com/#tracker_afterflush

            /**
             * @summary Schedules a function to be called during the next flush, or later in the current flush if one is in progress, after all invalidated computations have been rerun.  The function will be run once and not on subsequent flushes unless `afterFlush` is called again.
             * @locus Client
             * @param {Function} callback A function to call at flush time.
             */

            Tracker.afterFlush = function (f) {
              afterFlushCallbacks.push(f);
              requireFlush();
            };
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  _require("/node_modules/meteor/tracker/tracker.js");

  /* Exports */
  Package._define("tracker", {
    Tracker: Tracker,
    Deps: Deps
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var _exports2;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "tmeasday:check-npm-versions": { "check-npm-versions.js": function (_require, _exports, _module) {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                              //
            // packages/tmeasday_check-npm-versions/check-npm-versions.js                                                   //
            //                                                                                                              //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var module1 = _module;
            module1.export({
              checkNpmVersions: function () {
                return checkNpmVersions;
              }
            });
            var semver;
            module1.watch(_require("semver"), {
              "default": function (v) {
                semver = v;
              }
            }, 0);

            // Returns:
            //   - true      if a version of the package in the range is installed
            //   - false     if no version is installed
            //   - version#  if incompatible version is installed
            var compatibleVersionIsInstalled = function (name, range) {
              try {
                var installedVersion = _require(name + "/package.json").version;

                if (semver.satisfies(installedVersion, range)) {
                  return true;
                } else {
                  return installedVersion;
                }
              } catch (e) {
                // XXX add something to the tool to make this more reliable
                var message = e.toString(); // One message comes out of the install npm package the other from npm directly

                if (message.match("Cannot find module") || message.match("Can't find npm module")) {
                  return false;
                } else {
                  throw e;
                }
              }
            };

            var checkNpmVersions = function (packages, packageName) {
              var failures = {};
              Object.keys(packages).forEach(function (name) {
                var range = packages[name];
                var failure = compatibleVersionIsInstalled(name, range);

                if (failure !== true) {
                  failures[name] = failure;
                }
              });

              if (Object.keys(failures).length === 0) {
                return true;
              }

              var errors = [];
              Object.keys(failures).forEach(function (name) {
                var installed = failures[name];
                var requirement = name + "@" + packages[name];

                if (installed) {
                  errors.push(" - " + name + "@" + installed + " installed, " + requirement + " needed");
                } else {
                  errors.push(" - " + name + "@" + packages[name] + " not installed.");
                }
              });
              var qualifier = packageName ? "(for " + packageName + ") " : '';
              console.warn("WARNING: npm peer requirements " + qualifier + "not installed:\n" + errors.join('\n') + "\n\nRead more about installing npm peer dependencies:\n  http://guide.meteor.com/using-packages.html#peer-npm-dependencies\n");
            };
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "node_modules": { "semver": { "package.json": function (_require3, _exports3) {

                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                              //
                // node_modules/meteor/tmeasday_check-npm-versions/node_modules/semver/package.json                             //
                //                                                                                                              //
                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _exports3.name = "semver";
                _exports3.version = "5.1.0";
                _exports3.main = "semver.js";

                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              }, "semver.js": function (_require4, _exports4, _module2) {

                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //                                                                                                              //
                // node_modules/meteor/tmeasday_check-npm-versions/node_modules/semver/semver.js                                //
                //                                                                                                              //
                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                //
                _exports4 = _module2.exports = SemVer;

                // The debug function is excluded entirely from the minified version.
                /* nomin */var debug;
                /* nomin */if (typeof process === 'object' &&
                /* nomin */process.env &&
                /* nomin */process.env.NODE_DEBUG &&
                /* nomin *//\bsemver\b/i.test(process.env.NODE_DEBUG))
                  /* nomin */debug = function () {
                    /* nomin */var args = Array.prototype.slice.call(arguments, 0);
                    /* nomin */args.unshift('SEMVER');
                    /* nomin */console.log.apply(console, args);
                    /* nomin */
                  };
                  /* nomin */else
                  /* nomin */debug = function () {};

                // Note: this is the semver.org version of the spec that it implements
                // Not necessarily the package version of this code.
                _exports4.SEMVER_SPEC_VERSION = '2.0.0';

                var MAX_LENGTH = 256;
                var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;

                // The actual regexps go on exports.re
                var re = _exports4.re = [];
                var src = _exports4.src = [];
                var R = 0;

                // The following Regular Expressions can be used for tokenizing,
                // validating, and parsing SemVer version strings.

                // ## Numeric Identifier
                // A single `0`, or a non-zero digit followed by zero or more digits.

                var NUMERICIDENTIFIER = R++;
                src[NUMERICIDENTIFIER] = '0|[1-9]\\d*';
                var NUMERICIDENTIFIERLOOSE = R++;
                src[NUMERICIDENTIFIERLOOSE] = '[0-9]+';

                // ## Non-numeric Identifier
                // Zero or more digits, followed by a letter or hyphen, and then zero or
                // more letters, digits, or hyphens.

                var NONNUMERICIDENTIFIER = R++;
                src[NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*';

                // ## Main Version
                // Three dot-separated numeric identifiers.

                var MAINVERSION = R++;
                src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\.' + '(' + src[NUMERICIDENTIFIER] + ')';

                var MAINVERSIONLOOSE = R++;
                src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')';

                // ## Pre-release Version Identifier
                // A numeric identifier, or a non-numeric identifier.

                var PRERELEASEIDENTIFIER = R++;
                src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';

                var PRERELEASEIDENTIFIERLOOSE = R++;
                src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')';

                // ## Pre-release Version
                // Hyphen, followed by one or more dot-separated pre-release version
                // identifiers.

                var PRERELEASE = R++;
                src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\.' + src[PRERELEASEIDENTIFIER] + ')*))';

                var PRERELEASELOOSE = R++;
                src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';

                // ## Build Metadata Identifier
                // Any combination of digits, letters, or hyphens.

                var BUILDIDENTIFIER = R++;
                src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';

                // ## Build Metadata
                // Plus sign, followed by one or more period-separated build metadata
                // identifiers.

                var BUILD = R++;
                src[BUILD] = '(?:\\+(' + src[BUILDIDENTIFIER] + '(?:\\.' + src[BUILDIDENTIFIER] + ')*))';

                // ## Full Version String
                // A main version, followed optionally by a pre-release version and
                // build metadata.

                // Note that the only major, minor, patch, and pre-release sections of
                // the version string are capturing groups.  The build metadata is not a
                // capturing group, because it should not ever be used in version
                // comparison.

                var FULL = R++;
                var FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';

                src[FULL] = '^' + FULLPLAIN + '$';

                // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
                // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
                // common in the npm registry.
                var LOOSEPLAIN = '[v=\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';

                var LOOSE = R++;
                src[LOOSE] = '^' + LOOSEPLAIN + '$';

                var GTLT = R++;
                src[GTLT] = '((?:<|>)?=?)';

                // Something like "2.*" or "1.2.x".
                // Note that "x.x" is a valid xRange identifer, meaning "any version"
                // Only the first item is strictly required.
                var XRANGEIDENTIFIERLOOSE = R++;
                src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\*';
                var XRANGEIDENTIFIER = R++;
                src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\*';

                var XRANGEPLAIN = R++;
                src[XRANGEPLAIN] = '[v=\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';

                var XRANGEPLAINLOOSE = R++;
                src[XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';

                var XRANGE = R++;
                src[XRANGE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAIN] + '$';
                var XRANGELOOSE = R++;
                src[XRANGELOOSE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAINLOOSE] + '$';

                // Tilde ranges.
                // Meaning is "reasonably at or greater than"
                var LONETILDE = R++;
                src[LONETILDE] = '(?:~>?)';

                var TILDETRIM = R++;
                src[TILDETRIM] = '(\\s*)' + src[LONETILDE] + '\\s+';
                re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');
                var tildeTrimReplace = '$1~';

                var TILDE = R++;
                src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';
                var TILDELOOSE = R++;
                src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';

                // Caret ranges.
                // Meaning is "at least and backwards compatible with"
                var LONECARET = R++;
                src[LONECARET] = '(?:\\^)';

                var CARETTRIM = R++;
                src[CARETTRIM] = '(\\s*)' + src[LONECARET] + '\\s+';
                re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');
                var caretTrimReplace = '$1^';

                var CARET = R++;
                src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';
                var CARETLOOSE = R++;
                src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';

                // A simple gt/lt/eq thing, or just "" to indicate "any version"
                var COMPARATORLOOSE = R++;
                src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\s*(' + LOOSEPLAIN + ')$|^$';
                var COMPARATOR = R++;
                src[COMPARATOR] = '^' + src[GTLT] + '\\s*(' + FULLPLAIN + ')$|^$';

                // An expression to strip any whitespace between the gtlt and the thing
                // it modifies, so that `> 1.2.3` ==> `>1.2.3`
                var COMPARATORTRIM = R++;
                src[COMPARATORTRIM] = '(\\s*)' + src[GTLT] + '\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';

                // this one has to use the /g flag
                re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');
                var comparatorTrimReplace = '$1$2$3';

                // Something like `1.2.3 - 1.2.4`
                // Note that these all use the loose form, because they'll be
                // checked against either the strict or loose comparator form
                // later.
                var HYPHENRANGE = R++;
                src[HYPHENRANGE] = '^\\s*(' + src[XRANGEPLAIN] + ')' + '\\s+-\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\s*$';

                var HYPHENRANGELOOSE = R++;
                src[HYPHENRANGELOOSE] = '^\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\s+-\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\s*$';

                // Star ranges basically just allow anything at all.
                var STAR = R++;
                src[STAR] = '(<|>)?=?\\s*\\*';

                // Compile to actual regexp objects.
                // All are flag-free, unless they were created above with a flag.
                for (var i = 0; i < R; i++) {
                  debug(i, src[i]);
                  if (!re[i]) re[i] = new RegExp(src[i]);
                }

                _exports4.parse = parse;
                function parse(version, loose) {
                  if (version instanceof SemVer) return version;

                  if (typeof version !== 'string') return null;

                  if (version.length > MAX_LENGTH) return null;

                  var r = loose ? re[LOOSE] : re[FULL];
                  if (!r.test(version)) return null;

                  try {
                    return new SemVer(version, loose);
                  } catch (er) {
                    return null;
                  }
                }

                _exports4.valid = valid;
                function valid(version, loose) {
                  var v = parse(version, loose);
                  return v ? v.version : null;
                }

                _exports4.clean = clean;
                function clean(version, loose) {
                  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);
                  return s ? s.version : null;
                }

                _exports4.SemVer = SemVer;

                function SemVer(version, loose) {
                  if (version instanceof SemVer) {
                    if (version.loose === loose) return version;else version = version.version;
                  } else if (typeof version !== 'string') {
                    throw new TypeError('Invalid Version: ' + version);
                  }

                  if (version.length > MAX_LENGTH) throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');

                  if (!(this instanceof SemVer)) return new SemVer(version, loose);

                  debug('SemVer', version, loose);
                  this.loose = loose;
                  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);

                  if (!m) throw new TypeError('Invalid Version: ' + version);

                  this.raw = version;

                  // these are actually numbers
                  this.major = +m[1];
                  this.minor = +m[2];
                  this.patch = +m[3];

                  if (this.major > MAX_SAFE_INTEGER || this.major < 0) throw new TypeError('Invalid major version');

                  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) throw new TypeError('Invalid minor version');

                  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) throw new TypeError('Invalid patch version');

                  // numberify any prerelease numeric ids
                  if (!m[4]) this.prerelease = [];else this.prerelease = m[4].split('.').map(function (id) {
                    if (/^[0-9]+$/.test(id)) {
                      var num = +id;
                      if (num >= 0 && num < MAX_SAFE_INTEGER) return num;
                    }
                    return id;
                  });

                  this.build = m[5] ? m[5].split('.') : [];
                  this.format();
                }

                SemVer.prototype.format = function () {
                  this.version = this.major + '.' + this.minor + '.' + this.patch;
                  if (this.prerelease.length) this.version += '-' + this.prerelease.join('.');
                  return this.version;
                };

                SemVer.prototype.toString = function () {
                  return this.version;
                };

                SemVer.prototype.compare = function (other) {
                  debug('SemVer.compare', this.version, this.loose, other);
                  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);

                  return this.compareMain(other) || this.comparePre(other);
                };

                SemVer.prototype.compareMain = function (other) {
                  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);

                  return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);
                };

                SemVer.prototype.comparePre = function (other) {
                  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);

                  // NOT having a prerelease is > having one
                  if (this.prerelease.length && !other.prerelease.length) return -1;else if (!this.prerelease.length && other.prerelease.length) return 1;else if (!this.prerelease.length && !other.prerelease.length) return 0;

                  var i = 0;
                  do {
                    var a = this.prerelease[i];
                    var b = other.prerelease[i];
                    debug('prerelease compare', i, a, b);
                    if (a === undefined && b === undefined) return 0;else if (b === undefined) return 1;else if (a === undefined) return -1;else if (a === b) continue;else return compareIdentifiers(a, b);
                  } while (++i);
                };

                // preminor will bump the version up to the next minor release, and immediately
                // down to pre-release. premajor and prepatch work the same way.
                SemVer.prototype.inc = function (release, identifier) {
                  switch (release) {
                    case 'premajor':
                      this.prerelease.length = 0;
                      this.patch = 0;
                      this.minor = 0;
                      this.major++;
                      this.inc('pre', identifier);
                      break;
                    case 'preminor':
                      this.prerelease.length = 0;
                      this.patch = 0;
                      this.minor++;
                      this.inc('pre', identifier);
                      break;
                    case 'prepatch':
                      // If this is already a prerelease, it will bump to the next version
                      // drop any prereleases that might already exist, since they are not
                      // relevant at this point.
                      this.prerelease.length = 0;
                      this.inc('patch', identifier);
                      this.inc('pre', identifier);
                      break;
                    // If the input is a non-prerelease version, this acts the same as
                    // prepatch.
                    case 'prerelease':
                      if (this.prerelease.length === 0) this.inc('patch', identifier);
                      this.inc('pre', identifier);
                      break;

                    case 'major':
                      // If this is a pre-major version, bump up to the same major version.
                      // Otherwise increment major.
                      // 1.0.0-5 bumps to 1.0.0
                      // 1.1.0 bumps to 2.0.0
                      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) this.major++;
                      this.minor = 0;
                      this.patch = 0;
                      this.prerelease = [];
                      break;
                    case 'minor':
                      // If this is a pre-minor version, bump up to the same minor version.
                      // Otherwise increment minor.
                      // 1.2.0-5 bumps to 1.2.0
                      // 1.2.1 bumps to 1.3.0
                      if (this.patch !== 0 || this.prerelease.length === 0) this.minor++;
                      this.patch = 0;
                      this.prerelease = [];
                      break;
                    case 'patch':
                      // If this is not a pre-release version, it will increment the patch.
                      // If it is a pre-release it will bump up to the same patch version.
                      // 1.2.0-5 patches to 1.2.0
                      // 1.2.0 patches to 1.2.1
                      if (this.prerelease.length === 0) this.patch++;
                      this.prerelease = [];
                      break;
                    // This probably shouldn't be used publicly.
                    // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.
                    case 'pre':
                      if (this.prerelease.length === 0) this.prerelease = [0];else {
                        var i = this.prerelease.length;
                        while (--i >= 0) {
                          if (typeof this.prerelease[i] === 'number') {
                            this.prerelease[i]++;
                            i = -2;
                          }
                        }
                        if (i === -1) // didn't increment anything
                          this.prerelease.push(0);
                      }
                      if (identifier) {
                        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
                        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
                        if (this.prerelease[0] === identifier) {
                          if (isNaN(this.prerelease[1])) this.prerelease = [identifier, 0];
                        } else this.prerelease = [identifier, 0];
                      }
                      break;

                    default:
                      throw new Error('invalid increment argument: ' + release);
                  }
                  this.format();
                  this.raw = this.version;
                  return this;
                };

                _exports4.inc = inc;
                function inc(version, release, loose, identifier) {
                  if (typeof loose === 'string') {
                    identifier = loose;
                    loose = undefined;
                  }

                  try {
                    return new SemVer(version, loose).inc(release, identifier).version;
                  } catch (er) {
                    return null;
                  }
                }

                _exports4.diff = diff;
                function diff(version1, version2) {
                  if (eq(version1, version2)) {
                    return null;
                  } else {
                    var v1 = parse(version1);
                    var v2 = parse(version2);
                    if (v1.prerelease.length || v2.prerelease.length) {
                      for (var key in v1) {
                        if (key === 'major' || key === 'minor' || key === 'patch') {
                          if (v1[key] !== v2[key]) {
                            return 'pre' + key;
                          }
                        }
                      }
                      return 'prerelease';
                    }
                    for (var key in v1) {
                      if (key === 'major' || key === 'minor' || key === 'patch') {
                        if (v1[key] !== v2[key]) {
                          return key;
                        }
                      }
                    }
                  }
                }

                _exports4.compareIdentifiers = compareIdentifiers;

                var numeric = /^[0-9]+$/;
                function compareIdentifiers(a, b) {
                  var anum = numeric.test(a);
                  var bnum = numeric.test(b);

                  if (anum && bnum) {
                    a = +a;
                    b = +b;
                  }

                  return anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : a > b ? 1 : 0;
                }

                _exports4.rcompareIdentifiers = rcompareIdentifiers;
                function rcompareIdentifiers(a, b) {
                  return compareIdentifiers(b, a);
                }

                _exports4.major = major;
                function major(a, loose) {
                  return new SemVer(a, loose).major;
                }

                _exports4.minor = minor;
                function minor(a, loose) {
                  return new SemVer(a, loose).minor;
                }

                _exports4.patch = patch;
                function patch(a, loose) {
                  return new SemVer(a, loose).patch;
                }

                _exports4.compare = compare;
                function compare(a, b, loose) {
                  return new SemVer(a, loose).compare(b);
                }

                _exports4.compareLoose = compareLoose;
                function compareLoose(a, b) {
                  return compare(a, b, true);
                }

                _exports4.rcompare = rcompare;
                function rcompare(a, b, loose) {
                  return compare(b, a, loose);
                }

                _exports4.sort = sort;
                function sort(list, loose) {
                  return list.sort(function (a, b) {
                    return _exports4.compare(a, b, loose);
                  });
                }

                _exports4.rsort = rsort;
                function rsort(list, loose) {
                  return list.sort(function (a, b) {
                    return _exports4.rcompare(a, b, loose);
                  });
                }

                _exports4.gt = gt;
                function gt(a, b, loose) {
                  return compare(a, b, loose) > 0;
                }

                _exports4.lt = lt;
                function lt(a, b, loose) {
                  return compare(a, b, loose) < 0;
                }

                _exports4.eq = eq;
                function eq(a, b, loose) {
                  return compare(a, b, loose) === 0;
                }

                _exports4.neq = neq;
                function neq(a, b, loose) {
                  return compare(a, b, loose) !== 0;
                }

                _exports4.gte = gte;
                function gte(a, b, loose) {
                  return compare(a, b, loose) >= 0;
                }

                _exports4.lte = lte;
                function lte(a, b, loose) {
                  return compare(a, b, loose) <= 0;
                }

                _exports4.cmp = cmp;
                function cmp(a, op, b, loose) {
                  var ret;
                  switch (op) {
                    case '===':
                      if (typeof a === 'object') a = a.version;
                      if (typeof b === 'object') b = b.version;
                      ret = a === b;
                      break;
                    case '!==':
                      if (typeof a === 'object') a = a.version;
                      if (typeof b === 'object') b = b.version;
                      ret = a !== b;
                      break;
                    case '':case '=':case '==':
                      ret = eq(a, b, loose);break;
                    case '!=':
                      ret = neq(a, b, loose);break;
                    case '>':
                      ret = gt(a, b, loose);break;
                    case '>=':
                      ret = gte(a, b, loose);break;
                    case '<':
                      ret = lt(a, b, loose);break;
                    case '<=':
                      ret = lte(a, b, loose);break;
                    default:
                      throw new TypeError('Invalid operator: ' + op);
                  }
                  return ret;
                }

                _exports4.Comparator = Comparator;
                function Comparator(comp, loose) {
                  if (comp instanceof Comparator) {
                    if (comp.loose === loose) return comp;else comp = comp.value;
                  }

                  if (!(this instanceof Comparator)) return new Comparator(comp, loose);

                  debug('comparator', comp, loose);
                  this.loose = loose;
                  this.parse(comp);

                  if (this.semver === ANY) this.value = '';else this.value = this.operator + this.semver.version;

                  debug('comp', this);
                }

                var ANY = {};
                Comparator.prototype.parse = function (comp) {
                  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
                  var m = comp.match(r);

                  if (!m) throw new TypeError('Invalid comparator: ' + comp);

                  this.operator = m[1];
                  if (this.operator === '=') this.operator = '';

                  // if it literally is just '>' or '' then allow anything.
                  if (!m[2]) this.semver = ANY;else this.semver = new SemVer(m[2], this.loose);
                };

                Comparator.prototype.toString = function () {
                  return this.value;
                };

                Comparator.prototype.test = function (version) {
                  debug('Comparator.test', version, this.loose);

                  if (this.semver === ANY) return true;

                  if (typeof version === 'string') version = new SemVer(version, this.loose);

                  return cmp(version, this.operator, this.semver, this.loose);
                };

                _exports4.Range = Range;
                function Range(range, loose) {
                  if (range instanceof Range && range.loose === loose) return range;

                  if (!(this instanceof Range)) return new Range(range, loose);

                  this.loose = loose;

                  // First, split based on boolean or ||
                  this.raw = range;
                  this.set = range.split(/\s*\|\|\s*/).map(function (range) {
                    return this.parseRange(range.trim());
                  }, this).filter(function (c) {
                    // throw out any that are not relevant for whatever reason
                    return c.length;
                  });

                  if (!this.set.length) {
                    throw new TypeError('Invalid SemVer Range: ' + range);
                  }

                  this.format();
                }

                Range.prototype.format = function () {
                  this.range = this.set.map(function (comps) {
                    return comps.join(' ').trim();
                  }).join('||').trim();
                  return this.range;
                };

                Range.prototype.toString = function () {
                  return this.range;
                };

                Range.prototype.parseRange = function (range) {
                  var loose = this.loose;
                  range = range.trim();
                  debug('range', range, loose);
                  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
                  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];
                  range = range.replace(hr, hyphenReplace);
                  debug('hyphen replace', range);
                  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
                  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);
                  debug('comparator trim', range, re[COMPARATORTRIM]);

                  // `~ 1.2.3` => `~1.2.3`
                  range = range.replace(re[TILDETRIM], tildeTrimReplace);

                  // `^ 1.2.3` => `^1.2.3`
                  range = range.replace(re[CARETTRIM], caretTrimReplace);

                  // normalize spaces
                  range = range.split(/\s+/).join(' ');

                  // At this point, the range is completely trimmed and
                  // ready to be split into comparators.

                  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
                  var set = range.split(' ').map(function (comp) {
                    return parseComparator(comp, loose);
                  }).join(' ').split(/\s+/);
                  if (this.loose) {
                    // in loose mode, throw out any that are not valid comparators
                    set = set.filter(function (comp) {
                      return !!comp.match(compRe);
                    });
                  }
                  set = set.map(function (comp) {
                    return new Comparator(comp, loose);
                  });

                  return set;
                };

                // Mostly just for testing and legacy API reasons
                _exports4.toComparators = toComparators;
                function toComparators(range, loose) {
                  return new Range(range, loose).set.map(function (comp) {
                    return comp.map(function (c) {
                      return c.value;
                    }).join(' ').trim().split(' ');
                  });
                }

                // comprised of xranges, tildes, stars, and gtlt's at this point.
                // already replaced the hyphen ranges
                // turn into a set of JUST comparators.
                function parseComparator(comp, loose) {
                  debug('comp', comp);
                  comp = replaceCarets(comp, loose);
                  debug('caret', comp);
                  comp = replaceTildes(comp, loose);
                  debug('tildes', comp);
                  comp = replaceXRanges(comp, loose);
                  debug('xrange', comp);
                  comp = replaceStars(comp, loose);
                  debug('stars', comp);
                  return comp;
                }

                function isX(id) {
                  return !id || id.toLowerCase() === 'x' || id === '*';
                }

                // ~, ~> --> * (any, kinda silly)
                // ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
                // ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
                // ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
                // ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
                // ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0
                function replaceTildes(comp, loose) {
                  return comp.trim().split(/\s+/).map(function (comp) {
                    return replaceTilde(comp, loose);
                  }).join(' ');
                }

                function replaceTilde(comp, loose) {
                  var r = loose ? re[TILDELOOSE] : re[TILDE];
                  return comp.replace(r, function (_, M, m, p, pr) {
                    debug('tilde', comp, _, M, m, p, pr);
                    var ret;

                    if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p))
                      // ~1.2 == >=1.2.0- <1.3.0-
                      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else if (pr) {
                      debug('replaceTilde pr', pr);
                      if (pr.charAt(0) !== '-') pr = '-' + pr;
                      ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';
                    } else
                      // ~1.2.3 == >=1.2.3 <1.3.0
                      ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';

                    debug('tilde return', ret);
                    return ret;
                  });
                }

                // ^ --> * (any, kinda silly)
                // ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
                // ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
                // ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
                // ^1.2.3 --> >=1.2.3 <2.0.0
                // ^1.2.0 --> >=1.2.0 <2.0.0
                function replaceCarets(comp, loose) {
                  return comp.trim().split(/\s+/).map(function (comp) {
                    return replaceCaret(comp, loose);
                  }).join(' ');
                }

                function replaceCaret(comp, loose) {
                  debug('caret', comp, loose);
                  var r = loose ? re[CARETLOOSE] : re[CARET];
                  return comp.replace(r, function (_, M, m, p, pr) {
                    debug('caret', comp, _, M, m, p, pr);
                    var ret;

                    if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p)) {
                      if (M === '0') ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';
                    } else if (pr) {
                      debug('replaceCaret pr', pr);
                      if (pr.charAt(0) !== '-') pr = '-' + pr;
                      if (M === '0') {
                        if (m === '0') ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';
                      } else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + (+M + 1) + '.0.0';
                    } else {
                      debug('no pr');
                      if (M === '0') {
                        if (m === '0') ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';
                      } else ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';
                    }

                    debug('caret return', ret);
                    return ret;
                  });
                }

                function replaceXRanges(comp, loose) {
                  debug('replaceXRanges', comp, loose);
                  return comp.split(/\s+/).map(function (comp) {
                    return replaceXRange(comp, loose);
                  }).join(' ');
                }

                function replaceXRange(comp, loose) {
                  comp = comp.trim();
                  var r = loose ? re[XRANGELOOSE] : re[XRANGE];
                  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {
                    debug('xRange', comp, ret, gtlt, M, m, p, pr);
                    var xM = isX(M);
                    var xm = xM || isX(m);
                    var xp = xm || isX(p);
                    var anyX = xp;

                    if (gtlt === '=' && anyX) gtlt = '';

                    if (xM) {
                      if (gtlt === '>' || gtlt === '<') {
                        // nothing is allowed
                        ret = '<0.0.0';
                      } else {
                        // nothing is forbidden
                        ret = '*';
                      }
                    } else if (gtlt && anyX) {
                      // replace X with 0
                      if (xm) m = 0;
                      if (xp) p = 0;

                      if (gtlt === '>') {
                        // >1 => >=2.0.0
                        // >1.2 => >=1.3.0
                        // >1.2.3 => >= 1.2.4
                        gtlt = '>=';
                        if (xm) {
                          M = +M + 1;
                          m = 0;
                          p = 0;
                        } else if (xp) {
                          m = +m + 1;
                          p = 0;
                        }
                      } else if (gtlt === '<=') {
                        // <=0.7.x is actually <0.8.0, since any 0.7.x should
                        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
                        gtlt = '<';
                        if (xm) M = +M + 1;else m = +m + 1;
                      }

                      ret = gtlt + M + '.' + m + '.' + p;
                    } else if (xm) {
                      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
                    } else if (xp) {
                      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
                    }

                    debug('xRange return', ret);

                    return ret;
                  });
                }

                // Because * is AND-ed with everything else in the comparator,
                // and '' means "any version", just remove the *s entirely.
                function replaceStars(comp, loose) {
                  debug('replaceStars', comp, loose);
                  // Looseness is ignored here.  star is always as loose as it gets!
                  return comp.trim().replace(re[STAR], '');
                }

                // This function is passed to string.replace(re[HYPHENRANGE])
                // M, m, patch, prerelease, build
                // 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
                // 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
                // 1.2 - 3.4 => >=1.2.0 <3.5.0
                function hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {

                  if (isX(fM)) from = '';else if (isX(fm)) from = '>=' + fM + '.0.0';else if (isX(fp)) from = '>=' + fM + '.' + fm + '.0';else from = '>=' + from;

                  if (isX(tM)) to = '';else if (isX(tm)) to = '<' + (+tM + 1) + '.0.0';else if (isX(tp)) to = '<' + tM + '.' + (+tm + 1) + '.0';else if (tpr) to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;else to = '<=' + to;

                  return (from + ' ' + to).trim();
                }

                // if ANY of the sets match ALL of its comparators, then pass
                Range.prototype.test = function (version) {
                  if (!version) return false;

                  if (typeof version === 'string') version = new SemVer(version, this.loose);

                  for (var i = 0; i < this.set.length; i++) {
                    if (testSet(this.set[i], version)) return true;
                  }
                  return false;
                };

                function testSet(set, version) {
                  for (var i = 0; i < set.length; i++) {
                    if (!set[i].test(version)) return false;
                  }

                  if (version.prerelease.length) {
                    // Find the set of versions that are allowed to have prereleases
                    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
                    // That should allow `1.2.3-pr.2` to pass.
                    // However, `1.2.4-alpha.notready` should NOT be allowed,
                    // even though it's within the range set by the comparators.
                    for (var i = 0; i < set.length; i++) {
                      debug(set[i].semver);
                      if (set[i].semver === ANY) continue;

                      if (set[i].semver.prerelease.length > 0) {
                        var allowed = set[i].semver;
                        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) return true;
                      }
                    }

                    // Version has a -pre, but it's not one of the ones we like.
                    return false;
                  }

                  return true;
                }

                _exports4.satisfies = satisfies;
                function satisfies(version, range, loose) {
                  try {
                    range = new Range(range, loose);
                  } catch (er) {
                    return false;
                  }
                  return range.test(version);
                }

                _exports4.maxSatisfying = maxSatisfying;
                function maxSatisfying(versions, range, loose) {
                  return versions.filter(function (version) {
                    return satisfies(version, range, loose);
                  }).sort(function (a, b) {
                    return rcompare(a, b, loose);
                  })[0] || null;
                }

                _exports4.validRange = validRange;
                function validRange(range, loose) {
                  try {
                    // Return '*' instead of '' so that truthiness works.
                    // This will throw if it's invalid anyway
                    return new Range(range, loose).range || '*';
                  } catch (er) {
                    return null;
                  }
                }

                // Determine if version is less than all the versions possible in the range
                _exports4.ltr = ltr;
                function ltr(version, range, loose) {
                  return outside(version, range, '<', loose);
                }

                // Determine if version is greater than all the versions possible in the range.
                _exports4.gtr = gtr;
                function gtr(version, range, loose) {
                  return outside(version, range, '>', loose);
                }

                _exports4.outside = outside;
                function outside(version, range, hilo, loose) {
                  version = new SemVer(version, loose);
                  range = new Range(range, loose);

                  var gtfn, ltefn, ltfn, comp, ecomp;
                  switch (hilo) {
                    case '>':
                      gtfn = gt;
                      ltefn = lte;
                      ltfn = lt;
                      comp = '>';
                      ecomp = '>=';
                      break;
                    case '<':
                      gtfn = lt;
                      ltefn = gte;
                      ltfn = gt;
                      comp = '<';
                      ecomp = '<=';
                      break;
                    default:
                      throw new TypeError('Must provide a hilo val of "<" or ">"');
                  }

                  // If it satisifes the range it is not outside
                  if (satisfies(version, range, loose)) {
                    return false;
                  }

                  // From now on, variable terms are as if we're in "gtr" mode.
                  // but note that everything is flipped for the "ltr" function.

                  for (var i = 0; i < range.set.length; ++i) {
                    var comparators = range.set[i];

                    var high = null;
                    var low = null;

                    comparators.forEach(function (comparator) {
                      if (comparator.semver === ANY) {
                        comparator = new Comparator('>=0.0.0');
                      }
                      high = high || comparator;
                      low = low || comparator;
                      if (gtfn(comparator.semver, high.semver, loose)) {
                        high = comparator;
                      } else if (ltfn(comparator.semver, low.semver, loose)) {
                        low = comparator;
                      }
                    });

                    // If the edge version comparator has a operator then our version
                    // isn't outside it
                    if (high.operator === comp || high.operator === ecomp) {
                      return false;
                    }

                    // If the lowest version comparator has an operator and our version
                    // is less than it then it isn't higher than the range
                    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {
                      return false;
                    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
                      return false;
                    }
                  }
                  return true;
                }

                //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              } } } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/tmeasday:check-npm-versions/check-npm-versions.js");

  /* Exports */
  Package._define("tmeasday:check-npm-versions", _exports2);
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var Tracker = Package.tracker.Tracker;
  var Deps = Package.tracker.Deps;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var ReactMeteorData;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "react-meteor-data": { "react-meteor-data.jsx": function (_require, _exports, _module) {

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                           //
            // packages/react-meteor-data/react-meteor-data.jsx                                                          //
            //                                                                                                           //
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var checkNpmVersions;
            _module.watch(_require("meteor/tmeasday:check-npm-versions"), {
              checkNpmVersions: function (v) {
                checkNpmVersions = v;
              }
            }, 0);
            _module.watch(_require("./createContainer.jsx"), {
              "default": function (v) {
                _exports.createContainer = v;
              }
            }, 1);
            _module.watch(_require("./ReactMeteorData.jsx"), {
              "default": function (v) {
                _exports.withTracker = v;
              }
            }, 2);
            _module.watch(_require("./ReactMeteorData.jsx"), {
              ReactMeteorData: function (v) {
                _exports.ReactMeteorData = v;
              }
            }, 3);
            checkNpmVersions({
              react: '15.3 - 16'
            }, 'react-meteor-data');
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "ReactMeteorData.jsx": function (_require3, _exports3, _module2) {

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                           //
            // packages/react-meteor-data/ReactMeteorData.jsx                                                            //
            //                                                                                                           //
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require3("@babel/runtime/helpers/interopRequireDefault");

            var _extends2 = _interopRequireDefault(_require3("@babel/runtime/helpers/extends"));

            var _inheritsLoose2 = _interopRequireDefault(_require3("@babel/runtime/helpers/inheritsLoose"));

            var _typeof2 = _interopRequireDefault(_require3("@babel/runtime/helpers/typeof"));

            _module2.export({
              ReactMeteorData: function () {
                return ReactMeteorData;
              },
              "default": function () {
                return connect;
              }
            });
            var React;
            _module2.watch(__webpack_require__(0), {
              "default": function (v) {
                React = v;
              }
            }, 0);
            var Meteor;
            _module2.watch(_require3("meteor/meteor"), {
              Meteor: function (v) {
                Meteor = v;
              }
            }, 1);
            var Tracker;
            _module2.watch(_require3("meteor/tracker"), {
              Tracker: function (v) {
                Tracker = v;
              }
            }, 2);

            // A class to keep the state and utility methods needed to manage
            // the Meteor data for a component.
            var MeteorDataManager =
            /*#__PURE__*/
            function () {
              function MeteorDataManager(component) {
                this.component = component;
                this.computation = null;
                this.oldData = null;
              }

              var _proto = MeteorDataManager.prototype;

              _proto.dispose = function () {
                function dispose() {
                  if (this.computation) {
                    this.computation.stop();
                    this.computation = null;
                  }
                }

                return dispose;
              }();

              _proto.calculateData = function () {
                function calculateData() {
                  var component = this.component;

                  if (!component.getMeteorData) {
                    return null;
                  } // When rendering on the server, we don't want to use the Tracker.
                  // We only do the first rendering on the server so we can get the data right away


                  if (Meteor.isServer) {
                    return component.getMeteorData();
                  }

                  if (this.computation) {
                    this.computation.stop();
                    this.computation = null;
                  }

                  var data; // Use Tracker.nonreactive in case we are inside a Tracker Computation.
                  // This can happen if someone calls `ReactDOM.render` inside a Computation.
                  // In that case, we want to opt out of the normal behavior of nested
                  // Computations, where if the outer one is invalidated or stopped,
                  // it stops the inner one.

                  this.computation = Tracker.nonreactive(function () {
                    return Tracker.autorun(function (c) {
                      if (c.firstRun) {
                        var savedSetState = component.setState;

                        try {
                          component.setState = function () {
                            throw new Error('Can\'t call `setState` inside `getMeteorData` as this could ' + 'cause an endless loop. To respond to Meteor data changing, ' + 'consider making this component a \"wrapper component\" that ' + 'only fetches data and passes it in as props to a child ' + 'component. Then you can use `componentWillReceiveProps` in ' + 'that child component.');
                          };

                          data = component.getMeteorData();
                        } finally {
                          component.setState = savedSetState;
                        }
                      } else {
                        // Stop this computation instead of using the re-run.
                        // We use a brand-new autorun for each call to getMeteorData
                        // to capture dependencies on any reactive data sources that
                        // are accessed.  The reason we can't use a single autorun
                        // for the lifetime of the component is that Tracker only
                        // re-runs autoruns at flush time, while we need to be able to
                        // re-call getMeteorData synchronously whenever we want, e.g.
                        // from componentWillUpdate.
                        c.stop(); // Calling forceUpdate() triggers componentWillUpdate which
                        // recalculates getMeteorData() and re-renders the component.

                        component.forceUpdate();
                      }
                    });
                  });

                  if (Package.mongo && Package.mongo.Mongo) {
                    Object.keys(data).forEach(function (key) {
                      if (data[key] instanceof Package.mongo.Mongo.Cursor) {
                        console.warn('Warning: you are returning a Mongo cursor from getMeteorData. ' + 'This value will not be reactive. You probably want to call ' + '`.fetch()` on the cursor before returning it.');
                      }
                    });
                  }

                  return data;
                }

                return calculateData;
              }();

              _proto.updateData = function () {
                function updateData(newData) {
                  var component = this.component;
                  var oldData = this.oldData;

                  if (!(newData && (0, _typeof2.default)(newData) === 'object')) {
                    throw new Error('Expected object returned from getMeteorData');
                  } // update componentData in place based on newData


                  for (var key in meteorBabelHelpers.sanitizeForInObject(newData)) {
                    component.data[key] = newData[key];
                  } // if there is oldData (which is every time this method is called
                  // except the first), delete keys in newData that aren't in
                  // oldData.  don't interfere with other keys, in case we are
                  // co-existing with something else that writes to a component's
                  // this.data.


                  if (oldData) {
                    for (var _key in meteorBabelHelpers.sanitizeForInObject(oldData)) {
                      if (!(_key in newData)) {
                        delete component.data[_key];
                      }
                    }
                  }

                  this.oldData = newData;
                }

                return updateData;
              }();

              return MeteorDataManager;
            }();

            var ReactMeteorData = {
              componentWillMount: function () {
                this.data = {};
                this._meteorDataManager = new MeteorDataManager(this);

                var newData = this._meteorDataManager.calculateData();

                this._meteorDataManager.updateData(newData);
              },
              componentWillUpdate: function (nextProps, nextState) {
                var saveProps = this.props;
                var saveState = this.state;
                var newData;

                try {
                  // Temporarily assign this.state and this.props,
                  // so that they are seen by getMeteorData!
                  // This is a simulation of how the proposed Observe API
                  // for React will work, which calls observe() after
                  // componentWillUpdate and after props and state are
                  // updated, but before render() is called.
                  // See https://github.com/facebook/react/issues/3398.
                  this.props = nextProps;
                  this.state = nextState;
                  newData = this._meteorDataManager.calculateData();
                } finally {
                  this.props = saveProps;
                  this.state = saveState;
                }

                this._meteorDataManager.updateData(newData);
              },
              componentWillUnmount: function () {
                this._meteorDataManager.dispose();
              }
            };

            var ReactComponent =
            /*#__PURE__*/
            function (_React$Component) {
              (0, _inheritsLoose2.default)(ReactComponent, _React$Component);

              function ReactComponent() {
                return _React$Component.apply(this, arguments) || this;
              }

              return ReactComponent;
            }(React.Component);

            Object.assign(ReactComponent.prototype, ReactMeteorData);

            var ReactPureComponent =
            /*#__PURE__*/
            function (_React$PureComponent) {
              (0, _inheritsLoose2.default)(ReactPureComponent, _React$PureComponent);

              function ReactPureComponent() {
                return _React$PureComponent.apply(this, arguments) || this;
              }

              return ReactPureComponent;
            }(React.PureComponent);

            Object.assign(ReactPureComponent.prototype, ReactMeteorData);

            function connect(options) {
              var expandedOptions = options;

              if (typeof options === 'function') {
                expandedOptions = {
                  getMeteorData: options
                };
              }

              var _expandedOptions = expandedOptions,
                  _getMeteorData = _expandedOptions.getMeteorData,
                  _expandedOptions$pure = _expandedOptions.pure,
                  pure = _expandedOptions$pure === void 0 ? true : _expandedOptions$pure;
              var BaseComponent = pure ? ReactPureComponent : ReactComponent;
              return function (WrappedComponent) {
                return (
                  /*#__PURE__*/
                  function (_BaseComponent) {
                    (0, _inheritsLoose2.default)(ReactMeteorDataComponent, _BaseComponent);

                    function ReactMeteorDataComponent() {
                      return _BaseComponent.apply(this, arguments) || this;
                    }

                    var _proto2 = ReactMeteorDataComponent.prototype;

                    _proto2.getMeteorData = function () {
                      function getMeteorData() {
                        return _getMeteorData(this.props);
                      }

                      return getMeteorData;
                    }();

                    _proto2.render = function () {
                      function render() {
                        return React.createElement(WrappedComponent, (0, _extends2.default)({}, this.props, this.data));
                      }

                      return render;
                    }();

                    return ReactMeteorDataComponent;
                  }(BaseComponent)
                );
              };
            }
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "createContainer.jsx": function (_require4, _exports4, _module3) {

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                           //
            // packages/react-meteor-data/createContainer.jsx                                                            //
            //                                                                                                           //
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module3.export({
              "default": function () {
                return createContainer;
              }
            });
            var Meteor;
            _module3.watch(_require4("meteor/meteor"), {
              Meteor: function (v) {
                Meteor = v;
              }
            }, 0);
            var React;
            _module3.watch(__webpack_require__(0), {
              "default": function (v) {
                React = v;
              }
            }, 1);
            var connect;
            _module3.watch(_require4("./ReactMeteorData.jsx"), {
              "default": function (v) {
                connect = v;
              }
            }, 2);
            var hasDisplayedWarning = false;

            function createContainer(options, Component) {
              if (!hasDisplayedWarning && Meteor.isDevelopment) {
                console.warn('Warning: createContainer was deprecated in react-meteor-data@0.2.13. Use withTracker instead.\n' + 'https://github.com/meteor/react-packages/tree/devel/packages/react-meteor-data#usage');
                hasDisplayedWarning = true;
              }

              return connect(options)(Component);
            }
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json", ".jsx"]
  });
  var _exports2 = _require2("/node_modules/meteor/react-meteor-data/react-meteor-data.jsx");

  /* Exports */
  Package._define("react-meteor-data", _exports2, {
    ReactMeteorData: ReactMeteorData
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Package-scope variables */
  var _exports, _;

  (function () {

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                       //
    // packages/underscore/pre.js                                                                            //
    //                                                                                                       //
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Define an object named exports. This will cause underscore.js to put `_` as a
    // field on it, instead of in the global namespace.  See also post.js.
    _exports = {};

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                       //
    // packages/underscore/underscore.js                                                                     //
    //                                                                                                       //
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    //     Underscore.js 1.5.2
    //     http://underscorejs.org
    //     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
    //     Underscore may be freely distributed under the MIT license.

    (function () {

      // Baseline setup
      // --------------

      // Establish the root object, `window` in the browser, or `exports` on the server.
      var root = this;

      // Save the previous value of the `_` variable.
      var previousUnderscore = root._;

      // Establish the object that gets returned to break out of a loop iteration.
      var breaker = {};

      // Save bytes in the minified (but not gzipped) version:
      var ArrayProto = Array.prototype,
          ObjProto = Object.prototype,
          FuncProto = Function.prototype;

      // Create quick reference variables for speed access to core prototypes.
      var push = ArrayProto.push,
          slice = ArrayProto.slice,
          concat = ArrayProto.concat,
          toString = ObjProto.toString,
          hasOwnProperty = ObjProto.hasOwnProperty;

      // All **ECMAScript 5** native function implementations that we hope to use
      // are declared here.
      var nativeForEach = ArrayProto.forEach,
          nativeMap = ArrayProto.map,
          nativeReduce = ArrayProto.reduce,
          nativeReduceRight = ArrayProto.reduceRight,
          nativeFilter = ArrayProto.filter,
          nativeEvery = ArrayProto.every,
          nativeSome = ArrayProto.some,
          nativeIndexOf = ArrayProto.indexOf,
          nativeLastIndexOf = ArrayProto.lastIndexOf,
          nativeIsArray = Array.isArray,
          nativeKeys = Object.keys,
          nativeBind = FuncProto.bind;

      // Create a safe reference to the Underscore object for use below.
      var _ = function (obj) {
        if (obj instanceof _) return obj;
        if (!(this instanceof _)) return new _(obj);
        this._wrapped = obj;
      };

      // Export the Underscore object for **Node.js**, with
      // backwards-compatibility for the old `require()` API. If we're in
      // the browser, add `_` as a global object via a string identifier,
      // for Closure Compiler "advanced" mode.
      if (typeof _exports !== 'undefined') {
        if (typeof module !== 'undefined' && module.exports) {
          _exports = module.exports = _;
        }
        _exports._ = _;
      } else {
        root._ = _;
      }

      // Current version.
      _.VERSION = '1.5.2';

      // Collection Functions
      // --------------------

      // METEOR CHANGE: Define _isArguments instead of depending on
      // _.isArguments which is defined using each. In looksLikeArray
      // (which each depends on), we then use _isArguments instead of
      // _.isArguments.
      var _isArguments = function (obj) {
        return toString.call(obj) === '[object Arguments]';
      };
      // Define a fallback version of the method in browsers (ahem, IE), where
      // there isn't any inspectable "Arguments" type.
      if (!_isArguments(arguments)) {
        _isArguments = function (obj) {
          return !!(obj && hasOwnProperty.call(obj, 'callee') && typeof obj.callee === 'function');
        };
      }

      // METEOR CHANGE: _.each({length: 5}) should be treated like an object, not an
      // array. This looksLikeArray function is introduced by Meteor, and replaces
      // all instances of `obj.length === +obj.length`.
      // https://github.com/meteor/meteor/issues/594
      // https://github.com/jashkenas/underscore/issues/770
      var looksLikeArray = function (obj) {
        return obj.length === +obj.length
        // _.isArguments not yet necessarily defined here
        && (_isArguments(obj) || obj.constructor !== Object);
      };

      // The cornerstone, an `each` implementation, aka `forEach`.
      // Handles objects with the built-in `forEach`, arrays, and raw objects.
      // Delegates to **ECMAScript 5**'s native `forEach` if available.
      var each = _.each = _.forEach = function (obj, iterator, context) {
        if (obj == null) return;
        if (nativeForEach && obj.forEach === nativeForEach) {
          obj.forEach(iterator, context);
        } else if (looksLikeArray(obj)) {
          for (var i = 0, length = obj.length; i < length; i++) {
            if (iterator.call(context, obj[i], i, obj) === breaker) return;
          }
        } else {
          var keys = _.keys(obj);
          for (var i = 0, length = keys.length; i < length; i++) {
            if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker) return;
          }
        }
      };

      // Return the results of applying the iterator to each element.
      // Delegates to **ECMAScript 5**'s native `map` if available.
      _.map = _.collect = function (obj, iterator, context) {
        var results = [];
        if (obj == null) return results;
        if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);
        each(obj, function (value, index, list) {
          results.push(iterator.call(context, value, index, list));
        });
        return results;
      };

      var reduceError = 'Reduce of empty array with no initial value';

      // **Reduce** builds up a single result from a list of values, aka `inject`,
      // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.
      _.reduce = _.foldl = _.inject = function (obj, iterator, memo, context) {
        var initial = arguments.length > 2;
        if (obj == null) obj = [];
        if (nativeReduce && obj.reduce === nativeReduce) {
          if (context) iterator = _.bind(iterator, context);
          return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);
        }
        each(obj, function (value, index, list) {
          if (!initial) {
            memo = value;
            initial = true;
          } else {
            memo = iterator.call(context, memo, value, index, list);
          }
        });
        if (!initial) throw new TypeError(reduceError);
        return memo;
      };

      // The right-associative version of reduce, also known as `foldr`.
      // Delegates to **ECMAScript 5**'s native `reduceRight` if available.
      _.reduceRight = _.foldr = function (obj, iterator, memo, context) {
        var initial = arguments.length > 2;
        if (obj == null) obj = [];
        if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {
          if (context) iterator = _.bind(iterator, context);
          return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);
        }
        var length = obj.length;
        if (!looksLikeArray(obj)) {
          var keys = _.keys(obj);
          length = keys.length;
        }
        each(obj, function (value, index, list) {
          index = keys ? keys[--length] : --length;
          if (!initial) {
            memo = obj[index];
            initial = true;
          } else {
            memo = iterator.call(context, memo, obj[index], index, list);
          }
        });
        if (!initial) throw new TypeError(reduceError);
        return memo;
      };

      // Return the first value which passes a truth test. Aliased as `detect`.
      _.find = _.detect = function (obj, iterator, context) {
        var result;
        any(obj, function (value, index, list) {
          if (iterator.call(context, value, index, list)) {
            result = value;
            return true;
          }
        });
        return result;
      };

      // Return all the elements that pass a truth test.
      // Delegates to **ECMAScript 5**'s native `filter` if available.
      // Aliased as `select`.
      _.filter = _.select = function (obj, iterator, context) {
        var results = [];
        if (obj == null) return results;
        if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);
        each(obj, function (value, index, list) {
          if (iterator.call(context, value, index, list)) results.push(value);
        });
        return results;
      };

      // Return all the elements for which a truth test fails.
      _.reject = function (obj, iterator, context) {
        return _.filter(obj, function (value, index, list) {
          return !iterator.call(context, value, index, list);
        }, context);
      };

      // Determine whether all of the elements match a truth test.
      // Delegates to **ECMAScript 5**'s native `every` if available.
      // Aliased as `all`.
      _.every = _.all = function (obj, iterator, context) {
        iterator || (iterator = _.identity);
        var result = true;
        if (obj == null) return result;
        if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);
        each(obj, function (value, index, list) {
          if (!(result = result && iterator.call(context, value, index, list))) return breaker;
        });
        return !!result;
      };

      // Determine if at least one element in the object matches a truth test.
      // Delegates to **ECMAScript 5**'s native `some` if available.
      // Aliased as `any`.
      var any = _.some = _.any = function (obj, iterator, context) {
        iterator || (iterator = _.identity);
        var result = false;
        if (obj == null) return result;
        if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);
        each(obj, function (value, index, list) {
          if (result || (result = iterator.call(context, value, index, list))) return breaker;
        });
        return !!result;
      };

      // Determine if the array or object contains a given value (using `===`).
      // Aliased as `include`.
      _.contains = _.include = function (obj, target) {
        if (obj == null) return false;
        if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;
        return any(obj, function (value) {
          return value === target;
        });
      };

      // Invoke a method (with arguments) on every item in a collection.
      _.invoke = function (obj, method) {
        var args = slice.call(arguments, 2);
        var isFunc = _.isFunction(method);
        return _.map(obj, function (value) {
          return (isFunc ? method : value[method]).apply(value, args);
        });
      };

      // Convenience version of a common use case of `map`: fetching a property.
      _.pluck = function (obj, key) {
        return _.map(obj, function (value) {
          return value[key];
        });
      };

      // Convenience version of a common use case of `filter`: selecting only objects
      // containing specific `key:value` pairs.
      _.where = function (obj, attrs, first) {
        if (_.isEmpty(attrs)) return first ? void 0 : [];
        return _[first ? 'find' : 'filter'](obj, function (value) {
          for (var key in attrs) {
            if (attrs[key] !== value[key]) return false;
          }
          return true;
        });
      };

      // Convenience version of a common use case of `find`: getting the first object
      // containing specific `key:value` pairs.
      _.findWhere = function (obj, attrs) {
        return _.where(obj, attrs, true);
      };

      // Return the maximum element or (element-based computation).
      // Can't optimize arrays of integers longer than 65,535 elements.
      // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)
      _.max = function (obj, iterator, context) {
        if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
          return Math.max.apply(Math, obj);
        }
        if (!iterator && _.isEmpty(obj)) return -Infinity;
        var result = { computed: -Infinity, value: -Infinity };
        each(obj, function (value, index, list) {
          var computed = iterator ? iterator.call(context, value, index, list) : value;
          computed > result.computed && (result = { value: value, computed: computed });
        });
        return result.value;
      };

      // Return the minimum element (or element-based computation).
      _.min = function (obj, iterator, context) {
        if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
          return Math.min.apply(Math, obj);
        }
        if (!iterator && _.isEmpty(obj)) return Infinity;
        var result = { computed: Infinity, value: Infinity };
        each(obj, function (value, index, list) {
          var computed = iterator ? iterator.call(context, value, index, list) : value;
          computed < result.computed && (result = { value: value, computed: computed });
        });
        return result.value;
      };

      // Shuffle an array, using the modern version of the 
      // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
      _.shuffle = function (obj) {
        var rand;
        var index = 0;
        var shuffled = [];
        each(obj, function (value) {
          rand = _.random(index++);
          shuffled[index - 1] = shuffled[rand];
          shuffled[rand] = value;
        });
        return shuffled;
      };

      // Sample **n** random values from an array.
      // If **n** is not specified, returns a single random element from the array.
      // The internal `guard` argument allows it to work with `map`.
      _.sample = function (obj, n, guard) {
        if (arguments.length < 2 || guard) {
          return obj[_.random(obj.length - 1)];
        }
        return _.shuffle(obj).slice(0, Math.max(0, n));
      };

      // An internal function to generate lookup iterators.
      var lookupIterator = function (value) {
        return _.isFunction(value) ? value : function (obj) {
          return obj[value];
        };
      };

      // Sort the object's values by a criterion produced by an iterator.
      _.sortBy = function (obj, value, context) {
        var iterator = lookupIterator(value);
        return _.pluck(_.map(obj, function (value, index, list) {
          return {
            value: value,
            index: index,
            criteria: iterator.call(context, value, index, list)
          };
        }).sort(function (left, right) {
          var a = left.criteria;
          var b = right.criteria;
          if (a !== b) {
            if (a > b || a === void 0) return 1;
            if (a < b || b === void 0) return -1;
          }
          return left.index - right.index;
        }), 'value');
      };

      // An internal function used for aggregate "group by" operations.
      var group = function (behavior) {
        return function (obj, value, context) {
          var result = {};
          var iterator = value == null ? _.identity : lookupIterator(value);
          each(obj, function (value, index) {
            var key = iterator.call(context, value, index, obj);
            behavior(result, key, value);
          });
          return result;
        };
      };

      // Groups the object's values by a criterion. Pass either a string attribute
      // to group by, or a function that returns the criterion.
      _.groupBy = group(function (result, key, value) {
        (_.has(result, key) ? result[key] : result[key] = []).push(value);
      });

      // Indexes the object's values by a criterion, similar to `groupBy`, but for
      // when you know that your index values will be unique.
      _.indexBy = group(function (result, key, value) {
        result[key] = value;
      });

      // Counts instances of an object that group by a certain criterion. Pass
      // either a string attribute to count by, or a function that returns the
      // criterion.
      _.countBy = group(function (result, key) {
        _.has(result, key) ? result[key]++ : result[key] = 1;
      });

      // Use a comparator function to figure out the smallest index at which
      // an object should be inserted so as to maintain order. Uses binary search.
      _.sortedIndex = function (array, obj, iterator, context) {
        iterator = iterator == null ? _.identity : lookupIterator(iterator);
        var value = iterator.call(context, obj);
        var low = 0,
            high = array.length;
        while (low < high) {
          var mid = low + high >>> 1;
          iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;
        }
        return low;
      };

      // Safely create a real, live array from anything iterable.
      _.toArray = function (obj) {
        if (!obj) return [];
        if (_.isArray(obj)) return slice.call(obj);
        if (looksLikeArray(obj)) return _.map(obj, _.identity);
        return _.values(obj);
      };

      // Return the number of elements in an object.
      _.size = function (obj) {
        if (obj == null) return 0;
        return looksLikeArray(obj) ? obj.length : _.keys(obj).length;
      };

      // Array Functions
      // ---------------

      // Get the first element of an array. Passing **n** will return the first N
      // values in the array. Aliased as `head` and `take`. The **guard** check
      // allows it to work with `_.map`.
      _.first = _.head = _.take = function (array, n, guard) {
        if (array == null) return void 0;
        return n == null || guard ? array[0] : slice.call(array, 0, n);
      };

      // Returns everything but the last entry of the array. Especially useful on
      // the arguments object. Passing **n** will return all the values in
      // the array, excluding the last N. The **guard** check allows it to work with
      // `_.map`.
      _.initial = function (array, n, guard) {
        return slice.call(array, 0, array.length - (n == null || guard ? 1 : n));
      };

      // Get the last element of an array. Passing **n** will return the last N
      // values in the array. The **guard** check allows it to work with `_.map`.
      _.last = function (array, n, guard) {
        if (array == null) return void 0;
        if (n == null || guard) {
          return array[array.length - 1];
        } else {
          return slice.call(array, Math.max(array.length - n, 0));
        }
      };

      // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
      // Especially useful on the arguments object. Passing an **n** will return
      // the rest N values in the array. The **guard**
      // check allows it to work with `_.map`.
      _.rest = _.tail = _.drop = function (array, n, guard) {
        return slice.call(array, n == null || guard ? 1 : n);
      };

      // Trim out all falsy values from an array.
      _.compact = function (array) {
        return _.filter(array, _.identity);
      };

      // Internal implementation of a recursive `flatten` function.
      var flatten = function (input, shallow, output) {
        if (shallow && _.every(input, _.isArray)) {
          return concat.apply(output, input);
        }
        each(input, function (value) {
          if (_.isArray(value) || _.isArguments(value)) {
            shallow ? push.apply(output, value) : flatten(value, shallow, output);
          } else {
            output.push(value);
          }
        });
        return output;
      };

      // Flatten out an array, either recursively (by default), or just one level.
      _.flatten = function (array, shallow) {
        return flatten(array, shallow, []);
      };

      // Return a version of the array that does not contain the specified value(s).
      _.without = function (array) {
        return _.difference(array, slice.call(arguments, 1));
      };

      // Produce a duplicate-free version of the array. If the array has already
      // been sorted, you have the option of using a faster algorithm.
      // Aliased as `unique`.
      _.uniq = _.unique = function (array, isSorted, iterator, context) {
        if (_.isFunction(isSorted)) {
          context = iterator;
          iterator = isSorted;
          isSorted = false;
        }
        var initial = iterator ? _.map(array, iterator, context) : array;
        var results = [];
        var seen = [];
        each(initial, function (value, index) {
          if (isSorted ? !index || seen[seen.length - 1] !== value : !_.contains(seen, value)) {
            seen.push(value);
            results.push(array[index]);
          }
        });
        return results;
      };

      // Produce an array that contains the union: each distinct element from all of
      // the passed-in arrays.
      _.union = function () {
        return _.uniq(_.flatten(arguments, true));
      };

      // Produce an array that contains every item shared between all the
      // passed-in arrays.
      _.intersection = function (array) {
        var rest = slice.call(arguments, 1);
        return _.filter(_.uniq(array), function (item) {
          return _.every(rest, function (other) {
            return _.indexOf(other, item) >= 0;
          });
        });
      };

      // Take the difference between one array and a number of other arrays.
      // Only the elements present in just the first array will remain.
      _.difference = function (array) {
        var rest = concat.apply(ArrayProto, slice.call(arguments, 1));
        return _.filter(array, function (value) {
          return !_.contains(rest, value);
        });
      };

      // Zip together multiple lists into a single array -- elements that share
      // an index go together.
      _.zip = function () {
        var length = _.max(_.pluck(arguments, "length").concat(0));
        var results = new Array(length);
        for (var i = 0; i < length; i++) {
          results[i] = _.pluck(arguments, '' + i);
        }
        return results;
      };

      // Converts lists into objects. Pass either a single array of `[key, value]`
      // pairs, or two parallel arrays of the same length -- one of keys, and one of
      // the corresponding values.
      _.object = function (list, values) {
        if (list == null) return {};
        var result = {};
        for (var i = 0, length = list.length; i < length; i++) {
          if (values) {
            result[list[i]] = values[i];
          } else {
            result[list[i][0]] = list[i][1];
          }
        }
        return result;
      };

      // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),
      // we need this function. Return the position of the first occurrence of an
      // item in an array, or -1 if the item is not included in the array.
      // Delegates to **ECMAScript 5**'s native `indexOf` if available.
      // If the array is large and already in sort order, pass `true`
      // for **isSorted** to use binary search.
      _.indexOf = function (array, item, isSorted) {
        if (array == null) return -1;
        var i = 0,
            length = array.length;
        if (isSorted) {
          if (typeof isSorted == 'number') {
            i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;
          } else {
            i = _.sortedIndex(array, item);
            return array[i] === item ? i : -1;
          }
        }
        if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);
        for (; i < length; i++) if (array[i] === item) return i;
        return -1;
      };

      // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.
      _.lastIndexOf = function (array, item, from) {
        if (array == null) return -1;
        var hasIndex = from != null;
        if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {
          return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);
        }
        var i = hasIndex ? from : array.length;
        while (i--) if (array[i] === item) return i;
        return -1;
      };

      // Generate an integer Array containing an arithmetic progression. A port of
      // the native Python `range()` function. See
      // [the Python documentation](http://docs.python.org/library/functions.html#range).
      _.range = function (start, stop, step) {
        if (arguments.length <= 1) {
          stop = start || 0;
          start = 0;
        }
        step = arguments[2] || 1;

        var length = Math.max(Math.ceil((stop - start) / step), 0);
        var idx = 0;
        var range = new Array(length);

        while (idx < length) {
          range[idx++] = start;
          start += step;
        }

        return range;
      };

      // Function (ahem) Functions
      // ------------------

      // Reusable constructor function for prototype setting.
      var ctor = function () {};

      // Create a function bound to a given object (assigning `this`, and arguments,
      // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
      // available.
      _.bind = function (func, context) {
        var args, bound;
        if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
        if (!_.isFunction(func)) throw new TypeError();
        args = slice.call(arguments, 2);
        return bound = function () {
          if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));
          ctor.prototype = func.prototype;
          var self = new ctor();
          ctor.prototype = null;
          var result = func.apply(self, args.concat(slice.call(arguments)));
          if (Object(result) === result) return result;
          return self;
        };
      };

      // Partially apply a function by creating a version that has had some of its
      // arguments pre-filled, without changing its dynamic `this` context.
      _.partial = function (func) {
        var args = slice.call(arguments, 1);
        return function () {
          return func.apply(this, args.concat(slice.call(arguments)));
        };
      };

      // Bind all of an object's methods to that object. Useful for ensuring that
      // all callbacks defined on an object belong to it.
      _.bindAll = function (obj) {
        var funcs = slice.call(arguments, 1);
        if (funcs.length === 0) throw new Error("bindAll must be passed function names");
        each(funcs, function (f) {
          obj[f] = _.bind(obj[f], obj);
        });
        return obj;
      };

      // Memoize an expensive function by storing its results.
      _.memoize = function (func, hasher) {
        var memo = {};
        hasher || (hasher = _.identity);
        return function () {
          var key = hasher.apply(this, arguments);
          return _.has(memo, key) ? memo[key] : memo[key] = func.apply(this, arguments);
        };
      };

      // Delays a function for the given number of milliseconds, and then calls
      // it with the arguments supplied.
      _.delay = function (func, wait) {
        var args = slice.call(arguments, 2);
        return setTimeout(function () {
          return func.apply(null, args);
        }, wait);
      };

      // Defers a function, scheduling it to run after the current call stack has
      // cleared.
      _.defer = function (func) {
        return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
      };

      // Returns a function, that, when invoked, will only be triggered at most once
      // during a given window of time. Normally, the throttled function will run
      // as much as it can, without ever going more than once per `wait` duration;
      // but if you'd like to disable the execution on the leading edge, pass
      // `{leading: false}`. To disable execution on the trailing edge, ditto.
      _.throttle = function (func, wait, options) {
        var context, args, result;
        var timeout = null;
        var previous = 0;
        options || (options = {});
        var later = function () {
          previous = options.leading === false ? 0 : new Date();
          timeout = null;
          result = func.apply(context, args);
        };
        return function () {
          var now = new Date();
          if (!previous && options.leading === false) previous = now;
          var remaining = wait - (now - previous);
          context = this;
          args = arguments;
          if (remaining <= 0) {
            clearTimeout(timeout);
            timeout = null;
            previous = now;
            result = func.apply(context, args);
          } else if (!timeout && options.trailing !== false) {
            timeout = setTimeout(later, remaining);
          }
          return result;
        };
      };

      // Returns a function, that, as long as it continues to be invoked, will not
      // be triggered. The function will be called after it stops being called for
      // N milliseconds. If `immediate` is passed, trigger the function on the
      // leading edge, instead of the trailing.
      _.debounce = function (func, wait, immediate) {
        var timeout, args, context, timestamp, result;
        return function () {
          context = this;
          args = arguments;
          timestamp = new Date();
          var later = function () {
            var last = new Date() - timestamp;
            if (last < wait) {
              timeout = setTimeout(later, wait - last);
            } else {
              timeout = null;
              if (!immediate) result = func.apply(context, args);
            }
          };
          var callNow = immediate && !timeout;
          if (!timeout) {
            timeout = setTimeout(later, wait);
          }
          if (callNow) result = func.apply(context, args);
          return result;
        };
      };

      // Returns a function that will be executed at most one time, no matter how
      // often you call it. Useful for lazy initialization.
      _.once = function (func) {
        var ran = false,
            memo;
        return function () {
          if (ran) return memo;
          ran = true;
          memo = func.apply(this, arguments);
          func = null;
          return memo;
        };
      };

      // Returns the first function passed as an argument to the second,
      // allowing you to adjust arguments, run code before and after, and
      // conditionally execute the original function.
      _.wrap = function (func, wrapper) {
        return function () {
          var args = [func];
          push.apply(args, arguments);
          return wrapper.apply(this, args);
        };
      };

      // Returns a function that is the composition of a list of functions, each
      // consuming the return value of the function that follows.
      _.compose = function () {
        var funcs = arguments;
        return function () {
          var args = arguments;
          for (var i = funcs.length - 1; i >= 0; i--) {
            args = [funcs[i].apply(this, args)];
          }
          return args[0];
        };
      };

      // Returns a function that will only be executed after being called N times.
      _.after = function (times, func) {
        return function () {
          if (--times < 1) {
            return func.apply(this, arguments);
          }
        };
      };

      // Object Functions
      // ----------------

      // Retrieve the names of an object's properties.
      // Delegates to **ECMAScript 5**'s native `Object.keys`
      _.keys = nativeKeys || function (obj) {
        if (obj !== Object(obj)) throw new TypeError('Invalid object');
        var keys = [];
        for (var key in obj) if (_.has(obj, key)) keys.push(key);
        return keys;
      };

      // Retrieve the values of an object's properties.
      _.values = function (obj) {
        var keys = _.keys(obj);
        var length = keys.length;
        var values = new Array(length);
        for (var i = 0; i < length; i++) {
          values[i] = obj[keys[i]];
        }
        return values;
      };

      // Convert an object into a list of `[key, value]` pairs.
      _.pairs = function (obj) {
        var keys = _.keys(obj);
        var length = keys.length;
        var pairs = new Array(length);
        for (var i = 0; i < length; i++) {
          pairs[i] = [keys[i], obj[keys[i]]];
        }
        return pairs;
      };

      // Invert the keys and values of an object. The values must be serializable.
      _.invert = function (obj) {
        var result = {};
        var keys = _.keys(obj);
        for (var i = 0, length = keys.length; i < length; i++) {
          result[obj[keys[i]]] = keys[i];
        }
        return result;
      };

      // Return a sorted list of the function names available on the object.
      // Aliased as `methods`
      _.functions = _.methods = function (obj) {
        var names = [];
        for (var key in obj) {
          if (_.isFunction(obj[key])) names.push(key);
        }
        return names.sort();
      };

      // Extend a given object with all the properties in passed-in object(s).
      _.extend = function (obj) {
        each(slice.call(arguments, 1), function (source) {
          if (source) {
            for (var prop in source) {
              obj[prop] = source[prop];
            }
          }
        });
        return obj;
      };

      // Return a copy of the object only containing the whitelisted properties.
      _.pick = function (obj) {
        var copy = {};
        var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
        each(keys, function (key) {
          if (key in obj) copy[key] = obj[key];
        });
        return copy;
      };

      // Return a copy of the object without the blacklisted properties.
      _.omit = function (obj) {
        var copy = {};
        var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
        for (var key in obj) {
          if (!_.contains(keys, key)) copy[key] = obj[key];
        }
        return copy;
      };

      // Fill in a given object with default properties.
      _.defaults = function (obj) {
        each(slice.call(arguments, 1), function (source) {
          if (source) {
            for (var prop in source) {
              if (obj[prop] === void 0) obj[prop] = source[prop];
            }
          }
        });
        return obj;
      };

      // Create a (shallow-cloned) duplicate of an object.
      _.clone = function (obj) {
        if (!_.isObject(obj)) return obj;
        return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
      };

      // Invokes interceptor with the obj, and then returns obj.
      // The primary purpose of this method is to "tap into" a method chain, in
      // order to perform operations on intermediate results within the chain.
      _.tap = function (obj, interceptor) {
        interceptor(obj);
        return obj;
      };

      // Internal recursive comparison function for `isEqual`.
      var eq = function (a, b, aStack, bStack) {
        // Identical objects are equal. `0 === -0`, but they aren't identical.
        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
        if (a === b) return a !== 0 || 1 / a == 1 / b;
        // A strict comparison is necessary because `null == undefined`.
        if (a == null || b == null) return a === b;
        // Unwrap any wrapped objects.
        if (a instanceof _) a = a._wrapped;
        if (b instanceof _) b = b._wrapped;
        // Compare `[[Class]]` names.
        var className = toString.call(a);
        if (className != toString.call(b)) return false;
        switch (className) {
          // Strings, numbers, dates, and booleans are compared by value.
          case '[object String]':
            // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
            // equivalent to `new String("5")`.
            return a == String(b);
          case '[object Number]':
            // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for
            // other numeric values.
            return a != +a ? b != +b : a == 0 ? 1 / a == 1 / b : a == +b;
          case '[object Date]':
          case '[object Boolean]':
            // Coerce dates and booleans to numeric primitive values. Dates are compared by their
            // millisecond representations. Note that invalid dates with millisecond representations
            // of `NaN` are not equivalent.
            return +a == +b;
          // RegExps are compared by their source patterns and flags.
          case '[object RegExp]':
            return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;
        }
        if (typeof a != 'object' || typeof b != 'object') return false;
        // Assume equality for cyclic structures. The algorithm for detecting cyclic
        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
        var length = aStack.length;
        while (length--) {
          // Linear search. Performance is inversely proportional to the number of
          // unique nested structures.
          if (aStack[length] == a) return bStack[length] == b;
        }
        // Objects with different constructors are not equivalent, but `Object`s
        // from different frames are.
        var aCtor = a.constructor,
            bCtor = b.constructor;
        if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor)) {
          return false;
        }
        // Add the first object to the stack of traversed objects.
        aStack.push(a);
        bStack.push(b);
        var size = 0,
            result = true;
        // Recursively compare objects and arrays.
        if (className == '[object Array]') {
          // Compare array lengths to determine if a deep comparison is necessary.
          size = a.length;
          result = size == b.length;
          if (result) {
            // Deep compare the contents, ignoring non-numeric properties.
            while (size--) {
              if (!(result = eq(a[size], b[size], aStack, bStack))) break;
            }
          }
        } else {
          // Deep compare objects.
          for (var key in a) {
            if (_.has(a, key)) {
              // Count the expected number of properties.
              size++;
              // Deep compare each member.
              if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;
            }
          }
          // Ensure that both objects contain the same number of properties.
          if (result) {
            for (key in b) {
              if (_.has(b, key) && !size--) break;
            }
            result = !size;
          }
        }
        // Remove the first object from the stack of traversed objects.
        aStack.pop();
        bStack.pop();
        return result;
      };

      // Perform a deep comparison to check if two objects are equal.
      _.isEqual = function (a, b) {
        return eq(a, b, [], []);
      };

      // Is a given array, string, or object empty?
      // An "empty" object has no enumerable own-properties.
      _.isEmpty = function (obj) {
        if (obj == null) return true;
        if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;
        for (var key in obj) if (_.has(obj, key)) return false;
        return true;
      };

      // Is a given value a DOM element?
      _.isElement = function (obj) {
        return !!(obj && obj.nodeType === 1);
      };

      // Is a given value an array?
      // Delegates to ECMA5's native Array.isArray
      _.isArray = nativeIsArray || function (obj) {
        return toString.call(obj) == '[object Array]';
      };

      // Is a given variable an object?
      _.isObject = function (obj) {
        return obj === Object(obj);
      };

      // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.
      each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function (name) {
        _['is' + name] = function (obj) {
          return toString.call(obj) == '[object ' + name + ']';
        };
      });

      // Define a fallback version of the method in browsers (ahem, IE), where
      // there isn't any inspectable "Arguments" type.
      if (!_.isArguments(arguments)) {
        _.isArguments = function (obj) {
          return !!(obj && _.has(obj, 'callee'));
        };
      }

      // Optimize `isFunction` if appropriate.
      if (true) {
        _.isFunction = function (obj) {
          return typeof obj === 'function';
        };
      }

      // Is a given object a finite number?
      _.isFinite = function (obj) {
        return isFinite(obj) && !isNaN(parseFloat(obj));
      };

      // Is the given value `NaN`? (NaN is the only number which does not equal itself).
      _.isNaN = function (obj) {
        return _.isNumber(obj) && obj != +obj;
      };

      // Is a given value a boolean?
      _.isBoolean = function (obj) {
        return obj === true || obj === false || toString.call(obj) == '[object Boolean]';
      };

      // Is a given value equal to null?
      _.isNull = function (obj) {
        return obj === null;
      };

      // Is a given variable undefined?
      _.isUndefined = function (obj) {
        return obj === void 0;
      };

      // Shortcut function for checking if an object has a given property directly
      // on itself (in other words, not on a prototype).
      _.has = function (obj, key) {
        return hasOwnProperty.call(obj, key);
      };

      // Utility Functions
      // -----------------

      // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
      // previous owner. Returns a reference to the Underscore object.
      _.noConflict = function () {
        root._ = previousUnderscore;
        return this;
      };

      // Keep the identity function around for default iterators.
      _.identity = function (value) {
        return value;
      };

      // Run a function **n** times.
      _.times = function (n, iterator, context) {
        var accum = Array(Math.max(0, n));
        for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);
        return accum;
      };

      // Return a random integer between min and max (inclusive).
      _.random = function (min, max) {
        if (max == null) {
          max = min;
          min = 0;
        }
        return min + Math.floor(Math.random() * (max - min + 1));
      };

      // List of HTML entities for escaping.
      var entityMap = {
        escape: {
          '&': '&amp;',
          '<': '&lt;',
          '>': '&gt;',
          '"': '&quot;',
          "'": '&#x27;'
        }
      };
      entityMap.unescape = _.invert(entityMap.escape);

      // Regexes containing the keys and values listed immediately above.
      var entityRegexes = {
        escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),
        unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')
      };

      // Functions for escaping and unescaping strings to/from HTML interpolation.
      _.each(['escape', 'unescape'], function (method) {
        _[method] = function (string) {
          if (string == null) return '';
          return ('' + string).replace(entityRegexes[method], function (match) {
            return entityMap[method][match];
          });
        };
      });

      // If the value of the named `property` is a function then invoke it with the
      // `object` as context; otherwise, return it.
      _.result = function (object, property) {
        if (object == null) return void 0;
        var value = object[property];
        return _.isFunction(value) ? value.call(object) : value;
      };

      // Add your own custom functions to the Underscore object.
      _.mixin = function (obj) {
        each(_.functions(obj), function (name) {
          var func = _[name] = obj[name];
          _.prototype[name] = function () {
            var args = [this._wrapped];
            push.apply(args, arguments);
            return result.call(this, func.apply(_, args));
          };
        });
      };

      // Generate a unique integer id (unique within the entire client session).
      // Useful for temporary DOM ids.
      var idCounter = 0;
      _.uniqueId = function (prefix) {
        var id = ++idCounter + '';
        return prefix ? prefix + id : id;
      };

      // By default, Underscore uses ERB-style template delimiters, change the
      // following template settings to use alternative delimiters.
      _.templateSettings = {
        evaluate: /<%([\s\S]+?)%>/g,
        interpolate: /<%=([\s\S]+?)%>/g,
        escape: /<%-([\s\S]+?)%>/g
      };

      // When customizing `templateSettings`, if you don't want to define an
      // interpolation, evaluation or escaping regex, we need one that is
      // guaranteed not to match.
      var noMatch = /(.)^/;

      // Certain characters need to be escaped so that they can be put into a
      // string literal.
      var escapes = {
        "'": "'",
        '\\': '\\',
        '\r': 'r',
        '\n': 'n',
        '\t': 't',
        '\u2028': 'u2028',
        '\u2029': 'u2029'
      };

      var escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g;

      // JavaScript micro-templating, similar to John Resig's implementation.
      // Underscore templating handles arbitrary delimiters, preserves whitespace,
      // and correctly escapes quotes within interpolated code.
      _.template = function (text, data, settings) {
        var render;
        settings = _.defaults({}, settings, _.templateSettings);

        // Combine delimiters into one regular expression via alternation.
        var matcher = new RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g');

        // Compile the template source, escaping string literals appropriately.
        var index = 0;
        var source = "__p+='";
        text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {
          source += text.slice(index, offset).replace(escaper, function (match) {
            return '\\' + escapes[match];
          });

          if (escape) {
            source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
          }
          if (interpolate) {
            source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
          }
          if (evaluate) {
            source += "';\n" + evaluate + "\n__p+='";
          }
          index = offset + match.length;
          return match;
        });
        source += "';\n";

        // If a variable is not specified, place data values in local scope.
        if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

        source = "var __t,__p='',__j=Array.prototype.join," + "print=function(){__p+=__j.call(arguments,'');};\n" + source + "return __p;\n";

        try {
          render = new Function(settings.variable || 'obj', '_', source);
        } catch (e) {
          e.source = source;
          throw e;
        }

        if (data) return render(data, _);
        var template = function (data) {
          return render.call(this, data, _);
        };

        // Provide the compiled function source as a convenience for precompilation.
        template.source = 'function(' + (settings.variable || 'obj') + '){\n' + source + '}';

        return template;
      };

      // Add a "chain" function, which will delegate to the wrapper.
      _.chain = function (obj) {
        return _(obj).chain();
      };

      // OOP
      // ---------------
      // If Underscore is called as a function, it returns a wrapped object that
      // can be used OO-style. This wrapper holds altered versions of all the
      // underscore functions. Wrapped objects may be chained.

      // Helper function to continue chaining intermediate results.
      var result = function (obj) {
        return this._chain ? _(obj).chain() : obj;
      };

      // Add all of the Underscore functions to the wrapper object.
      _.mixin(_);

      // Add all mutator Array functions to the wrapper.
      each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {
        var method = ArrayProto[name];
        _.prototype[name] = function () {
          var obj = this._wrapped;
          method.apply(obj, arguments);
          if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];
          return result.call(this, obj);
        };
      });

      // Add all accessor Array functions to the wrapper.
      each(['concat', 'join', 'slice'], function (name) {
        var method = ArrayProto[name];
        _.prototype[name] = function () {
          return result.call(this, method.apply(this._wrapped, arguments));
        };
      });

      _.extend(_.prototype, {

        // Start chaining a wrapped Underscore object.
        chain: function () {
          this._chain = true;
          return this;
        },

        // Extracts the result from a wrapped and chained object.
        value: function () {
          return this._wrapped;
        }

      });
    }).call(this);

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  (function () {

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                       //
    // packages/underscore/post.js                                                                           //
    //                                                                                                       //
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // This exports object was created in pre.js.  Now copy the `_` object from it
    // into the package-scope variable `_`, which will get exported.
    _ = _exports._;

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  /* Exports */
  Package._define("underscore", {
    _: _
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Exports */
  Package._define("ddp-rate-limiter");
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var Random;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "random": { "random.js": function (_require) {

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                               //
            // packages/random/random.js                                                                                     //
            //                                                                                                               //
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // We use cryptographically strong PRNGs (crypto.getRandomBytes() on the server,
            // window.crypto.getRandomValues() in the browser) when available. If these
            // PRNGs fail, we fall back to the Alea PRNG, which is not cryptographically
            // strong, and we seed it with various sources such as the date, Math.random,
            // and window size on the client.  When using crypto.getRandomValues(), our
            // primitive is hexString(), from which we construct fraction(). When using
            // window.crypto.getRandomValues() or alea, the primitive is fraction and we use
            // that to construct hex string.
            if (Meteor.isServer) var nodeCrypto = Npm.require('crypto'); // see http://baagoe.org/en/wiki/Better_random_numbers_for_javascript
            // for a full discussion and Alea implementation.

            var Alea = function () {
              function Mash() {
                var n = 0xefc8249d;

                var mash = function (data) {
                  data = data.toString();

                  for (var i = 0; i < data.length; i++) {
                    n += data.charCodeAt(i);
                    var h = 0.02519603282416938 * n;
                    n = h >>> 0;
                    h -= n;
                    h *= n;
                    n = h >>> 0;
                    h -= n;
                    n += h * 0x100000000; // 2^32
                  }

                  return (n >>> 0) * 2.3283064365386963e-10; // 2^-32
                };

                mash.version = 'Mash 0.9';
                return mash;
              }

              return function (args) {
                var s0 = 0;
                var s1 = 0;
                var s2 = 0;
                var c = 1;

                if (args.length == 0) {
                  args = [+new Date()];
                }

                var mash = Mash();
                s0 = mash(' ');
                s1 = mash(' ');
                s2 = mash(' ');

                for (var i = 0; i < args.length; i++) {
                  s0 -= mash(args[i]);

                  if (s0 < 0) {
                    s0 += 1;
                  }

                  s1 -= mash(args[i]);

                  if (s1 < 0) {
                    s1 += 1;
                  }

                  s2 -= mash(args[i]);

                  if (s2 < 0) {
                    s2 += 1;
                  }
                }

                mash = null;

                var random = function () {
                  var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32

                  s0 = s1;
                  s1 = s2;
                  return s2 = t - (c = t | 0);
                };

                random.uint32 = function () {
                  return random() * 0x100000000; // 2^32
                };

                random.fract53 = function () {
                  return random() + (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53
                };

                random.version = 'Alea 0.9';
                random.args = args;
                return random;
              }(Array.prototype.slice.call(arguments));
            };

            var UNMISTAKABLE_CHARS = "23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz";
            var BASE64_CHARS = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" + "0123456789-_"; // `type` is one of `RandomGenerator.Type` as defined below.
            //
            // options:
            // - seeds: (required, only for RandomGenerator.Type.ALEA) an array
            //   whose items will be `toString`ed and used as the seed to the Alea
            //   algorithm

            var RandomGenerator = function (type, options) {
              var self = this;
              self.type = type;

              if (!RandomGenerator.Type[type]) {
                throw new Error("Unknown random generator type: " + type);
              }

              if (type === RandomGenerator.Type.ALEA) {
                if (!options.seeds) {
                  throw new Error("No seeds were provided for Alea PRNG");
                }

                self.alea = Alea.apply(null, options.seeds);
              }
            }; // Types of PRNGs supported by the `RandomGenerator` class


            RandomGenerator.Type = {
              // Use Node's built-in `crypto.getRandomBytes` (cryptographically
              // secure but not seedable, runs only on the server). Reverts to
              // `crypto.getPseudoRandomBytes` in the extremely uncommon case that
              // there isn't enough entropy yet
              NODE_CRYPTO: "NODE_CRYPTO",
              // Use non-IE browser's built-in `window.crypto.getRandomValues`
              // (cryptographically secure but not seedable, runs only in the
              // browser).
              BROWSER_CRYPTO: "BROWSER_CRYPTO",
              // Use the *fast*, seedaable and not cryptographically secure
              // Alea algorithm
              ALEA: "ALEA"
            };
            /**
             * @name Random.fraction
             * @summary Return a number between 0 and 1, like `Math.random`.
             * @locus Anywhere
             */

            RandomGenerator.prototype.fraction = function () {
              var self = this;

              if (self.type === RandomGenerator.Type.ALEA) {
                return self.alea();
              } else if (self.type === RandomGenerator.Type.NODE_CRYPTO) {
                var numerator = parseInt(self.hexString(8), 16);
                return numerator * 2.3283064365386963e-10; // 2^-32
              } else if (self.type === RandomGenerator.Type.BROWSER_CRYPTO) {
                var array = new Uint32Array(1);
                window.crypto.getRandomValues(array);
                return array[0] * 2.3283064365386963e-10; // 2^-32
              } else {
                throw new Error('Unknown random generator type: ' + self.type);
              }
            };
            /**
             * @name Random.hexString
             * @summary Return a random string of `n` hexadecimal digits.
             * @locus Anywhere
             * @param {Number} n Length of the string
             */

            RandomGenerator.prototype.hexString = function (digits) {
              var self = this;

              if (self.type === RandomGenerator.Type.NODE_CRYPTO) {
                var numBytes = Math.ceil(digits / 2);
                var bytes; // Try to get cryptographically strong randomness. Fall back to
                // non-cryptographically strong if not available.

                try {
                  bytes = nodeCrypto.randomBytes(numBytes);
                } catch (e) {
                  // XXX should re-throw any error except insufficient entropy
                  bytes = nodeCrypto.pseudoRandomBytes(numBytes);
                }

                var result = bytes.toString("hex"); // If the number of digits is odd, we'll have generated an extra 4 bits
                // of randomness, so we need to trim the last digit.

                return result.substring(0, digits);
              } else {
                return this._randomString(digits, "0123456789abcdef");
              }
            };

            RandomGenerator.prototype._randomString = function (charsCount, alphabet) {
              var self = this;
              var digits = [];

              for (var i = 0; i < charsCount; i++) {
                digits[i] = self.choice(alphabet);
              }

              return digits.join("");
            };
            /**
             * @name Random.id
             * @summary Return a unique identifier, such as `"Jjwjg6gouWLXhMGKW"`, that is
             * likely to be unique in the whole world.
             * @locus Anywhere
             * @param {Number} [n] Optional length of the identifier in characters
             *   (defaults to 17)
             */

            RandomGenerator.prototype.id = function (charsCount) {
              var self = this; // 17 characters is around 96 bits of entropy, which is the amount of
              // state in the Alea PRNG.

              if (charsCount === undefined) charsCount = 17;
              return self._randomString(charsCount, UNMISTAKABLE_CHARS);
            };
            /**
             * @name Random.secret
             * @summary Return a random string of printable characters with 6 bits of
             * entropy per character. Use `Random.secret` for security-critical secrets
             * that are intended for machine, rather than human, consumption.
             * @locus Anywhere
             * @param {Number} [n] Optional length of the secret string (defaults to 43
             *   characters, or 256 bits of entropy)
             */

            RandomGenerator.prototype.secret = function (charsCount) {
              var self = this; // Default to 256 bits of entropy, or 43 characters at 6 bits per
              // character.

              if (charsCount === undefined) charsCount = 43;
              return self._randomString(charsCount, BASE64_CHARS);
            };
            /**
             * @name Random.choice
             * @summary Return a random element of the given array or string.
             * @locus Anywhere
             * @param {Array|String} arrayOrString Array or string to choose from
             */

            RandomGenerator.prototype.choice = function (arrayOrString) {
              var index = Math.floor(this.fraction() * arrayOrString.length);
              if (typeof arrayOrString === "string") return arrayOrString.substr(index, 1);else return arrayOrString[index];
            }; // instantiate RNG.  Heuristically collect entropy from various sources when a
            // cryptographic PRNG isn't available.
            // client sources


            var height = typeof window !== 'undefined' && window.innerHeight || typeof document !== 'undefined' && document.documentElement && document.documentElement.clientHeight || typeof document !== 'undefined' && document.body && document.body.clientHeight || 1;
            var width = typeof window !== 'undefined' && window.innerWidth || typeof document !== 'undefined' && document.documentElement && document.documentElement.clientWidth || typeof document !== 'undefined' && document.body && document.body.clientWidth || 1;
            var agent = typeof navigator !== 'undefined' && navigator.userAgent || "";

            function createAleaGeneratorWithGeneratedSeed() {
              return new RandomGenerator(RandomGenerator.Type.ALEA, {
                seeds: [new Date(), height, width, agent, Math.random()]
              });
            }

            ;

            if (Meteor.isServer) {
              Random = new RandomGenerator(RandomGenerator.Type.NODE_CRYPTO);
            } else {
              if (typeof window !== "undefined" && window.crypto && window.crypto.getRandomValues) {
                Random = new RandomGenerator(RandomGenerator.Type.BROWSER_CRYPTO);
              } else {
                // On IE 10 and below, there's no browser crypto API
                // available. Fall back to Alea
                //
                // XXX looks like at the moment, we use Alea in IE 11 as well,
                // which has `window.msCrypto` instead of `window.crypto`.
                Random = createAleaGeneratorWithGeneratedSeed();
              }
            } // Create a non-cryptographically secure PRNG with a given seed (using
            // the Alea algorithm)


            Random.createWithSeeds = function () {
              for (var _len = arguments.length, seeds = new Array(_len), _key = 0; _key < _len; _key++) {
                seeds[_key] = arguments[_key];
              }

              if (seeds.length === 0) {
                throw new Error("No seeds were provided");
              }

              return new RandomGenerator(RandomGenerator.Type.ALEA, {
                seeds: seeds
              });
            }; // Used like `Random`, but much faster and not cryptographically
            // secure


            Random.insecure = createAleaGeneratorWithGeneratedSeed();
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  _require2("/node_modules/meteor/random/random.js");

  /* Exports */
  Package._define("random", {
    Random: Random
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var Random = Package.random.Random;

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////
    //                                                                                  //
    // packages/localstorage/localstorage.js                                            //
    //                                                                                  //
    //////////////////////////////////////////////////////////////////////////////////////
    //
    // Meteor._localStorage is not an ideal name, but we can change it later.

    // Let's test to make sure that localStorage actually works. For example, in
    // Safari with private browsing on, window.localStorage exists but actually
    // trying to use it throws.
    // Accessing window.localStorage can also immediately throw an error in IE (#1291).

    var hasOwn = Object.prototype.hasOwnProperty;
    var key = '_localstorage_test_' + Random.id();
    var retrieved;
    var storage;

    try {
      storage = global.localStorage;

      if (storage) {
        storage.setItem(key, key);
        retrieved = storage.getItem(key);
        storage.removeItem(key);
      }
    } catch (ignored) {}

    if (key === retrieved) {
      if (Meteor.isServer) {
        Meteor._localStorage = storage;
      } else {
        // Some browsers (e.g. IE11) don't properly handle attempts to change
        // window.localStorage methods. By using proxy methods to expose
        // window.localStorage functionality, developers can change the
        // behavior of Meteor._localStorage methods without breaking
        // window.localStorage.
        ["getItem", "setItem", "removeItem"].forEach(function (name) {
          this[name] = function () {
            return storage[name].apply(storage, arguments);
          };
        }, Meteor._localStorage = {});
      }
    }

    if (!Meteor._localStorage) {
      if (Meteor.isClient) {
        Meteor._debug("You are running a browser with no localStorage or userData " + "support. Logging in from one tab will not cause another " + "tab to be logged in.");
      }

      Meteor._localStorage = Object.create({
        setItem: function (key, val) {
          this[key] = val;
        },

        removeItem: function (key) {
          delete this[key];
        },

        getItem: function (key) {
          return hasOwn.call(this, key) ? this[key] : null;
        }
      });
    }

    //////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  /* Exports */
  Package._define("localstorage");
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var Hook;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "callback-hook": { "hook.js": function (_require, _exports, _module) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                 //
            // packages/callback-hook/hook.js                                                                  //
            //                                                                                                 //
            /////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module.export({
              Hook: function () {
                return Hook;
              }
            });
            // XXX This pattern is under development. Do not add more callsites
            // using this package for now. See:
            // https://meteor.hackpad.com/Design-proposal-Hooks-YxvgEW06q6f
            //
            // Encapsulates the pattern of registering callbacks on a hook.
            //
            // The `each` method of the hook calls its iterator function argument
            // with each registered callback.  This allows the hook to
            // conditionally decide not to call the callback (if, for example, the
            // observed object has been closed or terminated).
            //
            // By default, callbacks are bound with `Meteor.bindEnvironment`, so they will be
            // called with the Meteor environment of the calling code that
            // registered the callback. Override by passing { bindEnvironment: false }
            // to the constructor.
            //
            // Registering a callback returns an object with a single `stop`
            // method which unregisters the callback.
            //
            // The code is careful to allow a callback to be safely unregistered
            // while the callbacks are being iterated over.
            //
            // If the hook is configured with the `exceptionHandler` option, the
            // handler will be called if a called callback throws an exception.
            // By default (if the exception handler doesn't itself throw an
            // exception, or if the iterator function doesn't return a falsy value
            // to terminate the calling of callbacks), the remaining callbacks
            // will still be called.
            //
            // Alternatively, the `debugPrintExceptions` option can be specified
            // as string describing the callback.  On an exception the string and
            // the exception will be printed to the console log with
            // `Meteor._debug`, and the exception otherwise ignored.
            //
            // If an exception handler isn't specified, exceptions thrown in the
            // callback will propagate up to the iterator function, and will
            // terminate calling the remaining callbacks if not caught.
            var hasOwn = Object.prototype.hasOwnProperty;

            var Hook =
            /*#__PURE__*/
            function () {
              function Hook(options) {
                options = options || {};
                this.nextCallbackId = 0;
                this.callbacks = Object.create(null); // Whether to wrap callbacks with Meteor.bindEnvironment

                this.bindEnvironment = true;

                if (options.bindEnvironment === false) {
                  this.bindEnvironment = false;
                }

                if (options.exceptionHandler) {
                  this.exceptionHandler = options.exceptionHandler;
                } else if (options.debugPrintExceptions) {
                  if (typeof options.debugPrintExceptions !== "string") {
                    throw new Error("Hook option debugPrintExceptions should be a string");
                  }

                  this.exceptionHandler = options.debugPrintExceptions;
                }
              }

              var _proto = Hook.prototype;

              _proto.register = function () {
                function register(callback) {
                  var _this2 = this;

                  var exceptionHandler = this.exceptionHandler || function (exception) {
                    // Note: this relies on the undocumented fact that if bindEnvironment's
                    // onException throws, and you are invoking the callback either in the
                    // browser or from within a Fiber in Node, the exception is propagated.
                    throw exception;
                  };

                  if (this.bindEnvironment) {
                    callback = Meteor.bindEnvironment(callback, exceptionHandler);
                  } else {
                    callback = dontBindEnvironment(callback, exceptionHandler);
                  }

                  var id = this.nextCallbackId++;
                  this.callbacks[id] = callback;
                  return {
                    stop: function () {
                      delete _this2.callbacks[id];
                    }
                  };
                }

                return register;
              }(); // For each registered callback, call the passed iterator function
              // with the callback.
              //
              // The iterator function can choose whether or not to call the
              // callback.  (For example, it might not call the callback if the
              // observed object has been closed or terminated).
              //
              // The iteration is stopped if the iterator function returns a falsy
              // value or throws an exception.
              //


              _proto.each = function () {
                function each(iterator) {
                  // Invoking bindEnvironment'd callbacks outside of a Fiber in Node doesn't
                  // run them to completion (and exceptions thrown from onException are not
                  // propagated), so we need to be in a Fiber.
                  Meteor._nodeCodeMustBeInFiber();

                  var ids = Object.keys(this.callbacks);

                  for (var i = 0; i < ids.length; ++i) {
                    var id = ids[i]; // check to see if the callback was removed during iteration

                    if (hasOwn.call(this.callbacks, id)) {
                      var callback = this.callbacks[id];

                      if (!iterator(callback)) {
                        break;
                      }
                    }
                  }
                }

                return each;
              }();

              return Hook;
            }();

            // Copied from Meteor.bindEnvironment and removed all the env stuff.
            function dontBindEnvironment(func, onException, _this) {
              if (!onException || typeof onException === 'string') {
                var description = onException || "callback of async function";

                onException = function (error) {
                  Meteor._debug("Exception in " + description + ":", error && error.stack || error);
                };
              }

              return function () {
                try {
                  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                  }

                  var ret = func.apply(_this, args);
                } catch (e) {
                  onException(e);
                }

                return ret;
              };
            }
            /////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/callback-hook/hook.js");

  /* Exports */
  Package._define("callback-hook", _exports2, {
    Hook: Hook
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var Tracker = Package.tracker.Tracker;
  var Deps = Package.tracker.Deps;

  /* Package-scope variables */
  var ReactiveVar;

  (function () {

    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                                              //
    // packages/reactive-var/reactive-var.js                                                                        //
    //                                                                                                              //
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    /*
     * ## [new] ReactiveVar(initialValue, [equalsFunc])
     *
     * A ReactiveVar holds a single value that can be get and set,
     * such that calling `set` will invalidate any Computations that
     * called `get`, according to the usual contract for reactive
     * data sources.
     *
     * A ReactiveVar is much like a Session variable -- compare `foo.get()`
     * to `Session.get("foo")` -- but it doesn't have a global name and isn't
     * automatically migrated across hot code pushes.  Also, while Session
     * variables can only hold JSON or EJSON, ReactiveVars can hold any value.
     *
     * An important property of ReactiveVars, which is sometimes the reason
     * to use one, is that setting the value to the same value as before has
     * no effect, meaning ReactiveVars can be used to absorb extra
     * invalidations that wouldn't serve a purpose.  However, by default,
     * ReactiveVars are extremely conservative about what changes they
     * absorb.  Calling `set` with an object argument will *always* trigger
     * invalidations, because even if the new value is `===` the old value,
     * the object may have been mutated.  You can change the default behavior
     * by passing a function of two arguments, `oldValue` and `newValue`,
     * to the constructor as `equalsFunc`.
     *
     * This class is extremely basic right now, but the idea is to evolve
     * it into the ReactiveVar of Geoff's Lickable Forms proposal.
     */

    /**
     * @class 
     * @instanceName reactiveVar
     * @summary Constructor for a ReactiveVar, which represents a single reactive variable.
     * @locus Client
     * @param {Any} initialValue The initial value to set.  `equalsFunc` is ignored when setting the initial value.
     * @param {Function} [equalsFunc] Optional.  A function of two arguments, called on the old value and the new value whenever the ReactiveVar is set.  If it returns true, no set is performed.  If omitted, the default `equalsFunc` returns true if its arguments are `===` and are of type number, boolean, string, undefined, or null.
     */
    ReactiveVar = function (initialValue, equalsFunc) {
      if (!(this instanceof ReactiveVar))
        // called without `new`
        return new ReactiveVar(initialValue, equalsFunc);

      this.curValue = initialValue;
      this.equalsFunc = equalsFunc;
      this.dep = new Tracker.Dependency();
    };

    ReactiveVar._isEqual = function (oldValue, newValue) {
      var a = oldValue,
          b = newValue;
      // Two values are "equal" here if they are `===` and are
      // number, boolean, string, undefined, or null.
      if (a !== b) return false;else return !a || typeof a === 'number' || typeof a === 'boolean' || typeof a === 'string';
    };

    /**
     * @summary Returns the current value of the ReactiveVar, establishing a reactive dependency.
     * @locus Client
     */
    ReactiveVar.prototype.get = function () {
      if (Tracker.active) this.dep.depend();

      return this.curValue;
    };

    /**
     * @summary Sets the current value of the ReactiveVar, invalidating the Computations that called `get` if `newValue` is different from the old value.
     * @locus Client
     * @param {Any} newValue
     */
    ReactiveVar.prototype.set = function (newValue) {
      var oldValue = this.curValue;

      if ((this.equalsFunc || ReactiveVar._isEqual)(oldValue, newValue))
        // value is same as last time
        return;

      this.curValue = newValue;
      this.dep.changed();
    };

    ReactiveVar.prototype.toString = function () {
      return 'ReactiveVar{' + this.get() + '}';
    };

    ReactiveVar.prototype._numListeners = function () {
      // Tests want to know.
      // Accesses a private field of Tracker.Dependency.
      var count = 0;
      for (var id in this.dep._dependentsById) count++;
      return count;
    };

    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  /* Exports */
  Package._define("reactive-var", {
    ReactiveVar: ReactiveVar
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var Base64;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "base64": { "base64.js": function (_require, _exports, _module) {

            //////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                      //
            // packages/base64/base64.js                                                            //
            //                                                                                      //
            //////////////////////////////////////////////////////////////////////////////////////////
            //
            _module.export({
              Base64: function () {
                return Base64;
              }
            });
            // Base 64 encoding
            var BASE_64_CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
            var BASE_64_VALS = Object.create(null);

            var getChar = function (val) {
              return BASE_64_CHARS.charAt(val);
            };

            var getVal = function (ch) {
              return ch === '=' ? -1 : BASE_64_VALS[ch];
            };

            for (var i = 0; i < BASE_64_CHARS.length; i++) {
              BASE_64_VALS[getChar(i)] = i;
            }

            ;

            var encode = function (array) {
              if (typeof array === "string") {
                var str = array;
                array = newBinary(str.length);

                for (var _i = 0; _i < str.length; _i++) {
                  var ch = str.charCodeAt(_i);

                  if (ch > 0xFF) {
                    throw new Error("Not ascii. Base64.encode can only take ascii strings.");
                  }

                  array[_i] = ch;
                }
              }

              var answer = [];
              var a = null;
              var b = null;
              var c = null;
              var d = null;
              array.forEach(function (elm, i) {
                switch (i % 3) {
                  case 0:
                    a = elm >> 2 & 0x3F;
                    b = (elm & 0x03) << 4;
                    break;

                  case 1:
                    b = b | elm >> 4 & 0xF;
                    c = (elm & 0xF) << 2;
                    break;

                  case 2:
                    c = c | elm >> 6 & 0x03;
                    d = elm & 0x3F;
                    answer.push(getChar(a));
                    answer.push(getChar(b));
                    answer.push(getChar(c));
                    answer.push(getChar(d));
                    a = null;
                    b = null;
                    c = null;
                    d = null;
                    break;
                }
              });

              if (a != null) {
                answer.push(getChar(a));
                answer.push(getChar(b));

                if (c == null) {
                  answer.push('=');
                } else {
                  answer.push(getChar(c));
                }

                if (d == null) {
                  answer.push('=');
                }
              }

              return answer.join("");
            }; // XXX This is a weird place for this to live, but it's used both by
            // this package and 'ejson', and we can't put it in 'ejson' without
            // introducing a circular dependency. It should probably be in its own
            // package or as a helper in a package that both 'base64' and 'ejson'
            // use.


            var newBinary = function (len) {
              if (typeof Uint8Array === 'undefined' || typeof ArrayBuffer === 'undefined') {
                var ret = [];

                for (var _i2 = 0; _i2 < len; _i2++) {
                  ret.push(0);
                }

                ret.$Uint8ArrayPolyfill = true;
                return ret;
              }

              return new Uint8Array(new ArrayBuffer(len));
            };

            var decode = function (str) {
              var len = Math.floor(str.length * 3 / 4);

              if (str.charAt(str.length - 1) == '=') {
                len--;

                if (str.charAt(str.length - 2) == '=') {
                  len--;
                }
              }

              var arr = newBinary(len);
              var one = null;
              var two = null;
              var three = null;
              var j = 0;

              for (var _i3 = 0; _i3 < str.length; _i3++) {
                var c = str.charAt(_i3);
                var v = getVal(c);

                switch (_i3 % 4) {
                  case 0:
                    if (v < 0) {
                      throw new Error('invalid base64 string');
                    }

                    one = v << 2;
                    break;

                  case 1:
                    if (v < 0) {
                      throw new Error('invalid base64 string');
                    }

                    one = one | v >> 4;
                    arr[j++] = one;
                    two = (v & 0x0F) << 4;
                    break;

                  case 2:
                    if (v >= 0) {
                      two = two | v >> 2;
                      arr[j++] = two;
                      three = (v & 0x03) << 6;
                    }

                    break;

                  case 3:
                    if (v >= 0) {
                      arr[j++] = three | v;
                    }

                    break;
                }
              }

              return arr;
            };

            var Base64 = {
              encode: encode,
              decode: decode,
              newBinary: newBinary
            };
            //////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/base64/base64.js");

  /* Exports */
  Package._define("base64", _exports2, {
    Base64: Base64
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var Base64 = Package.base64.Base64;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var v, EJSON;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "ejson": { "ejson.js": function (_require, _exports, _module) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                             //
            // packages/ejson/ejson.js                                                                                     //
            //                                                                                                             //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require("@babel/runtime/helpers/interopRequireDefault");

            var _typeof2 = _interopRequireDefault(_require("@babel/runtime/helpers/typeof"));

            _module.export({
              EJSON: function () {
                return EJSON;
              }
            });

            /**
             * @namespace
             * @summary Namespace for EJSON functions
             */
            var EJSON = {}; // Custom type interface definition

            /**
             * @class CustomType
             * @instanceName customType
             * @memberOf EJSON
             * @summary The interface that a class must satisfy to be able to become an
             * EJSON custom type via EJSON.addType.
             */

            /**
             * @function typeName
             * @memberOf EJSON.CustomType
             * @summary Return the tag used to identify this type.  This must match the
             *          tag used to register this type with
             *          [`EJSON.addType`](#ejson_add_type).
             * @locus Anywhere
             * @instance
             */

            /**
             * @function toJSONValue
             * @memberOf EJSON.CustomType
             * @summary Serialize this instance into a JSON-compatible value.
             * @locus Anywhere
             * @instance
             */

            /**
             * @function clone
             * @memberOf EJSON.CustomType
             * @summary Return a value `r` such that `this.equals(r)` is true, and
             *          modifications to `r` do not affect `this` and vice versa.
             * @locus Anywhere
             * @instance
             */

            /**
             * @function equals
             * @memberOf EJSON.CustomType
             * @summary Return `true` if `other` has a value equal to `this`; `false`
             *          otherwise.
             * @locus Anywhere
             * @param {Object} other Another object to compare this to.
             * @instance
             */

            var customTypes = {};

            var hasOwn = function (obj, prop) {
              return {}.hasOwnProperty.call(obj, prop);
            };

            var isArguments = function (obj) {
              return obj != null && hasOwn(obj, 'callee');
            };

            var isInfOrNan = function (obj) {
              return Number.isNaN(obj) || obj === Infinity || obj === -Infinity;
            }; // Add a custom type, using a method of your choice to get to and
            // from a basic JSON-able representation.  The factory argument
            // is a function of JSON-able --> your object
            // The type you add must have:
            // - A toJSONValue() method, so that Meteor can serialize it
            // - a typeName() method, to show how to look it up in our type table.
            // It is okay if these methods are monkey-patched on.
            // EJSON.clone will use toJSONValue and the given factory to produce
            // a clone, but you may specify a method clone() that will be
            // used instead.
            // Similarly, EJSON.equals will use toJSONValue to make comparisons,
            // but you may provide a method equals() instead.

            /**
             * @summary Add a custom datatype to EJSON.
             * @locus Anywhere
             * @param {String} name A tag for your custom type; must be unique among
             *                      custom data types defined in your project, and must
             *                      match the result of your type's `typeName` method.
             * @param {Function} factory A function that deserializes a JSON-compatible
             *                           value into an instance of your type.  This should
             *                           match the serialization performed by your
             *                           type's `toJSONValue` method.
             */

            EJSON.addType = function (name, factory) {
              if (hasOwn(customTypes, name)) {
                throw new Error("Type " + name + " already present");
              }

              customTypes[name] = factory;
            };

            var builtinConverters = [{
              // Date
              matchJSONValue: function (obj) {
                return hasOwn(obj, '$date') && Object.keys(obj).length === 1;
              },
              matchObject: function (obj) {
                return obj instanceof Date;
              },
              toJSONValue: function (obj) {
                return {
                  $date: obj.getTime()
                };
              },
              fromJSONValue: function (obj) {
                return new Date(obj.$date);
              }
            }, {
              // RegExp
              matchJSONValue: function (obj) {
                return hasOwn(obj, '$regexp') && hasOwn(obj, '$flags') && Object.keys(obj).length === 2;
              },
              matchObject: function (obj) {
                return obj instanceof RegExp;
              },
              toJSONValue: function (regexp) {
                return {
                  $regexp: regexp.source,
                  $flags: regexp.flags
                };
              },
              fromJSONValue: function (obj) {
                // Replaces duplicate / invalid flags.
                return new RegExp(obj.$regexp, obj.$flags // Cut off flags at 50 chars to avoid abusing RegExp for DOS.
                .slice(0, 50).replace(/[^gimuy]/g, '').replace(/(.)(?=.*\1)/g, ''));
              }
            }, {
              // NaN, Inf, -Inf. (These are the only objects with typeof !== 'object'
              // which we match.)
              matchJSONValue: function (obj) {
                return hasOwn(obj, '$InfNaN') && Object.keys(obj).length === 1;
              },
              matchObject: isInfOrNan,
              toJSONValue: function (obj) {
                var sign;

                if (Number.isNaN(obj)) {
                  sign = 0;
                } else if (obj === Infinity) {
                  sign = 1;
                } else {
                  sign = -1;
                }

                return {
                  $InfNaN: sign
                };
              },
              fromJSONValue: function (obj) {
                return obj.$InfNaN / 0;
              }
            }, {
              // Binary
              matchJSONValue: function (obj) {
                return hasOwn(obj, '$binary') && Object.keys(obj).length === 1;
              },
              matchObject: function (obj) {
                return typeof Uint8Array !== 'undefined' && obj instanceof Uint8Array || obj && hasOwn(obj, '$Uint8ArrayPolyfill');
              },
              toJSONValue: function (obj) {
                return {
                  $binary: Base64.encode(obj)
                };
              },
              fromJSONValue: function (obj) {
                return Base64.decode(obj.$binary);
              }
            }, {
              // Escaping one level
              matchJSONValue: function (obj) {
                return hasOwn(obj, '$escape') && Object.keys(obj).length === 1;
              },
              matchObject: function (obj) {
                var match = false;

                if (obj) {
                  var keyCount = Object.keys(obj).length;

                  if (keyCount === 1 || keyCount === 2) {
                    match = builtinConverters.some(function (converter) {
                      return converter.matchJSONValue(obj);
                    });
                  }
                }

                return match;
              },
              toJSONValue: function (obj) {
                var newObj = {};
                Object.keys(obj).forEach(function (key) {
                  newObj[key] = EJSON.toJSONValue(obj[key]);
                });
                return {
                  $escape: newObj
                };
              },
              fromJSONValue: function (obj) {
                var newObj = {};
                Object.keys(obj.$escape).forEach(function (key) {
                  newObj[key] = EJSON.fromJSONValue(obj.$escape[key]);
                });
                return newObj;
              }
            }, {
              // Custom
              matchJSONValue: function (obj) {
                return hasOwn(obj, '$type') && hasOwn(obj, '$value') && Object.keys(obj).length === 2;
              },
              matchObject: function (obj) {
                return EJSON._isCustomType(obj);
              },
              toJSONValue: function (obj) {
                var jsonValue = Meteor._noYieldsAllowed(function () {
                  return obj.toJSONValue();
                });

                return {
                  $type: obj.typeName(),
                  $value: jsonValue
                };
              },
              fromJSONValue: function (obj) {
                var typeName = obj.$type;

                if (!hasOwn(customTypes, typeName)) {
                  throw new Error("Custom EJSON type " + typeName + " is not defined");
                }

                var converter = customTypes[typeName];
                return Meteor._noYieldsAllowed(function () {
                  return converter(obj.$value);
                });
              }
            }];

            EJSON._isCustomType = function (obj) {
              return obj && typeof obj.toJSONValue === 'function' && typeof obj.typeName === 'function' && hasOwn(customTypes, obj.typeName());
            };

            EJSON._getTypes = function () {
              return customTypes;
            };

            EJSON._getConverters = function () {
              return builtinConverters;
            }; // Either return the JSON-compatible version of the argument, or undefined (if
            // the item isn't itself replaceable, but maybe some fields in it are)


            var toJSONValueHelper = function (item) {
              for (var i = 0; i < builtinConverters.length; i++) {
                var converter = builtinConverters[i];

                if (converter.matchObject(item)) {
                  return converter.toJSONValue(item);
                }
              }

              return undefined;
            }; // for both arrays and objects, in-place modification.


            var adjustTypesToJSONValue = function (obj) {
              // Is it an atom that we need to adjust?
              if (obj === null) {
                return null;
              }

              var maybeChanged = toJSONValueHelper(obj);

              if (maybeChanged !== undefined) {
                return maybeChanged;
              } // Other atoms are unchanged.


              if ((0, _typeof2.default)(obj) !== 'object') {
                return obj;
              } // Iterate over array or object structure.


              Object.keys(obj).forEach(function (key) {
                var value = obj[key];

                if ((0, _typeof2.default)(value) !== 'object' && value !== undefined && !isInfOrNan(value)) {
                  return; // continue
                }

                var changed = toJSONValueHelper(value);

                if (changed) {
                  obj[key] = changed;
                  return; // on to the next key
                } // if we get here, value is an object but not adjustable
                // at this level.  recurse.


                adjustTypesToJSONValue(value);
              });
              return obj;
            };

            EJSON._adjustTypesToJSONValue = adjustTypesToJSONValue;
            /**
             * @summary Serialize an EJSON-compatible value into its plain JSON
             *          representation.
             * @locus Anywhere
             * @param {EJSON} val A value to serialize to plain JSON.
             */

            EJSON.toJSONValue = function (item) {
              var changed = toJSONValueHelper(item);

              if (changed !== undefined) {
                return changed;
              }

              var newItem = item;

              if ((0, _typeof2.default)(item) === 'object') {
                newItem = EJSON.clone(item);
                adjustTypesToJSONValue(newItem);
              }

              return newItem;
            }; // Either return the argument changed to have the non-json
            // rep of itself (the Object version) or the argument itself.
            // DOES NOT RECURSE.  For actually getting the fully-changed value, use
            // EJSON.fromJSONValue


            var fromJSONValueHelper = function (value) {
              if ((0, _typeof2.default)(value) === 'object' && value !== null) {
                var keys = Object.keys(value);

                if (keys.length <= 2 && keys.every(function (k) {
                  return typeof k === 'string' && k.substr(0, 1) === '$';
                })) {
                  for (var i = 0; i < builtinConverters.length; i++) {
                    var converter = builtinConverters[i];

                    if (converter.matchJSONValue(value)) {
                      return converter.fromJSONValue(value);
                    }
                  }
                }
              }

              return value;
            }; // for both arrays and objects. Tries its best to just
            // use the object you hand it, but may return something
            // different if the object you hand it itself needs changing.


            var adjustTypesFromJSONValue = function (obj) {
              if (obj === null) {
                return null;
              }

              var maybeChanged = fromJSONValueHelper(obj);

              if (maybeChanged !== obj) {
                return maybeChanged;
              } // Other atoms are unchanged.


              if ((0, _typeof2.default)(obj) !== 'object') {
                return obj;
              }

              Object.keys(obj).forEach(function (key) {
                var value = obj[key];

                if ((0, _typeof2.default)(value) === 'object') {
                  var changed = fromJSONValueHelper(value);

                  if (value !== changed) {
                    obj[key] = changed;
                    return;
                  } // if we get here, value is an object but not adjustable
                  // at this level.  recurse.


                  adjustTypesFromJSONValue(value);
                }
              });
              return obj;
            };

            EJSON._adjustTypesFromJSONValue = adjustTypesFromJSONValue;
            /**
             * @summary Deserialize an EJSON value from its plain JSON representation.
             * @locus Anywhere
             * @param {JSONCompatible} val A value to deserialize into EJSON.
             */

            EJSON.fromJSONValue = function (item) {
              var changed = fromJSONValueHelper(item);

              if (changed === item && (0, _typeof2.default)(item) === 'object') {
                changed = EJSON.clone(item);
                adjustTypesFromJSONValue(changed);
              }

              return changed;
            };
            /**
             * @summary Serialize a value to a string. For EJSON values, the serialization
             *          fully represents the value. For non-EJSON values, serializes the
             *          same way as `JSON.stringify`.
             * @locus Anywhere
             * @param {EJSON} val A value to stringify.
             * @param {Object} [options]
             * @param {Boolean | Integer | String} options.indent Indents objects and
             * arrays for easy readability.  When `true`, indents by 2 spaces; when an
             * integer, indents by that number of spaces; and when a string, uses the
             * string as the indentation pattern.
             * @param {Boolean} options.canonical When `true`, stringifies keys in an
             *                                    object in sorted order.
             */

            EJSON.stringify = function (item, options) {
              var serialized;
              var json = EJSON.toJSONValue(item);

              if (options && (options.canonical || options.indent)) {
                var canonicalStringify;
                _module.watch(_require("./stringify"), {
                  "default": function (v) {
                    canonicalStringify = v;
                  }
                }, 0);
                serialized = canonicalStringify(json, options);
              } else {
                serialized = JSON.stringify(json);
              }

              return serialized;
            };
            /**
             * @summary Parse a string into an EJSON value. Throws an error if the string
             *          is not valid EJSON.
             * @locus Anywhere
             * @param {String} str A string to parse into an EJSON value.
             */

            EJSON.parse = function (item) {
              if (typeof item !== 'string') {
                throw new Error('EJSON.parse argument should be a string');
              }

              return EJSON.fromJSONValue(JSON.parse(item));
            };
            /**
             * @summary Returns true if `x` is a buffer of binary data, as returned from
             *          [`EJSON.newBinary`](#ejson_new_binary).
             * @param {Object} x The variable to check.
             * @locus Anywhere
             */

            EJSON.isBinary = function (obj) {
              return !!(typeof Uint8Array !== 'undefined' && obj instanceof Uint8Array || obj && obj.$Uint8ArrayPolyfill);
            };
            /**
             * @summary Return true if `a` and `b` are equal to each other.  Return false
             *          otherwise.  Uses the `equals` method on `a` if present, otherwise
             *          performs a deep comparison.
             * @locus Anywhere
             * @param {EJSON} a
             * @param {EJSON} b
             * @param {Object} [options]
             * @param {Boolean} options.keyOrderSensitive Compare in key sensitive order,
             * if supported by the JavaScript implementation.  For example, `{a: 1, b: 2}`
             * is equal to `{b: 2, a: 1}` only when `keyOrderSensitive` is `false`.  The
             * default is `false`.
             */

            EJSON.equals = function (a, b, options) {
              var i;
              var keyOrderSensitive = !!(options && options.keyOrderSensitive);

              if (a === b) {
                return true;
              } // This differs from the IEEE spec for NaN equality, b/c we don't want
              // anything ever with a NaN to be poisoned from becoming equal to anything.


              if (Number.isNaN(a) && Number.isNaN(b)) {
                return true;
              } // if either one is falsy, they'd have to be === to be equal


              if (!a || !b) {
                return false;
              }

              if (!((0, _typeof2.default)(a) === 'object' && (0, _typeof2.default)(b) === 'object')) {
                return false;
              }

              if (a instanceof Date && b instanceof Date) {
                return a.valueOf() === b.valueOf();
              }

              if (EJSON.isBinary(a) && EJSON.isBinary(b)) {
                if (a.length !== b.length) {
                  return false;
                }

                for (i = 0; i < a.length; i++) {
                  if (a[i] !== b[i]) {
                    return false;
                  }
                }

                return true;
              }

              if (typeof a.equals === 'function') {
                return a.equals(b, options);
              }

              if (typeof b.equals === 'function') {
                return b.equals(a, options);
              }

              if (a instanceof Array) {
                if (!(b instanceof Array)) {
                  return false;
                }

                if (a.length !== b.length) {
                  return false;
                }

                for (i = 0; i < a.length; i++) {
                  if (!EJSON.equals(a[i], b[i], options)) {
                    return false;
                  }
                }

                return true;
              } // fallback for custom types that don't implement their own equals


              switch (EJSON._isCustomType(a) + EJSON._isCustomType(b)) {
                case 1:
                  return false;

                case 2:
                  return EJSON.equals(EJSON.toJSONValue(a), EJSON.toJSONValue(b));

                default: // Do nothing

              } // fall back to structural equality of objects


              var ret;
              var aKeys = Object.keys(a);
              var bKeys = Object.keys(b);

              if (keyOrderSensitive) {
                i = 0;
                ret = aKeys.every(function (key) {
                  if (i >= bKeys.length) {
                    return false;
                  }

                  if (key !== bKeys[i]) {
                    return false;
                  }

                  if (!EJSON.equals(a[key], b[bKeys[i]], options)) {
                    return false;
                  }

                  i++;
                  return true;
                });
              } else {
                i = 0;
                ret = aKeys.every(function (key) {
                  if (!hasOwn(b, key)) {
                    return false;
                  }

                  if (!EJSON.equals(a[key], b[key], options)) {
                    return false;
                  }

                  i++;
                  return true;
                });
              }

              return ret && i === bKeys.length;
            };
            /**
             * @summary Return a deep copy of `val`.
             * @locus Anywhere
             * @param {EJSON} val A value to copy.
             */

            EJSON.clone = function (v) {
              var ret;

              if ((0, _typeof2.default)(v) !== 'object') {
                return v;
              }

              if (v === null) {
                return null; // null has typeof "object"
              }

              if (v instanceof Date) {
                return new Date(v.getTime());
              } // RegExps are not really EJSON elements (eg we don't define a serialization
              // for them), but they're immutable anyway, so we can support them in clone.


              if (v instanceof RegExp) {
                return v;
              }

              if (EJSON.isBinary(v)) {
                ret = EJSON.newBinary(v.length);

                for (var i = 0; i < v.length; i++) {
                  ret[i] = v[i];
                }

                return ret;
              }

              if (Array.isArray(v)) {
                return v.map(function (value) {
                  return EJSON.clone(value);
                });
              }

              if (isArguments(v)) {
                return Array.from(v).map(function (value) {
                  return EJSON.clone(value);
                });
              } // handle general user-defined typed Objects if they have a clone method


              if (typeof v.clone === 'function') {
                return v.clone();
              } // handle other custom types


              if (EJSON._isCustomType(v)) {
                return EJSON.fromJSONValue(EJSON.clone(EJSON.toJSONValue(v)), true);
              } // handle other objects


              ret = {};
              Object.keys(v).forEach(function (key) {
                ret[key] = EJSON.clone(v[key]);
              });
              return ret;
            };
            /**
             * @summary Allocate a new buffer of binary data that EJSON can serialize.
             * @locus Anywhere
             * @param {Number} size The number of bytes of binary data to allocate.
             */
            // EJSON.newBinary is the public documented API for this functionality,
            // but the implementation is in the 'base64' package to avoid
            // introducing a circular dependency. (If the implementation were here,
            // then 'base64' would have to use EJSON.newBinary, and 'ejson' would
            // also have to use 'base64'.)


            EJSON.newBinary = Base64.newBinary;
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "stringify.js": function (_require3, _exports3, _module2) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                             //
            // packages/ejson/stringify.js                                                                                 //
            //                                                                                                             //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require3("@babel/runtime/helpers/interopRequireDefault");

            var _typeof2 = _interopRequireDefault(_require3("@babel/runtime/helpers/typeof"));

            // Based on json2.js from https://github.com/douglascrockford/JSON-js
            //
            //    json2.js
            //    2012-10-08
            //
            //    Public Domain.
            //
            //    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
            function quote(string) {
              return JSON.stringify(string);
            }

            var str = function (key, holder, singleIndent, outerIndent, canonical) {
              var value = holder[key]; // What happens next depends on the value's type.

              switch ((0, _typeof2.default)(value)) {
                case 'string':
                  return quote(value);

                case 'number':
                  // JSON numbers must be finite. Encode non-finite numbers as null.
                  return isFinite(value) ? String(value) : 'null';

                case 'boolean':
                  return String(value);
                // If the type is 'object', we might be dealing with an object or an array or
                // null.

                case 'object':
                  // Due to a specification blunder in ECMAScript, typeof null is 'object',
                  // so watch out for that case.
                  if (!value) {
                    return 'null';
                  } // Make an array to hold the partial results of stringifying this object
                  // value.


                  var innerIndent = outerIndent + singleIndent;
                  var partial = []; // Is the value an array?

                  if (Array.isArray(value) || {}.hasOwnProperty.call(value, 'callee')) {
                    // The value is an array. Stringify every element. Use null as a
                    // placeholder for non-JSON values.
                    var length = value.length;

                    for (var i = 0; i < length; i += 1) {
                      partial[i] = str(i, value, singleIndent, innerIndent, canonical) || 'null';
                    } // Join all of the elements together, separated with commas, and wrap
                    // them in brackets.


                    var _v;

                    if (partial.length === 0) {
                      _v = '[]';
                    } else if (innerIndent) {
                      _v = '[\n' + innerIndent + partial.join(',\n' + innerIndent) + '\n' + outerIndent + ']';
                    } else {
                      _v = '[' + partial.join(',') + ']';
                    }

                    return _v;
                  } // Iterate through all of the keys in the object.


                  var keys = Object.keys(value);

                  if (canonical) {
                    keys = keys.sort();
                  }

                  keys.forEach(function (k) {
                    v = str(k, value, singleIndent, innerIndent, canonical);

                    if (v) {
                      partial.push(quote(k) + (innerIndent ? ': ' : ':') + v);
                    }
                  }); // Join all of the member texts together, separated with commas,
                  // and wrap them in braces.

                  if (partial.length === 0) {
                    v = '{}';
                  } else if (innerIndent) {
                    v = '{\n' + innerIndent + partial.join(',\n' + innerIndent) + '\n' + outerIndent + '}';
                  } else {
                    v = '{' + partial.join(',') + '}';
                  }

                  return v;

                default: // Do nothing

              }
            }; // If the JSON object does not yet have a stringify method, give it one.


            var canonicalStringify = function (value, options) {
              // Make a fake root object containing our value under the key of ''.
              // Return the result of stringifying the value.
              var allOptions = Object.assign({
                indent: '',
                canonical: false
              }, options);

              if (allOptions.indent === true) {
                allOptions.indent = '  ';
              } else if (typeof allOptions.indent === 'number') {
                var newIndent = '';

                for (var i = 0; i < allOptions.indent; i++) {
                  newIndent += ' ';
                }

                allOptions.indent = newIndent;
              }

              return str('', {
                '': value
              }, allOptions.indent, '', allOptions.canonical);
            };

            _module2.exportDefault(canonicalStringify);
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/ejson/ejson.js");

  /* Exports */
  Package._define("ejson", _exports2, {
    EJSON: EJSON
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var EJSON = Package.ejson.EJSON;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var check, Match;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "check": { "match.js": function (_require, _exports, _module) {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                  //
            // packages/check/match.js                                                                                          //
            //                                                                                                                  //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require("@babel/runtime/helpers/interopRequireDefault");

            var _toConsumableArray2 = _interopRequireDefault(_require("@babel/runtime/helpers/toConsumableArray"));

            var _typeof2 = _interopRequireDefault(_require("@babel/runtime/helpers/typeof"));

            _module.export({
              check: function () {
                return check;
              },
              Match: function () {
                return Match;
              }
            });
            var isPlainObject;
            _module.watch(_require("./isPlainObject"), {
              isPlainObject: function (v) {
                isPlainObject = v;
              }
            }, 0);
            // Things we explicitly do NOT support:
            //    - heterogenous arrays
            var currentArgumentChecker = new Meteor.EnvironmentVariable();
            var hasOwn = Object.prototype.hasOwnProperty;
            /**
             * @summary Check that a value matches a [pattern](#matchpatterns).
             * If the value does not match the pattern, throw a `Match.Error`.
             *
             * Particularly useful to assert that arguments to a function have the right
             * types and structure.
             * @locus Anywhere
             * @param {Any} value The value to check
             * @param {MatchPattern} pattern The pattern to match `value` against
             */

            function check(value, pattern) {
              // Record that check got called, if somebody cared.
              //
              // We use getOrNullIfOutsideFiber so that it's OK to call check()
              // from non-Fiber server contexts; the downside is that if you forget to
              // bindEnvironment on some random callback in your method/publisher,
              // it might not find the argumentChecker and you'll get an error about
              // not checking an argument that it looks like you're checking (instead
              // of just getting a "Node code must run in a Fiber" error).
              var argChecker = currentArgumentChecker.getOrNullIfOutsideFiber();

              if (argChecker) {
                argChecker.checking(value);
              }

              var result = testSubtree(value, pattern);

              if (result) {
                var err = new Match.Error(result.message);

                if (result.path) {
                  err.message += " in field " + result.path;
                  err.path = result.path;
                }

                throw err;
              }
            }

            ;
            /**
             * @namespace Match
             * @summary The namespace for all Match types and methods.
             */

            var Match = {
              Optional: function (pattern) {
                return new Optional(pattern);
              },
              Maybe: function (pattern) {
                return new Maybe(pattern);
              },
              OneOf: function () {
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                  args[_key] = arguments[_key];
                }

                return new OneOf(args);
              },
              Any: ['__any__'],
              Where: function (condition) {
                return new Where(condition);
              },
              ObjectIncluding: function (pattern) {
                return new ObjectIncluding(pattern);
              },
              ObjectWithValues: function (pattern) {
                return new ObjectWithValues(pattern);
              },
              // Matches only signed 32-bit integers
              Integer: ['__integer__'],
              // XXX matchers should know how to describe themselves for errors
              Error: Meteor.makeErrorType('Match.Error', function (msg) {
                this.message = "Match error: " + msg; // The path of the value that failed to match. Initially empty, this gets
                // populated by catching and rethrowing the exception as it goes back up the
                // stack.
                // E.g.: "vals[3].entity.created"

                this.path = ''; // If this gets sent over DDP, don't give full internal details but at least
                // provide something better than 500 Internal server error.

                this.sanitizedError = new Meteor.Error(400, 'Match failed');
              }),
              // Tests to see if value matches pattern. Unlike check, it merely returns true
              // or false (unless an error other than Match.Error was thrown). It does not
              // interact with _failIfArgumentsAreNotAllChecked.
              // XXX maybe also implement a Match.match which returns more information about
              //     failures but without using exception handling or doing what check()
              //     does with _failIfArgumentsAreNotAllChecked and Meteor.Error conversion

              /**
               * @summary Returns true if the value matches the pattern.
               * @locus Anywhere
               * @param {Any} value The value to check
               * @param {MatchPattern} pattern The pattern to match `value` against
               */
              test: function (value, pattern) {
                return !testSubtree(value, pattern);
              },
              // Runs `f.apply(context, args)`. If check() is not called on every element of
              // `args` (either directly or in the first level of an array), throws an error
              // (using `description` in the message).
              _failIfArgumentsAreNotAllChecked: function (f, context, args, description) {
                var argChecker = new ArgumentChecker(args, description);
                var result = currentArgumentChecker.withValue(argChecker, function () {
                  return f.apply(context, args);
                }); // If f didn't itself throw, make sure it checked all of its arguments.

                argChecker.throwUnlessAllArgumentsHaveBeenChecked();
                return result;
              }
            };

            var Optional = function () {
              function Optional(pattern) {
                this.pattern = pattern;
              }

              return Optional;
            }();

            var Maybe = function () {
              function Maybe(pattern) {
                this.pattern = pattern;
              }

              return Maybe;
            }();

            var OneOf = function () {
              function OneOf(choices) {
                if (!choices || choices.length === 0) {
                  throw new Error('Must provide at least one choice to Match.OneOf');
                }

                this.choices = choices;
              }

              return OneOf;
            }();

            var Where = function () {
              function Where(condition) {
                this.condition = condition;
              }

              return Where;
            }();

            var ObjectIncluding = function () {
              function ObjectIncluding(pattern) {
                this.pattern = pattern;
              }

              return ObjectIncluding;
            }();

            var ObjectWithValues = function () {
              function ObjectWithValues(pattern) {
                this.pattern = pattern;
              }

              return ObjectWithValues;
            }();

            var stringForErrorMessage = function (value) {
              var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

              if (value === null) {
                return 'null';
              }

              if (options.onlyShowType) {
                return (0, _typeof2.default)(value);
              } // Your average non-object things.  Saves from doing the try/catch below for.


              if ((0, _typeof2.default)(value) !== 'object') {
                return EJSON.stringify(value);
              }

              try {
                // Find objects with circular references since EJSON doesn't support them yet (Issue #4778 + Unaccepted PR)
                // If the native stringify is going to choke, EJSON.stringify is going to choke too.
                JSON.stringify(value);
              } catch (stringifyError) {
                if (stringifyError.name === 'TypeError') {
                  return (0, _typeof2.default)(value);
                }
              }

              return EJSON.stringify(value);
            };

            var typeofChecks = [[String, 'string'], [Number, 'number'], [Boolean, 'boolean'], // While we don't allow undefined/function in EJSON, this is good for optional
            // arguments with OneOf.
            [Function, 'function'], [undefined, 'undefined']]; // Return `false` if it matches. Otherwise, return an object with a `message` and a `path` field.

            var testSubtree = function (value, pattern) {
              // Match anything!
              if (pattern === Match.Any) {
                return false;
              } // Basic atomic types.
              // Do not match boxed objects (e.g. String, Boolean)


              for (var i = 0; i < typeofChecks.length; ++i) {
                if (pattern === typeofChecks[i][0]) {
                  if ((0, _typeof2.default)(value) === typeofChecks[i][1]) {
                    return false;
                  }

                  return {
                    message: "Expected " + typeofChecks[i][1] + ", got " + stringForErrorMessage(value, {
                      onlyShowType: true
                    }),
                    path: ''
                  };
                }
              }

              if (pattern === null) {
                if (value === null) {
                  return false;
                }

                return {
                  message: "Expected null, got " + stringForErrorMessage(value),
                  path: ''
                };
              } // Strings, numbers, and booleans match literally. Goes well with Match.OneOf.


              if (typeof pattern === 'string' || typeof pattern === 'number' || typeof pattern === 'boolean') {
                if (value === pattern) {
                  return false;
                }

                return {
                  message: "Expected " + pattern + ", got " + stringForErrorMessage(value),
                  path: ''
                };
              } // Match.Integer is special type encoded with array


              if (pattern === Match.Integer) {
                // There is no consistent and reliable way to check if variable is a 64-bit
                // integer. One of the popular solutions is to get reminder of division by 1
                // but this method fails on really large floats with big precision.
                // E.g.: 1.348192308491824e+23 % 1 === 0 in V8
                // Bitwise operators work consistantly but always cast variable to 32-bit
                // signed integer according to JavaScript specs.
                if (typeof value === 'number' && (value | 0) === value) {
                  return false;
                }

                return {
                  message: "Expected Integer, got " + stringForErrorMessage(value),
                  path: ''
                };
              } // 'Object' is shorthand for Match.ObjectIncluding({});


              if (pattern === Object) {
                pattern = Match.ObjectIncluding({});
              } // Array (checked AFTER Any, which is implemented as an Array).


              if (pattern instanceof Array) {
                if (pattern.length !== 1) {
                  return {
                    message: "Bad pattern: arrays must have one type element " + stringForErrorMessage(pattern),
                    path: ''
                  };
                }

                if (!Array.isArray(value) && !isArguments(value)) {
                  return {
                    message: "Expected array, got " + stringForErrorMessage(value),
                    path: ''
                  };
                }

                for (var _i = 0, length = value.length; _i < length; _i++) {
                  var result = testSubtree(value[_i], pattern[0]);

                  if (result) {
                    result.path = _prependPath(_i, result.path);
                    return result;
                  }
                }

                return false;
              } // Arbitrary validation checks. The condition can return false or throw a
              // Match.Error (ie, it can internally use check()) to fail.


              if (pattern instanceof Where) {
                var _result;

                try {
                  _result = pattern.condition(value);
                } catch (err) {
                  if (!(err instanceof Match.Error)) {
                    throw err;
                  }

                  return {
                    message: err.message,
                    path: err.path
                  };
                }

                if (_result) {
                  return false;
                } // XXX this error is terrible


                return {
                  message: 'Failed Match.Where validation',
                  path: ''
                };
              }

              if (pattern instanceof Maybe) {
                pattern = Match.OneOf(undefined, null, pattern.pattern);
              } else if (pattern instanceof Optional) {
                pattern = Match.OneOf(undefined, pattern.pattern);
              }

              if (pattern instanceof OneOf) {
                for (var _i2 = 0; _i2 < pattern.choices.length; ++_i2) {
                  var _result2 = testSubtree(value, pattern.choices[_i2]);

                  if (!_result2) {
                    // No error? Yay, return.
                    return false;
                  } // Match errors just mean try another choice.
                } // XXX this error is terrible


                return {
                  message: 'Failed Match.OneOf, Match.Maybe or Match.Optional validation',
                  path: ''
                };
              } // A function that isn't something we special-case is assumed to be a
              // constructor.


              if (pattern instanceof Function) {
                if (value instanceof pattern) {
                  return false;
                }

                return {
                  message: "Expected " + (pattern.name || 'particular constructor'),
                  path: ''
                };
              }

              var unknownKeysAllowed = false;
              var unknownKeyPattern;

              if (pattern instanceof ObjectIncluding) {
                unknownKeysAllowed = true;
                pattern = pattern.pattern;
              }

              if (pattern instanceof ObjectWithValues) {
                unknownKeysAllowed = true;
                unknownKeyPattern = [pattern.pattern];
                pattern = {}; // no required keys
              }

              if ((0, _typeof2.default)(pattern) !== 'object') {
                return {
                  message: 'Bad pattern: unknown pattern type',
                  path: ''
                };
              } // An object, with required and optional keys. Note that this does NOT do
              // structural matches against objects of special types that happen to match
              // the pattern: this really needs to be a plain old {Object}!


              if ((0, _typeof2.default)(value) !== 'object') {
                return {
                  message: "Expected object, got " + (0, _typeof2.default)(value),
                  path: ''
                };
              }

              if (value === null) {
                return {
                  message: "Expected object, got null",
                  path: ''
                };
              }

              if (!isPlainObject(value)) {
                return {
                  message: "Expected plain object",
                  path: ''
                };
              }

              var requiredPatterns = Object.create(null);
              var optionalPatterns = Object.create(null);
              Object.keys(pattern).forEach(function (key) {
                var subPattern = pattern[key];

                if (subPattern instanceof Optional || subPattern instanceof Maybe) {
                  optionalPatterns[key] = subPattern.pattern;
                } else {
                  requiredPatterns[key] = subPattern;
                }
              });

              for (var key in meteorBabelHelpers.sanitizeForInObject(Object(value))) {
                var subValue = value[key];

                if (hasOwn.call(requiredPatterns, key)) {
                  var _result3 = testSubtree(subValue, requiredPatterns[key]);

                  if (_result3) {
                    _result3.path = _prependPath(key, _result3.path);
                    return _result3;
                  }

                  delete requiredPatterns[key];
                } else if (hasOwn.call(optionalPatterns, key)) {
                  var _result4 = testSubtree(subValue, optionalPatterns[key]);

                  if (_result4) {
                    _result4.path = _prependPath(key, _result4.path);
                    return _result4;
                  }
                } else {
                  if (!unknownKeysAllowed) {
                    return {
                      message: 'Unknown key',
                      path: key
                    };
                  }

                  if (unknownKeyPattern) {
                    var _result5 = testSubtree(subValue, unknownKeyPattern[0]);

                    if (_result5) {
                      _result5.path = _prependPath(key, _result5.path);
                      return _result5;
                    }
                  }
                }
              }

              var keys = Object.keys(requiredPatterns);

              if (keys.length) {
                return {
                  message: "Missing key '" + keys[0] + "'",
                  path: ''
                };
              }
            };

            var ArgumentChecker =
            /*#__PURE__*/
            function () {
              function ArgumentChecker(args, description) {
                // Make a SHALLOW copy of the arguments. (We'll be doing identity checks
                // against its contents.)
                this.args = (0, _toConsumableArray2.default)(args); // Since the common case will be to check arguments in order, and we splice
                // out arguments when we check them, make it so we splice out from the end
                // rather than the beginning.

                this.args.reverse();
                this.description = description;
              }

              var _proto = ArgumentChecker.prototype;

              _proto.checking = function () {
                function checking(value) {
                  if (this._checkingOneValue(value)) {
                    return;
                  } // Allow check(arguments, [String]) or check(arguments.slice(1), [String])
                  // or check([foo, bar], [String]) to count... but only if value wasn't
                  // itself an argument.


                  if (Array.isArray(value) || isArguments(value)) {
                    Array.prototype.forEach.call(value, this._checkingOneValue.bind(this));
                  }
                }

                return checking;
              }();

              _proto._checkingOneValue = function () {
                function _checkingOneValue(value) {
                  for (var i = 0; i < this.args.length; ++i) {
                    // Is this value one of the arguments? (This can have a false positive if
                    // the argument is an interned primitive, but it's still a good enough
                    // check.)
                    // (NaN is not === to itself, so we have to check specially.)
                    if (value === this.args[i] || Number.isNaN(value) && Number.isNaN(this.args[i])) {
                      this.args.splice(i, 1);
                      return true;
                    }
                  }

                  return false;
                }

                return _checkingOneValue;
              }();

              _proto.throwUnlessAllArgumentsHaveBeenChecked = function () {
                function throwUnlessAllArgumentsHaveBeenChecked() {
                  if (this.args.length > 0) throw new Error("Did not check() all arguments during " + this.description);
                }

                return throwUnlessAllArgumentsHaveBeenChecked;
              }();

              return ArgumentChecker;
            }();

            var _jsKeywords = ['do', 'if', 'in', 'for', 'let', 'new', 'try', 'var', 'case', 'else', 'enum', 'eval', 'false', 'null', 'this', 'true', 'void', 'with', 'break', 'catch', 'class', 'const', 'super', 'throw', 'while', 'yield', 'delete', 'export', 'import', 'public', 'return', 'static', 'switch', 'typeof', 'default', 'extends', 'finally', 'package', 'private', 'continue', 'debugger', 'function', 'arguments', 'interface', 'protected', 'implements', 'instanceof']; // Assumes the base of path is already escaped properly
            // returns key + base

            var _prependPath = function (key, base) {
              if (typeof key === 'number' || key.match(/^[0-9]+$/)) {
                key = "[" + key + "]";
              } else if (!key.match(/^[a-z_$][0-9a-z_$]*$/i) || _jsKeywords.indexOf(key) >= 0) {
                key = JSON.stringify([key]);
              }

              if (base && base[0] !== '[') {
                return key + "." + base;
              }

              return key + base;
            };

            var isObject = function (value) {
              return (0, _typeof2.default)(value) === 'object' && value !== null;
            };

            var baseIsArguments = function (item) {
              return isObject(item) && Object.prototype.toString.call(item) === '[object Arguments]';
            };

            var isArguments = baseIsArguments(function () {
              return arguments;
            }()) ? baseIsArguments : function (value) {
              return isObject(value) && typeof value.callee === 'function';
            };
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "isPlainObject.js": function (_require3, _exports3, _module2) {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                  //
            // packages/check/isPlainObject.js                                                                                  //
            //                                                                                                                  //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module2.export({
              isPlainObject: function () {
                return isPlainObject;
              }
            });
            // Copy of jQuery.isPlainObject for the server side from jQuery v3.1.1.
            var class2type = {};
            var toString = class2type.toString;
            var hasOwn = Object.prototype.hasOwnProperty;
            var fnToString = hasOwn.toString;
            var ObjectFunctionString = fnToString.call(Object);
            var getProto = Object.getPrototypeOf;

            var isPlainObject = function (obj) {
              var proto;
              var Ctor; // Detect obvious negatives
              // Use toString instead of jQuery.type to catch host objects

              if (!obj || toString.call(obj) !== '[object Object]') {
                return false;
              }

              proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain

              if (!proto) {
                return true;
              } // Objects with prototype are plain iff they were constructed by a global Object function


              Ctor = hasOwn.call(proto, 'constructor') && proto.constructor;
              return typeof Ctor === 'function' && fnToString.call(Ctor) === ObjectFunctionString;
            };
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/check/match.js");

  /* Exports */
  Package._define("check", _exports2, {
    check: check,
    Match: Match
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var Random = Package.random.Random;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var Retry;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "retry": { "retry.js": function (_require, _exports, _module) {

            /////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                     //
            // packages/retry/retry.js                                                             //
            //                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////
            //
            _module.export({
              Retry: function () {
                return Retry;
              }
            });

            var Retry =
            /*#__PURE__*/
            function () {
              function Retry() {
                var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                    _ref$baseTimeout = _ref.baseTimeout,
                    baseTimeout = _ref$baseTimeout === void 0 ? 1000 : _ref$baseTimeout,
                    _ref$exponent = _ref.exponent,
                    exponent = _ref$exponent === void 0 ? 2.2 : _ref$exponent,
                    _ref$maxTimeout = _ref.maxTimeout,
                    maxTimeout = _ref$maxTimeout === void 0 ? 5 * 60 * 1000 : _ref$maxTimeout,
                    _ref$minTimeout = _ref.minTimeout,
                    minTimeout = _ref$minTimeout === void 0 ? 10 : _ref$minTimeout,
                    _ref$minCount = _ref.minCount,
                    minCount = _ref$minCount === void 0 ? 2 : _ref$minCount,
                    _ref$fuzz = _ref.fuzz,
                    fuzz = _ref$fuzz === void 0 ? 0.5 : _ref$fuzz;

                this.baseTimeout = baseTimeout;
                this.exponent = exponent;
                this.maxTimeout = maxTimeout;
                this.minTimeout = minTimeout;
                this.minCount = minCount;
                this.fuzz = fuzz;
                this.retryTimer = null;
              } // Reset a pending retry, if any.


              var _proto = Retry.prototype;

              _proto.clear = function () {
                function clear() {
                  if (this.retryTimer) {
                    clearTimeout(this.retryTimer);
                  }

                  this.retryTimer = null;
                }

                return clear;
              }(); // Calculate how long to wait in milliseconds to retry, based on the
              // `count` of which retry this is.


              _proto._timeout = function () {
                function _timeout(count) {
                  if (count < this.minCount) {
                    return this.minTimeout;
                  } // fuzz the timeout randomly, to avoid reconnect storms when a
                  // server goes down.


                  var timeout = Math.min(this.maxTimeout, this.baseTimeout * Math.pow(this.exponent, count)) * (Random.fraction() * this.fuzz + (1 - this.fuzz / 2));
                  return timeout;
                }

                return _timeout;
              }(); // Call `fn` after a delay, based on the `count` of which retry this is.


              _proto.retryLater = function () {
                function retryLater(count, fn) {
                  var timeout = this._timeout(count);

                  if (this.retryTimer) clearTimeout(this.retryTimer);
                  this.retryTimer = Meteor.setTimeout(fn, timeout);
                  return timeout;
                }

                return retryLater;
              }();

              return Retry;
            }();
            /////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/retry/retry.js");

  /* Exports */
  Package._define("retry", _exports2, {
    Retry: Retry
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var EJSON = Package.ejson.EJSON;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var IdMap;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "id-map": { "id-map.js": function (_require, _exports, _module) {

            //////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                          //
            // packages/id-map/id-map.js                                                                //
            //                                                                                          //
            //////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module.export({
              IdMap: function () {
                return IdMap;
              }
            });
            var hasOwn = Object.prototype.hasOwnProperty;

            var IdMap =
            /*#__PURE__*/
            function () {
              function IdMap(idStringify, idParse) {
                this.clear();
                this._idStringify = idStringify || JSON.stringify;
                this._idParse = idParse || JSON.parse;
              } // Some of these methods are designed to match methods on OrderedDict, since
              // (eg) ObserveMultiplex and _CachingChangeObserver use them interchangeably.
              // (Conceivably, this should be replaced with "UnorderedDict" with a specific
              // set of methods that overlap between the two.)


              var _proto = IdMap.prototype;

              _proto.get = function () {
                function get(id) {
                  var key = this._idStringify(id);

                  return this._map[key];
                }

                return get;
              }();

              _proto.set = function () {
                function set(id, value) {
                  var key = this._idStringify(id);

                  this._map[key] = value;
                }

                return set;
              }();

              _proto.remove = function () {
                function remove(id) {
                  var key = this._idStringify(id);

                  delete this._map[key];
                }

                return remove;
              }();

              _proto.has = function () {
                function has(id) {
                  var key = this._idStringify(id);

                  return hasOwn.call(this._map, key);
                }

                return has;
              }();

              _proto.empty = function () {
                function empty() {
                  for (var key in meteorBabelHelpers.sanitizeForInObject(this._map)) {
                    return false;
                  }

                  return true;
                }

                return empty;
              }();

              _proto.clear = function () {
                function clear() {
                  this._map = Object.create(null);
                }

                return clear;
              }(); // Iterates over the items in the map. Return `false` to break the loop.


              _proto.forEach = function () {
                function forEach(iterator) {
                  // don't use _.each, because we can't break out of it.
                  var keys = Object.keys(this._map);

                  for (var i = 0; i < keys.length; i++) {
                    var breakIfFalse = iterator.call(null, this._map[keys[i]], this._idParse(keys[i]));

                    if (breakIfFalse === false) {
                      return;
                    }
                  }
                }

                return forEach;
              }();

              _proto.size = function () {
                function size() {
                  return Object.keys(this._map).length;
                }

                return size;
              }();

              _proto.setDefault = function () {
                function setDefault(id, def) {
                  var key = this._idStringify(id);

                  if (hasOwn.call(this._map, key)) {
                    return this._map[key];
                  }

                  this._map[key] = def;
                  return def;
                }

                return setDefault;
              }(); // Assumes that values are EJSON-cloneable, and that we don't need to clone
              // IDs (ie, that nobody is going to mutate an ObjectId).


              _proto.clone = function () {
                function clone() {
                  var clone = new IdMap(this._idStringify, this._idParse);
                  this.forEach(function (value, id) {
                    clone.set(id, EJSON.clone(value));
                  });
                  return clone;
                }

                return clone;
              }();

              return IdMap;
            }();
            //////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/id-map/id-map.js");

  /* Exports */
  Package._define("id-map", _exports2, {
    IdMap: IdMap
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var check = Package.check.check;
  var Match = Package.check.Match;
  var Random = Package.random.Random;
  var EJSON = Package.ejson.EJSON;
  var Tracker = Package.tracker.Tracker;
  var Deps = Package.tracker.Deps;
  var Retry = Package.retry.Retry;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var DDPCommon;

  var _require = meteorInstall({ "node_modules": { "meteor": { "ddp-common": { "namespace.js": function () {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                              //
            // packages/ddp-common/namespace.js                                                                             //
            //                                                                                                              //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            /**
             * @namespace DDPCommon
             * @summary Namespace for DDPCommon-related methods/classes. Shared between 
             * `ddp-client` and `ddp-server`, where the ddp-client is the implementation
             * of a ddp client for both client AND server; and the ddp server is the
             * implementation of the livedata server and stream server. Common 
             * functionality shared between both can be shared under this namespace
             */
            DDPCommon = {};
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "heartbeat.js": function () {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                              //
            // packages/ddp-common/heartbeat.js                                                                             //
            //                                                                                                              //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // Heartbeat options:
            //   heartbeatInterval: interval to send pings, in milliseconds.
            //   heartbeatTimeout: timeout to close the connection if a reply isn't
            //     received, in milliseconds.
            //   sendPing: function to call to send a ping on the connection.
            //   onTimeout: function to call to close the connection.
            DDPCommon.Heartbeat =
            /*#__PURE__*/
            function () {
              function Heartbeat(options) {
                this.heartbeatInterval = options.heartbeatInterval;
                this.heartbeatTimeout = options.heartbeatTimeout;
                this._sendPing = options.sendPing;
                this._onTimeout = options.onTimeout;
                this._seenPacket = false;
                this._heartbeatIntervalHandle = null;
                this._heartbeatTimeoutHandle = null;
              }

              var _proto = Heartbeat.prototype;

              _proto.stop = function () {
                function stop() {
                  this._clearHeartbeatIntervalTimer();

                  this._clearHeartbeatTimeoutTimer();
                }

                return stop;
              }();

              _proto.start = function () {
                function start() {
                  this.stop();

                  this._startHeartbeatIntervalTimer();
                }

                return start;
              }();

              _proto._startHeartbeatIntervalTimer = function () {
                function _startHeartbeatIntervalTimer() {
                  var _this = this;

                  this._heartbeatIntervalHandle = Meteor.setInterval(function () {
                    return _this._heartbeatIntervalFired();
                  }, this.heartbeatInterval);
                }

                return _startHeartbeatIntervalTimer;
              }();

              _proto._startHeartbeatTimeoutTimer = function () {
                function _startHeartbeatTimeoutTimer() {
                  var _this2 = this;

                  this._heartbeatTimeoutHandle = Meteor.setTimeout(function () {
                    return _this2._heartbeatTimeoutFired();
                  }, this.heartbeatTimeout);
                }

                return _startHeartbeatTimeoutTimer;
              }();

              _proto._clearHeartbeatIntervalTimer = function () {
                function _clearHeartbeatIntervalTimer() {
                  if (this._heartbeatIntervalHandle) {
                    Meteor.clearInterval(this._heartbeatIntervalHandle);
                    this._heartbeatIntervalHandle = null;
                  }
                }

                return _clearHeartbeatIntervalTimer;
              }();

              _proto._clearHeartbeatTimeoutTimer = function () {
                function _clearHeartbeatTimeoutTimer() {
                  if (this._heartbeatTimeoutHandle) {
                    Meteor.clearTimeout(this._heartbeatTimeoutHandle);
                    this._heartbeatTimeoutHandle = null;
                  }
                }

                return _clearHeartbeatTimeoutTimer;
              }(); // The heartbeat interval timer is fired when we should send a ping.


              _proto._heartbeatIntervalFired = function () {
                function _heartbeatIntervalFired() {
                  // don't send ping if we've seen a packet since we last checked,
                  // *or* if we have already sent a ping and are awaiting a timeout.
                  // That shouldn't happen, but it's possible if
                  // `this.heartbeatInterval` is smaller than
                  // `this.heartbeatTimeout`.
                  if (!this._seenPacket && !this._heartbeatTimeoutHandle) {
                    this._sendPing(); // Set up timeout, in case a pong doesn't arrive in time.


                    this._startHeartbeatTimeoutTimer();
                  }

                  this._seenPacket = false;
                }

                return _heartbeatIntervalFired;
              }(); // The heartbeat timeout timer is fired when we sent a ping, but we
              // timed out waiting for the pong.


              _proto._heartbeatTimeoutFired = function () {
                function _heartbeatTimeoutFired() {
                  this._heartbeatTimeoutHandle = null;

                  this._onTimeout();
                }

                return _heartbeatTimeoutFired;
              }();

              _proto.messageReceived = function () {
                function messageReceived() {
                  // Tell periodic checkin that we have seen a packet, and thus it
                  // does not need to send a ping this cycle.
                  this._seenPacket = true; // If we were waiting for a pong, we got it.

                  if (this._heartbeatTimeoutHandle) {
                    this._clearHeartbeatTimeoutTimer();
                  }
                }

                return messageReceived;
              }();

              return Heartbeat;
            }();
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "utils.js": function (_require2, _exports, _module) {

            var _interopRequireDefault = _require2("@babel/runtime/helpers/interopRequireDefault");

            var _typeof2 = _interopRequireDefault(_require2("@babel/runtime/helpers/typeof"));

            _module.export({
              hasOwn: function () {
                return hasOwn;
              },
              slice: function () {
                return slice;
              },
              keys: function () {
                return keys;
              },
              isEmpty: function () {
                return isEmpty;
              },
              last: function () {
                return last;
              }
            });
            var hasOwn = Object.prototype.hasOwnProperty;
            var slice = Array.prototype.slice;

            function keys(obj) {
              return Object.keys(Object(obj));
            }

            function isEmpty(obj) {
              if (obj == null) {
                return true;
              }

              if (Array.isArray(obj) || typeof obj === "string") {
                return obj.length === 0;
              }

              for (var key in meteorBabelHelpers.sanitizeForInObject(obj)) {
                if (hasOwn.call(obj, key)) {
                  return false;
                }
              }

              return true;
            }

            function last(array, n, guard) {
              if (array == null) {
                return;
              }

              if (n == null || guard) {
                return array[array.length - 1];
              }

              return slice.call(array, Math.max(array.length - n, 0));
            }

            DDPCommon.SUPPORTED_DDP_VERSIONS = ['1', 'pre2', 'pre1'];

            DDPCommon.parseDDP = function (stringMessage) {
              try {
                var msg = JSON.parse(stringMessage);
              } catch (e) {
                Meteor._debug("Discarding message with invalid JSON", stringMessage);

                return null;
              } // DDP messages must be objects.


              if (msg === null || (0, _typeof2.default)(msg) !== 'object') {
                Meteor._debug("Discarding non-object DDP message", stringMessage);

                return null;
              } // massage msg to get it into "abstract ddp" rather than "wire ddp" format.
              // switch between "cleared" rep of unsetting fields and "undefined"
              // rep of same


              if (hasOwn.call(msg, 'cleared')) {
                if (!hasOwn.call(msg, 'fields')) {
                  msg.fields = {};
                }

                msg.cleared.forEach(function (clearKey) {
                  msg.fields[clearKey] = undefined;
                });
                delete msg.cleared;
              }

              ['fields', 'params', 'result'].forEach(function (field) {
                if (hasOwn.call(msg, field)) {
                  msg[field] = EJSON._adjustTypesFromJSONValue(msg[field]);
                }
              });
              return msg;
            };

            DDPCommon.stringifyDDP = function (msg) {
              var copy = EJSON.clone(msg); // swizzle 'changed' messages from 'fields undefined' rep to 'fields
              // and cleared' rep

              if (hasOwn.call(msg, 'fields')) {
                var cleared = [];
                Object.keys(msg.fields).forEach(function (key) {
                  var value = msg.fields[key];

                  if (typeof value === "undefined") {
                    cleared.push(key);
                    delete copy.fields[key];
                  }
                });

                if (!isEmpty(cleared)) {
                  copy.cleared = cleared;
                }

                if (isEmpty(copy.fields)) {
                  delete copy.fields;
                }
              } // adjust types to basic


              ['fields', 'params', 'result'].forEach(function (field) {
                if (hasOwn.call(copy, field)) {
                  copy[field] = EJSON._adjustTypesToJSONValue(copy[field]);
                }
              });

              if (msg.id && typeof msg.id !== 'string') {
                throw new Error("Message id is not a string");
              }

              return JSON.stringify(copy);
            };
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "method_invocation.js": function () {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                              //
            // packages/ddp-common/method_invocation.js                                                                     //
            //                                                                                                              //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // Instance name is this because it is usually referred to as this inside a
            // method definition

            /**
             * @summary The state for a single invocation of a method, referenced by this
             * inside a method definition.
             * @param {Object} options
             * @instanceName this
             * @showInstanceName true
             */
            DDPCommon.MethodInvocation =
            /*#__PURE__*/
            function () {
              function MethodInvocation(options) {
                // true if we're running not the actual method, but a stub (that is,
                // if we're on a client (which may be a browser, or in the future a
                // server connecting to another server) and presently running a
                // simulation of a server-side method for latency compensation
                // purposes). not currently true except in a client such as a browser,
                // since there's usually no point in running stubs unless you have a
                // zero-latency connection to the user.

                /**
                 * @summary Access inside a method invocation.  Boolean value, true if this invocation is a stub.
                 * @locus Anywhere
                 * @name  isSimulation
                 * @memberOf DDPCommon.MethodInvocation
                 * @instance
                 * @type {Boolean}
                 */
                this.isSimulation = options.isSimulation; // call this function to allow other method invocations (from the
                // same client) to continue running without waiting for this one to
                // complete.

                this._unblock = options.unblock || function () {};

                this._calledUnblock = false; // current user id

                /**
                 * @summary The id of the user that made this method call, or `null` if no user was logged in.
                 * @locus Anywhere
                 * @name  userId
                 * @memberOf DDPCommon.MethodInvocation
                 * @instance
                 */

                this.userId = options.userId; // sets current user id in all appropriate server contexts and
                // reruns subscriptions

                this._setUserId = options.setUserId || function () {}; // On the server, the connection this method call came in on.

                /**
                 * @summary Access inside a method invocation. The [connection](#meteor_onconnection) that this method was received on. `null` if the method is not associated with a connection, eg. a server initiated method call. Calls to methods made from a server method which was in turn initiated from the client share the same `connection`.
                 * @locus Server
                 * @name  connection
                 * @memberOf DDPCommon.MethodInvocation
                 * @instance
                 */

                this.connection = options.connection; // The seed for randomStream value generation

                this.randomSeed = options.randomSeed; // This is set by RandomStream.get; and holds the random stream state

                this.randomStream = null;
              }
              /**
               * @summary Call inside a method invocation.  Allow subsequent method from this client to begin running in a new fiber.
               * @locus Server
               * @memberOf DDPCommon.MethodInvocation
               * @instance
               */

              var _proto = MethodInvocation.prototype;

              _proto.unblock = function () {
                function unblock() {
                  this._calledUnblock = true;

                  this._unblock();
                }

                return unblock;
              }();
              /**
               * @summary Set the logged in user.
               * @locus Server
               * @memberOf DDPCommon.MethodInvocation
               * @instance
               * @param {String | null} userId The value that should be returned by `userId` on this connection.
               */

              _proto.setUserId = function () {
                function setUserId(userId) {
                  if (this._calledUnblock) {
                    throw new Error("Can't call setUserId in a method after calling unblock");
                  }

                  this.userId = userId;

                  this._setUserId(userId);
                }

                return setUserId;
              }();

              return MethodInvocation;
            }();
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "random_stream.js": function () {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                              //
            // packages/ddp-common/random_stream.js                                                                         //
            //                                                                                                              //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // RandomStream allows for generation of pseudo-random values, from a seed.
            //
            // We use this for consistent 'random' numbers across the client and server.
            // We want to generate probably-unique IDs on the client, and we ideally want
            // the server to generate the same IDs when it executes the method.
            //
            // For generated values to be the same, we must seed ourselves the same way,
            // and we must keep track of the current state of our pseudo-random generators.
            // We call this state the scope. By default, we use the current DDP method
            // invocation as our scope.  DDP now allows the client to specify a randomSeed.
            // If a randomSeed is provided it will be used to seed our random sequences.
            // In this way, client and server method calls will generate the same values.
            //
            // We expose multiple named streams; each stream is independent
            // and is seeded differently (but predictably from the name).
            // By using multiple streams, we support reordering of requests,
            // as long as they occur on different streams.
            //
            // @param options {Optional Object}
            //   seed: Array or value - Seed value(s) for the generator.
            //                          If an array, will be used as-is
            //                          If a value, will be converted to a single-value array
            //                          If omitted, a random array will be used as the seed.
            DDPCommon.RandomStream =
            /*#__PURE__*/
            function () {
              function RandomStream(options) {
                this.seed = [].concat(options.seed || randomToken());
                this.sequences = Object.create(null);
              } // Get a random sequence with the specified name, creating it if does not exist.
              // New sequences are seeded with the seed concatenated with the name.
              // By passing a seed into Random.create, we use the Alea generator.


              var _proto = RandomStream.prototype;

              _proto._sequence = function () {
                function _sequence(name) {
                  var self = this;
                  var sequence = self.sequences[name] || null;

                  if (sequence === null) {
                    var sequenceSeed = self.seed.concat(name);

                    for (var i = 0; i < sequenceSeed.length; i++) {
                      if (typeof sequenceSeed[i] === "function") {
                        sequenceSeed[i] = sequenceSeed[i]();
                      }
                    }

                    self.sequences[name] = sequence = Random.createWithSeeds.apply(null, sequenceSeed);
                  }

                  return sequence;
                }

                return _sequence;
              }();

              return RandomStream;
            }(); // Returns a random string of sufficient length for a random seed.
            // This is a placeholder function; a similar function is planned
            // for Random itself; when that is added we should remove this function,
            // and call Random's randomToken instead.


            function randomToken() {
              return Random.hexString(20);
            }

            ; // Returns the random stream with the specified name, in the specified
            // scope. If a scope is passed, then we use that to seed a (not
            // cryptographically secure) PRNG using the fast Alea algorithm.  If
            // scope is null (or otherwise falsey) then we use a generated seed.
            //
            // However, scope will normally be the current DDP method invocation,
            // so we'll use the stream with the specified name, and we should get
            // consistent values on the client and server sides of a method call.

            DDPCommon.RandomStream.get = function (scope, name) {
              if (!name) {
                name = "default";
              }

              if (!scope) {
                // There was no scope passed in; the sequence won't actually be
                // reproducible. but make it fast (and not cryptographically
                // secure) anyways, so that the behavior is similar to what you'd
                // get by passing in a scope.
                return Random.insecure;
              }

              var randomStream = scope.randomStream;

              if (!randomStream) {
                scope.randomStream = randomStream = new DDPCommon.RandomStream({
                  seed: scope.randomSeed
                });
              }

              return randomStream._sequence(name);
            }; // Creates a randomSeed for passing to a method call.
            // Note that we take enclosing as an argument,
            // though we expect it to be DDP._CurrentMethodInvocation.get()
            // However, we often evaluate makeRpcSeed lazily, and thus the relevant
            // invocation may not be the one currently in scope.
            // If enclosing is null, we'll use Random and values won't be repeatable.


            DDPCommon.makeRpcSeed = function (enclosing, methodName) {
              var stream = DDPCommon.RandomStream.get(enclosing, '/rpc/' + methodName);
              return stream.hexString(20);
            };
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  _require("/node_modules/meteor/ddp-common/namespace.js");
  _require("/node_modules/meteor/ddp-common/heartbeat.js");
  _require("/node_modules/meteor/ddp-common/utils.js");
  _require("/node_modules/meteor/ddp-common/method_invocation.js");
  _require("/node_modules/meteor/ddp-common/random_stream.js");

  /* Exports */
  Package._define("ddp-common", {
    DDPCommon: DDPCommon
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var Reload;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "reload": { "reload.js": function (_require, _exports, _module) {

            ///////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                           //
            // packages/reload/reload.js                                                                 //
            //                                                                                           //
            ///////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require("@babel/runtime/helpers/interopRequireDefault");

            var _typeof2 = _interopRequireDefault(_require("@babel/runtime/helpers/typeof"));

            _module.export({
              Reload: function () {
                return Reload;
              }
            });
            var Reload = {};
            var KEY_NAME = 'Meteor_Reload';
            var old_data = {}; // read in old data at startup.

            var old_json; // This logic for sessionStorage detection is based on browserstate/history.js

            var safeSessionStorage = null;

            try {
              // This throws a SecurityError on Chrome if cookies & localStorage are
              // explicitly disabled
              //
              // On Firefox with dom.storage.enabled set to false, sessionStorage is null
              //
              // We can't even do (typeof sessionStorage) on Chrome, it throws.  So we rely
              // on the throw if sessionStorage == null; the alternative is browser
              // detection, but this seems better.
              safeSessionStorage = window.sessionStorage; // Check we can actually use it

              if (safeSessionStorage) {
                safeSessionStorage.setItem('__dummy__', '1');
                safeSessionStorage.removeItem('__dummy__');
              } else {
                // Be consistently null, for safety
                safeSessionStorage = null;
              }
            } catch (e) {
              // Expected on chrome with strict security, or if sessionStorage not supported
              safeSessionStorage = null;
            } // Exported for test.


            Reload._getData = function () {
              return safeSessionStorage && safeSessionStorage.getItem(KEY_NAME);
            };

            if (safeSessionStorage) {
              old_json = Reload._getData();
              safeSessionStorage.removeItem(KEY_NAME);
            } else {// Unsupported browser (IE 6,7) or locked down security settings.
              // No session resumption.
              // Meteor._debug("XXX UNSUPPORTED BROWSER/SETTINGS");
            }

            if (!old_json) old_json = '{}';
            var old_parsed = {};

            try {
              old_parsed = JSON.parse(old_json);

              if ((0, _typeof2.default)(old_parsed) !== "object") {
                Meteor._debug("Got bad data on reload. Ignoring.");

                old_parsed = {};
              }
            } catch (err) {
              Meteor._debug("Got invalid JSON on reload. Ignoring.");
            }

            if (old_parsed.reload && (0, _typeof2.default)(old_parsed.data) === "object") {
              // Meteor._debug("Restoring reload data.");
              old_data = old_parsed.data;
            }

            var providers = []; ////////// External API //////////
            // Packages that support migration should register themselves by calling
            // this function. When it's time to migrate, callback will be called
            // with one argument, the "retry function," and an optional 'option'
            // argument (containing a key 'immediateMigration'). If the package
            // is ready to migrate, it should return [true, data], where data is
            // its migration data, an arbitrary JSON value (or [true] if it has
            // no migration data this time). If the package needs more time
            // before it is ready to migrate, it should return false. Then, once
            // it is ready to migrating again, it should call the retry
            // function. The retry function will return immediately, but will
            // schedule the migration to be retried, meaning that every package
            // will be polled once again for its migration data. If they are all
            // ready this time, then the migration will happen. name must be set if there
            // is migration data. If 'immediateMigration' is set in the options
            // argument, then it doesn't matter whether the package is ready to
            // migrate or not; the reload will happen immediately without waiting
            // (used for OAuth redirect login).
            //

            Reload._onMigrate = function (name, callback) {
              if (!callback) {
                // name not provided, so first arg is callback.
                callback = name;
                name = undefined;
              }

              providers.push({
                name: name,
                callback: callback
              });
            }; // Called by packages when they start up.
            // Returns the object that was saved, or undefined if none saved.
            //


            Reload._migrationData = function (name) {
              return old_data[name];
            }; // Options are the same as for `Reload._migrate`.


            var pollProviders = function (tryReload, options) {
              tryReload = tryReload || function () {};

              options = options || {};
              var migrationData = {};
              var remaining = providers.slice(0);
              var allReady = true;

              while (remaining.length) {
                var p = remaining.shift();
                var status = p.callback(tryReload, options);
                if (!status[0]) allReady = false;
                if (status.length > 1 && p.name) migrationData[p.name] = status[1];
              }

              ;
              if (allReady || options.immediateMigration) return migrationData;else return null;
            }; // Options are:
            //  - immediateMigration: true if the page will be reloaded immediately
            //    regardless of whether packages report that they are ready or not.


            Reload._migrate = function (tryReload, options) {
              // Make sure each package is ready to go, and collect their
              // migration data
              var migrationData = pollProviders(tryReload, options);
              if (migrationData === null) return false; // not ready yet..

              try {
                // Persist the migration data
                var json = JSON.stringify({
                  data: migrationData,
                  reload: true
                });
              } catch (err) {
                Meteor._debug("Couldn't serialize data for migration", migrationData);

                throw err;
              }

              if (safeSessionStorage) {
                try {
                  safeSessionStorage.setItem(KEY_NAME, json);
                } catch (err) {
                  // We should have already checked this, but just log - don't throw
                  Meteor._debug("Couldn't save data for migration to sessionStorage", err);
                }
              } else {
                Meteor._debug("Browser does not support sessionStorage. Not saving migration state.");
              }

              return true;
            }; // Allows tests to isolate the list of providers.


            Reload._withFreshProvidersForTest = function (f) {
              var originalProviders = providers.slice(0);
              providers = [];

              try {
                f();
              } finally {
                providers = originalProviders;
              }
            }; // Migrating reload: reload this page (presumably to pick up a new
            // version of the code or assets), but save the program state and
            // migrate it over. This function returns immediately. The reload
            // will happen at some point in the future once all of the packages
            // are ready to migrate.
            //


            var reloading = false;

            Reload._reload = function (options) {
              options = options || {};
              if (reloading) return;
              reloading = true;

              function tryReload() {
                setTimeout(reload, 1);
              }

              function reload() {
                if (Reload._migrate(tryReload, options)) {
                  // We'd like to make the browser reload the page using location.replace()
                  // instead of location.reload(), because this avoids validating assets
                  // with the server if we still have a valid cached copy. This doesn't work
                  // when the location contains a hash however, because that wouldn't reload
                  // the page and just scroll to the hash location instead.
                  if (window.location.hash || window.location.href.endsWith("#")) {
                    window.location.reload();
                  } else {
                    window.location.replace(window.location.href);
                  }
                }
              }

              tryReload();
            };
            ///////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/reload/reload.js");

  /* Exports */
  Package._define("reload", _exports2, {
    Reload: Reload
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var Retry = Package.retry.Retry;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var SockJS;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "socket-stream-client": { "sockjs-0.3.4.js": function (_require) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/socket-stream-client/sockjs-0.3.4.js                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require("@babel/runtime/helpers/interopRequireDefault");

            var _typeof2 = _interopRequireDefault(_require("@babel/runtime/helpers/typeof"));

            // XXX METEOR changes in <METEOR>

            /* SockJS client, version 0.3.4, http://sockjs.org, MIT License
            
            Copyright (c) 2011-2012 VMware, Inc.
            
            Permission is hereby granted, free of charge, to any person obtaining a copy
            of this software and associated documentation files (the "Software"), to deal
            in the Software without restriction, including without limitation the rights
            to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
            copies of the Software, and to permit persons to whom the Software is
            furnished to do so, subject to the following conditions:
            
            The above copyright notice and this permission notice shall be included in
            all copies or substantial portions of the Software.
            
            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
            IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
            FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
            AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
            LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
            OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
            THE SOFTWARE.
            */
            // <METEOR> Commented out JSO implementation (use json package instead).
            // JSON2 by Douglas Crockford (minified).
            // var JSON;JSON||(JSON={}),function(){function str(a,b){var c,d,e,f,g=gap,h,i=b[a];i&&typeof i=="object"&&typeof i.toJSON=="function"&&(i=i.toJSON(a)),typeof rep=="function"&&(i=rep.call(b,a,i));switch(typeof i){case"string":return quote(i);case"number":return isFinite(i)?String(i):"null";case"boolean":case"null":return String(i);case"object":if(!i)return"null";gap+=indent,h=[];if(Object.prototype.toString.apply(i)==="[object Array]"){f=i.length;for(c=0;c<f;c+=1)h[c]=str(c,i)||"null";e=h.length===0?"[]":gap?"[\n"+gap+h.join(",\n"+gap)+"\n"+g+"]":"["+h.join(",")+"]",gap=g;return e}if(rep&&typeof rep=="object"){f=rep.length;for(c=0;c<f;c+=1)typeof rep[c]=="string"&&(d=rep[c],e=str(d,i),e&&h.push(quote(d)+(gap?": ":":")+e))}else for(d in i)Object.prototype.hasOwnProperty.call(i,d)&&(e=str(d,i),e&&h.push(quote(d)+(gap?": ":":")+e));e=h.length===0?"{}":gap?"{\n"+gap+h.join(",\n"+gap)+"\n"+g+"}":"{"+h.join(",")+"}",gap=g;return e}}function quote(a){escapable.lastIndex=0;return escapable.test(a)?'"'+a.replace(escapable,function(a){var b=meta[a];return typeof b=="string"?b:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+a+'"'}function f(a){return a<10?"0"+a:a}"use strict",typeof Date.prototype.toJSON!="function"&&(Date.prototype.toJSON=function(a){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(a){return this.valueOf()});var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;typeof JSON.stringify!="function"&&(JSON.stringify=function(a,b,c){var d;gap="",indent="";if(typeof c=="number")for(d=0;d<c;d+=1)indent+=" ";else typeof c=="string"&&(indent=c);rep=b;if(!b||typeof b=="function"||typeof b=="object"&&typeof b.length=="number")return str("",{"":a});throw new Error("JSON.stringify")}),typeof JSON.parse!="function"&&(JSON.parse=function(text,reviver){function walk(a,b){var c,d,e=a[b];if(e&&typeof e=="object")for(c in e)Object.prototype.hasOwnProperty.call(e,c)&&(d=walk(e,c),d!==undefined?e[c]=d:delete e[c]);return reviver.call(a,b,e)}var j;text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){j=eval("("+text+")");return typeof reviver=="function"?walk({"":j},""):j}throw new SyntaxError("JSON.parse")})}()
            // </METEOR>
            //     [*] Including lib/index.js
            // Public object
            SockJS = function () {
              var _document = document;
              var _window = window;
              var utils = {}; //         [*] Including lib/reventtarget.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              /* Simplified implementation of DOM2 EventTarget.
               *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget
               */

              var REventTarget = function () {};

              REventTarget.prototype.addEventListener = function (eventType, listener) {
                if (!this._listeners) {
                  this._listeners = {};
                }

                if (!(eventType in this._listeners)) {
                  this._listeners[eventType] = [];
                }

                var arr = this._listeners[eventType];

                if (utils.arrIndexOf(arr, listener) === -1) {
                  arr.push(listener);
                }

                return;
              };

              REventTarget.prototype.removeEventListener = function (eventType, listener) {
                if (!(this._listeners && eventType in this._listeners)) {
                  return;
                }

                var arr = this._listeners[eventType];
                var idx = utils.arrIndexOf(arr, listener);

                if (idx !== -1) {
                  if (arr.length > 1) {
                    this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));
                  } else {
                    delete this._listeners[eventType];
                  }

                  return;
                }

                return;
              };

              REventTarget.prototype.dispatchEvent = function (event) {
                var t = event.type;
                var args = Array.prototype.slice.call(arguments, 0);

                if (this['on' + t]) {
                  this['on' + t].apply(this, args);
                }

                if (this._listeners && t in this._listeners) {
                  for (var i = 0; i < this._listeners[t].length; i++) {
                    this._listeners[t][i].apply(this, args);
                  }
                }
              }; //         [*] End of lib/reventtarget.js
              //         [*] Including lib/simpleevent.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var SimpleEvent = function (type, obj) {
                this.type = type;

                if (typeof obj !== 'undefined') {
                  for (var k in meteorBabelHelpers.sanitizeForInObject(obj)) {
                    if (!obj.hasOwnProperty(k)) continue;
                    this[k] = obj[k];
                  }
                }
              };

              SimpleEvent.prototype.toString = function () {
                var r = [];

                for (var k in meteorBabelHelpers.sanitizeForInObject(this)) {
                  if (!this.hasOwnProperty(k)) continue;
                  var v = this[k];
                  if (typeof v === 'function') v = '[function]';
                  r.push(k + '=' + v);
                }

                return 'SimpleEvent(' + r.join(', ') + ')';
              }; //         [*] End of lib/simpleevent.js
              //         [*] Including lib/eventemitter.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var EventEmitter = function (events) {
                var that = this;
                that._events = events || [];
                that._listeners = {};
              };

              EventEmitter.prototype.emit = function (type) {
                var that = this;

                that._verifyType(type);

                if (that._nuked) return;
                var args = Array.prototype.slice.call(arguments, 1);

                if (that['on' + type]) {
                  that['on' + type].apply(that, args);
                }

                if (type in that._listeners) {
                  for (var i = 0; i < that._listeners[type].length; i++) {
                    that._listeners[type][i].apply(that, args);
                  }
                }
              };

              EventEmitter.prototype.on = function (type, callback) {
                var that = this;

                that._verifyType(type);

                if (that._nuked) return;

                if (!(type in that._listeners)) {
                  that._listeners[type] = [];
                }

                that._listeners[type].push(callback);
              };

              EventEmitter.prototype._verifyType = function (type) {
                var that = this;

                if (utils.arrIndexOf(that._events, type) === -1) {
                  utils.log('Event ' + JSON.stringify(type) + ' not listed ' + JSON.stringify(that._events) + ' in ' + that);
                }
              };

              EventEmitter.prototype.nuke = function () {
                var that = this;
                that._nuked = true;

                for (var i = 0; i < that._events.length; i++) {
                  delete that[that._events[i]];
                }

                that._listeners = {};
              }; //         [*] End of lib/eventemitter.js
              //         [*] Including lib/utils.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var random_string_chars = 'abcdefghijklmnopqrstuvwxyz0123456789_';

              utils.random_string = function (length, max) {
                max = max || random_string_chars.length;
                var i,
                    ret = [];

                for (i = 0; i < length; i++) {
                  ret.push(random_string_chars.substr(Math.floor(Math.random() * max), 1));
                }

                return ret.join('');
              };

              utils.random_number = function (max) {
                return Math.floor(Math.random() * max);
              };

              utils.random_number_string = function (max) {
                var t = ('' + (max - 1)).length;
                var p = Array(t + 1).join('0');
                return (p + utils.random_number(max)).slice(-t);
              }; // Assuming that url looks like: http://asdasd:111/asd


              utils.getOrigin = function (url) {
                url += '/';
                var parts = url.split('/').slice(0, 3);
                return parts.join('/');
              };

              utils.isSameOriginUrl = function (url_a, url_b) {
                // location.origin would do, but it's not always available.
                if (!url_b) url_b = _window.location.href;
                return url_a.split('/').slice(0, 3).join('/') === url_b.split('/').slice(0, 3).join('/');
              }; // <METEOR>
              // https://github.com/sockjs/sockjs-client/issues/79


              utils.isSameOriginScheme = function (url_a, url_b) {
                if (!url_b) url_b = _window.location.href;
                return url_a.split(':')[0] === url_b.split(':')[0];
              }; // </METEOR>


              utils.getParentDomain = function (url) {
                // ipv4 ip address
                if (/^[0-9.]*$/.test(url)) return url; // ipv6 ip address

                if (/^\[/.test(url)) return url; // no dots

                if (!/[.]/.test(url)) return url;
                var parts = url.split('.').slice(1);
                return parts.join('.');
              };

              utils.objectExtend = function (dst, src) {
                for (var k in meteorBabelHelpers.sanitizeForInObject(src)) {
                  if (src.hasOwnProperty(k)) {
                    dst[k] = src[k];
                  }
                }

                return dst;
              };

              var WPrefix = '_jp';

              utils.polluteGlobalNamespace = function () {
                if (!(WPrefix in _window)) {
                  _window[WPrefix] = {};
                }
              };

              utils.closeFrame = function (code, reason) {
                return 'c' + JSON.stringify([code, reason]);
              };

              utils.userSetCode = function (code) {
                return code === 1000 || code >= 3000 && code <= 4999;
              }; // See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/
              // and RFC 2988.


              utils.countRTO = function (rtt) {
                var rto;

                if (rtt > 100) {
                  rto = 3 * rtt; // rto > 300msec
                } else {
                  rto = rtt + 200; // 200msec < rto <= 300msec
                }

                return rto;
              };

              utils.log = function () {
                if (_window.console && console.log && console.log.apply) {
                  console.log.apply(console, arguments);
                }
              };

              utils.bind = function (fun, that) {
                if (fun.bind) {
                  return fun.bind(that);
                } else {
                  return function () {
                    return fun.apply(that, arguments);
                  };
                }
              };

              utils.flatUrl = function (url) {
                return url.indexOf('?') === -1 && url.indexOf('#') === -1;
              }; // `relativeTo` is an optional absolute URL. If provided, `url` will be
              // interpreted relative to `relativeTo`. Defaults to `document.location`.
              // <METEOR>


              utils.amendUrl = function (url, relativeTo) {
                var baseUrl;

                if (relativeTo === undefined) {
                  baseUrl = _document.location;
                } else {
                  var protocolMatch = /^([a-z0-9.+-]+:)/i.exec(relativeTo);

                  if (protocolMatch) {
                    var protocol = protocolMatch[0].toLowerCase();
                    var rest = relativeTo.substring(protocol.length);
                    var hostMatch = /[a-z0-9\.-]+(:[0-9]+)?/.exec(rest);
                    if (hostMatch) var host = hostMatch[0];
                  }

                  if (!protocol || !host) throw new Error("relativeTo must be an absolute url");
                  baseUrl = {
                    protocol: protocol,
                    host: host
                  };
                }

                if (!url) {
                  throw new Error('Wrong url for SockJS');
                }

                if (!utils.flatUrl(url)) {
                  throw new Error('Only basic urls are supported in SockJS');
                } //  '//abc' --> 'http://abc'


                if (url.indexOf('//') === 0) {
                  url = baseUrl.protocol + url;
                } // '/abc' --> 'http://localhost:1234/abc'


                if (url.indexOf('/') === 0) {
                  url = baseUrl.protocol + '//' + baseUrl.host + url;
                } // </METEOR>
                // strip trailing slashes


                url = url.replace(/[/]+$/, ''); // We have a full url here, with proto and host. For some browsers
                // http://localhost:80/ is not in the same origin as http://localhost/
                // Remove explicit :80 or :443 in such cases. See #74

                var parts = url.split("/");

                if (parts[0] === "http:" && /:80$/.test(parts[2]) || parts[0] === "https:" && /:443$/.test(parts[2])) {
                  parts[2] = parts[2].replace(/:(80|443)$/, "");
                }

                url = parts.join("/");
                return url;
              }; // IE doesn't support [].indexOf.


              utils.arrIndexOf = function (arr, obj) {
                for (var i = 0; i < arr.length; i++) {
                  if (arr[i] === obj) {
                    return i;
                  }
                }

                return -1;
              };

              utils.arrSkip = function (arr, obj) {
                var idx = utils.arrIndexOf(arr, obj);

                if (idx === -1) {
                  return arr.slice();
                } else {
                  var dst = arr.slice(0, idx);
                  return dst.concat(arr.slice(idx + 1));
                }
              }; // Via: https://gist.github.com/1133122/2121c601c5549155483f50be3da5305e83b8c5df


              utils.isArray = Array.isArray || function (value) {
                return {}.toString.call(value).indexOf('Array') >= 0;
              };

              utils.delay = function (t, fun) {
                if (typeof t === 'function') {
                  fun = t;
                  t = 0;
                }

                return setTimeout(fun, t);
              }; // Chars worth escaping, as defined by Douglas Crockford:
              //   https://github.com/douglascrockford/JSON-js/blob/47a9882cddeb1e8529e07af9736218075372b8ac/json2.js#L196


              var json_escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
                  json_lookup = {
                "\0": "\\u0000",
                "\x01": "\\u0001",
                "\x02": "\\u0002",
                "\x03": "\\u0003",
                "\x04": "\\u0004",
                "\x05": "\\u0005",
                "\x06": "\\u0006",
                "\x07": "\\u0007",
                "\b": "\\b",
                "\t": "\\t",
                "\n": "\\n",
                "\x0B": "\\u000b",
                "\f": "\\f",
                "\r": "\\r",
                "\x0E": "\\u000e",
                "\x0F": "\\u000f",
                "\x10": "\\u0010",
                "\x11": "\\u0011",
                "\x12": "\\u0012",
                "\x13": "\\u0013",
                "\x14": "\\u0014",
                "\x15": "\\u0015",
                "\x16": "\\u0016",
                "\x17": "\\u0017",
                "\x18": "\\u0018",
                "\x19": "\\u0019",
                "\x1A": "\\u001a",
                "\x1B": "\\u001b",
                "\x1C": "\\u001c",
                "\x1D": "\\u001d",
                "\x1E": "\\u001e",
                "\x1F": "\\u001f",
                "\"": "\\\"",
                "\\": "\\\\",
                "\x7F": "\\u007f",
                "\x80": "\\u0080",
                "\x81": "\\u0081",
                "\x82": "\\u0082",
                "\x83": "\\u0083",
                "\x84": "\\u0084",
                "\x85": "\\u0085",
                "\x86": "\\u0086",
                "\x87": "\\u0087",
                "\x88": "\\u0088",
                "\x89": "\\u0089",
                "\x8A": "\\u008a",
                "\x8B": "\\u008b",
                "\x8C": "\\u008c",
                "\x8D": "\\u008d",
                "\x8E": "\\u008e",
                "\x8F": "\\u008f",
                "\x90": "\\u0090",
                "\x91": "\\u0091",
                "\x92": "\\u0092",
                "\x93": "\\u0093",
                "\x94": "\\u0094",
                "\x95": "\\u0095",
                "\x96": "\\u0096",
                "\x97": "\\u0097",
                "\x98": "\\u0098",
                "\x99": "\\u0099",
                "\x9A": "\\u009a",
                "\x9B": "\\u009b",
                "\x9C": "\\u009c",
                "\x9D": "\\u009d",
                "\x9E": "\\u009e",
                "\x9F": "\\u009f",
                "\xAD": "\\u00ad",
                "\u0600": "\\u0600",
                "\u0601": "\\u0601",
                "\u0602": "\\u0602",
                "\u0603": "\\u0603",
                "\u0604": "\\u0604",
                "\u070F": "\\u070f",
                "\u17B4": "\\u17b4",
                "\u17B5": "\\u17b5",
                "\u200C": "\\u200c",
                "\u200D": "\\u200d",
                "\u200E": "\\u200e",
                "\u200F": "\\u200f",
                "\u2028": "\\u2028",
                "\u2029": "\\u2029",
                "\u202A": "\\u202a",
                "\u202B": "\\u202b",
                "\u202C": "\\u202c",
                "\u202D": "\\u202d",
                "\u202E": "\\u202e",
                "\u202F": "\\u202f",
                "\u2060": "\\u2060",
                "\u2061": "\\u2061",
                "\u2062": "\\u2062",
                "\u2063": "\\u2063",
                "\u2064": "\\u2064",
                "\u2065": "\\u2065",
                "\u2066": "\\u2066",
                "\u2067": "\\u2067",
                "\u2068": "\\u2068",
                "\u2069": "\\u2069",
                "\u206A": "\\u206a",
                "\u206B": "\\u206b",
                "\u206C": "\\u206c",
                "\u206D": "\\u206d",
                "\u206E": "\\u206e",
                "\u206F": "\\u206f",
                "\uFEFF": "\\ufeff",
                "\uFFF0": "\\ufff0",
                "\uFFF1": "\\ufff1",
                "\uFFF2": "\\ufff2",
                "\uFFF3": "\\ufff3",
                "\uFFF4": "\\ufff4",
                "\uFFF5": "\\ufff5",
                "\uFFF6": "\\ufff6",
                "\uFFF7": "\\ufff7",
                "\uFFF8": "\\ufff8",
                "\uFFF9": "\\ufff9",
                "\uFFFA": "\\ufffa",
                "\uFFFB": "\\ufffb",
                "\uFFFC": "\\ufffc",
                "\uFFFD": "\\ufffd",
                "\uFFFE": "\\ufffe",
                "\uFFFF": "\\uffff"
              }; // Some extra characters that Chrome gets wrong, and substitutes with
              // something else on the wire.

              var extra_escapable = /[\x00-\x1f\ud800-\udfff\ufffe\uffff\u0300-\u0333\u033d-\u0346\u034a-\u034c\u0350-\u0352\u0357-\u0358\u035c-\u0362\u0374\u037e\u0387\u0591-\u05af\u05c4\u0610-\u0617\u0653-\u0654\u0657-\u065b\u065d-\u065e\u06df-\u06e2\u06eb-\u06ec\u0730\u0732-\u0733\u0735-\u0736\u073a\u073d\u073f-\u0741\u0743\u0745\u0747\u07eb-\u07f1\u0951\u0958-\u095f\u09dc-\u09dd\u09df\u0a33\u0a36\u0a59-\u0a5b\u0a5e\u0b5c-\u0b5d\u0e38-\u0e39\u0f43\u0f4d\u0f52\u0f57\u0f5c\u0f69\u0f72-\u0f76\u0f78\u0f80-\u0f83\u0f93\u0f9d\u0fa2\u0fa7\u0fac\u0fb9\u1939-\u193a\u1a17\u1b6b\u1cda-\u1cdb\u1dc0-\u1dcf\u1dfc\u1dfe\u1f71\u1f73\u1f75\u1f77\u1f79\u1f7b\u1f7d\u1fbb\u1fbe\u1fc9\u1fcb\u1fd3\u1fdb\u1fe3\u1feb\u1fee-\u1fef\u1ff9\u1ffb\u1ffd\u2000-\u2001\u20d0-\u20d1\u20d4-\u20d7\u20e7-\u20e9\u2126\u212a-\u212b\u2329-\u232a\u2adc\u302b-\u302c\uaab2-\uaab3\uf900-\ufa0d\ufa10\ufa12\ufa15-\ufa1e\ufa20\ufa22\ufa25-\ufa26\ufa2a-\ufa2d\ufa30-\ufa6d\ufa70-\ufad9\ufb1d\ufb1f\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufb4e\ufff0-\uffff]/g,
                  extra_lookup; // JSON Quote string. Use native implementation when possible.

              var JSONQuote = JSON && JSON.stringify || function (string) {
                json_escapable.lastIndex = 0;

                if (json_escapable.test(string)) {
                  string = string.replace(json_escapable, function (a) {
                    return json_lookup[a];
                  });
                }

                return '"' + string + '"';
              }; // This may be quite slow, so let's delay until user actually uses bad
              // characters.


              var unroll_lookup = function (escapable) {
                var i;
                var unrolled = {};
                var c = [];

                for (i = 0; i < 65536; i++) {
                  c.push(String.fromCharCode(i));
                }

                escapable.lastIndex = 0;
                c.join('').replace(escapable, function (a) {
                  unrolled[a] = "\\u" + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
                  return '';
                });
                escapable.lastIndex = 0;
                return unrolled;
              }; // Quote string, also taking care of unicode characters that browsers
              // often break. Especially, take care of unicode surrogates:
              //    http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates


              utils.quote = function (string) {
                var quoted = JSONQuote(string); // In most cases this should be very fast and good enough.

                extra_escapable.lastIndex = 0;

                if (!extra_escapable.test(quoted)) {
                  return quoted;
                }

                if (!extra_lookup) extra_lookup = unroll_lookup(extra_escapable);
                return quoted.replace(extra_escapable, function (a) {
                  return extra_lookup[a];
                });
              };

              var _all_protocols = ['websocket', 'xdr-streaming', 'xhr-streaming', 'iframe-eventsource', 'iframe-htmlfile', 'xdr-polling', 'xhr-polling', 'iframe-xhr-polling', 'jsonp-polling'];

              utils.probeProtocols = function () {
                var probed = {};

                for (var i = 0; i < _all_protocols.length; i++) {
                  var protocol = _all_protocols[i]; // User can have a typo in protocol name.

                  probed[protocol] = SockJS[protocol] && SockJS[protocol].enabled();
                }

                return probed;
              };

              utils.detectProtocols = function (probed, protocols_whitelist, info) {
                var pe = {},
                    protocols = [];
                if (!protocols_whitelist) protocols_whitelist = _all_protocols;

                for (var i = 0; i < protocols_whitelist.length; i++) {
                  var protocol = protocols_whitelist[i];
                  pe[protocol] = probed[protocol];
                }

                var maybe_push = function (protos) {
                  var proto = protos.shift();

                  if (pe[proto]) {
                    protocols.push(proto);
                  } else {
                    if (protos.length > 0) {
                      maybe_push(protos);
                    }
                  }
                }; // 1. Websocket


                if (info.websocket !== false) {
                  maybe_push(['websocket']);
                } // 2. Streaming


                if (pe['xhr-streaming'] && !info.null_origin) {
                  protocols.push('xhr-streaming');
                } else {
                  if (pe['xdr-streaming'] && !info.cookie_needed && !info.null_origin) {
                    protocols.push('xdr-streaming');
                  } else {
                    maybe_push(['iframe-eventsource', 'iframe-htmlfile']);
                  }
                } // 3. Polling


                if (pe['xhr-polling'] && !info.null_origin) {
                  protocols.push('xhr-polling');
                } else {
                  if (pe['xdr-polling'] && !info.cookie_needed && !info.null_origin) {
                    protocols.push('xdr-polling');
                  } else {
                    maybe_push(['iframe-xhr-polling', 'jsonp-polling']);
                  }
                }

                return protocols;
              }; //         [*] End of lib/utils.js
              //         [*] Including lib/dom.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */
              // May be used by htmlfile jsonp and transports.


              var MPrefix = '_sockjs_global';

              utils.createHook = function () {
                var window_id = 'a' + utils.random_string(8);

                if (!(MPrefix in _window)) {
                  var map = {};

                  _window[MPrefix] = function (window_id) {
                    if (!(window_id in map)) {
                      map[window_id] = {
                        id: window_id,
                        del: function () {
                          delete map[window_id];
                        }
                      };
                    }

                    return map[window_id];
                  };
                }

                return _window[MPrefix](window_id);
              };

              utils.attachMessage = function (listener) {
                utils.attachEvent('message', listener);
              };

              utils.attachEvent = function (event, listener) {
                if (typeof _window.addEventListener !== 'undefined') {
                  _window.addEventListener(event, listener, false);
                } else {
                  // IE quirks.
                  // According to: http://stevesouders.com/misc/test-postmessage.php
                  // the message gets delivered only to 'document', not 'window'.
                  _document.attachEvent("on" + event, listener); // I get 'window' for ie8.


                  _window.attachEvent("on" + event, listener);
                }
              };

              utils.detachMessage = function (listener) {
                utils.detachEvent('message', listener);
              };

              utils.detachEvent = function (event, listener) {
                if (typeof _window.addEventListener !== 'undefined') {
                  _window.removeEventListener(event, listener, false);
                } else {
                  _document.detachEvent("on" + event, listener);

                  _window.detachEvent("on" + event, listener);
                }
              };

              var on_unload = {}; // Things registered after beforeunload are to be called immediately.

              var after_unload = false;

              var trigger_unload_callbacks = function () {
                for (var ref in meteorBabelHelpers.sanitizeForInObject(on_unload)) {
                  on_unload[ref]();
                  delete on_unload[ref];
                }

                ;
              };

              var unload_triggered = function () {
                if (after_unload) return;
                after_unload = true;
                trigger_unload_callbacks();
              }; // 'unload' alone is not reliable in opera within an iframe, but we
              // can't use `beforeunload` as IE fires it on javascript: links.


              utils.attachEvent('unload', unload_triggered);

              utils.unload_add = function (listener) {
                var ref = utils.random_string(8);
                on_unload[ref] = listener;

                if (after_unload) {
                  utils.delay(trigger_unload_callbacks);
                }

                return ref;
              };

              utils.unload_del = function (ref) {
                if (ref in on_unload) delete on_unload[ref];
              };

              utils.createIframe = function (iframe_url, error_callback) {
                var iframe = _document.createElement('iframe');

                var tref, unload_ref;

                var unattach = function () {
                  clearTimeout(tref); // Explorer had problems with that.

                  try {
                    iframe.onload = null;
                  } catch (x) {}

                  iframe.onerror = null;
                };

                var cleanup = function () {
                  if (iframe) {
                    unattach(); // This timeout makes chrome fire onbeforeunload event
                    // within iframe. Without the timeout it goes straight to
                    // onunload.

                    setTimeout(function () {
                      if (iframe) {
                        iframe.parentNode.removeChild(iframe);
                      }

                      iframe = null;
                    }, 0);
                    utils.unload_del(unload_ref);
                  }
                };

                var onerror = function (r) {
                  if (iframe) {
                    cleanup();
                    error_callback(r);
                  }
                };

                var post = function (msg, origin) {
                  try {
                    // When the iframe is not loaded, IE raises an exception
                    // on 'contentWindow'.
                    if (iframe && iframe.contentWindow) {
                      iframe.contentWindow.postMessage(msg, origin);
                    }
                  } catch (x) {}

                  ;
                };

                iframe.src = iframe_url;
                iframe.style.display = 'none';
                iframe.style.position = 'absolute';

                iframe.onerror = function () {
                  onerror('onerror');
                };

                iframe.onload = function () {
                  // `onload` is triggered before scripts on the iframe are
                  // executed. Give it few seconds to actually load stuff.
                  clearTimeout(tref);
                  tref = setTimeout(function () {
                    onerror('onload timeout');
                  }, 2000);
                };

                _document.body.appendChild(iframe);

                tref = setTimeout(function () {
                  onerror('timeout');
                }, 15000);
                unload_ref = utils.unload_add(cleanup);
                return {
                  post: post,
                  cleanup: cleanup,
                  loaded: unattach
                };
              };

              utils.createHtmlfile = function (iframe_url, error_callback) {
                var doc = new ActiveXObject('htmlfile');
                var tref, unload_ref;
                var iframe;

                var unattach = function () {
                  clearTimeout(tref);
                };

                var cleanup = function () {
                  if (doc) {
                    unattach();
                    utils.unload_del(unload_ref);
                    iframe.parentNode.removeChild(iframe);
                    iframe = doc = null;
                    CollectGarbage();
                  }
                };

                var onerror = function (r) {
                  if (doc) {
                    cleanup();
                    error_callback(r);
                  }
                };

                var post = function (msg, origin) {
                  try {
                    // When the iframe is not loaded, IE raises an exception
                    // on 'contentWindow'.
                    if (iframe && iframe.contentWindow) {
                      iframe.contentWindow.postMessage(msg, origin);
                    }
                  } catch (x) {}

                  ;
                };

                doc.open();
                doc.write('<html><s' + 'cript>' + 'document.domain="' + document.domain + '";' + '</s' + 'cript></html>');
                doc.close();
                doc.parentWindow[WPrefix] = _window[WPrefix];
                var c = doc.createElement('div');
                doc.body.appendChild(c);
                iframe = doc.createElement('iframe');
                c.appendChild(iframe);
                iframe.src = iframe_url;
                tref = setTimeout(function () {
                  onerror('timeout');
                }, 15000);
                unload_ref = utils.unload_add(cleanup);
                return {
                  post: post,
                  cleanup: cleanup,
                  loaded: unattach
                };
              }; //         [*] End of lib/dom.js
              //         [*] Including lib/dom2.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var AbstractXHRObject = function () {};

              AbstractXHRObject.prototype = new EventEmitter(['chunk', 'finish']);

              AbstractXHRObject.prototype._start = function (method, url, payload, opts) {
                var that = this;

                try {
                  that.xhr = new XMLHttpRequest();
                } catch (x) {}

                ;

                if (!that.xhr) {
                  try {
                    that.xhr = new _window.ActiveXObject('Microsoft.XMLHTTP');
                  } catch (x) {}

                  ;
                }

                if (_window.ActiveXObject || _window.XDomainRequest) {
                  // IE8 caches even POSTs
                  url += (url.indexOf('?') === -1 ? '?' : '&') + 't=' + +new Date();
                } // Explorer tends to keep connection open, even after the
                // tab gets closed: http://bugs.jquery.com/ticket/5280


                that.unload_ref = utils.unload_add(function () {
                  that._cleanup(true);
                });

                try {
                  that.xhr.open(method, url, true);
                } catch (e) {
                  // IE raises an exception on wrong port.
                  that.emit('finish', 0, '');

                  that._cleanup();

                  return;
                }

                ;

                if (!opts || !opts.no_credentials) {
                  // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :
                  // "This never affects same-site requests."
                  that.xhr.withCredentials = 'true';
                }

                if (opts && opts.headers) {
                  for (var key in meteorBabelHelpers.sanitizeForInObject(opts.headers)) {
                    that.xhr.setRequestHeader(key, opts.headers[key]);
                  }
                }

                that.xhr.onreadystatechange = function () {
                  if (that.xhr) {
                    var x = that.xhr;

                    switch (x.readyState) {
                      case 3:
                        // IE doesn't like peeking into responseText or status
                        // on Microsoft.XMLHTTP and readystate=3
                        try {
                          var status = x.status;
                          var text = x.responseText;
                        } catch (x) {}

                        ; // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450

                        if (status === 1223) status = 204; // IE does return readystate == 3 for 404 answers.

                        if (text && text.length > 0) {
                          that.emit('chunk', status, text);
                        }

                        break;

                      case 4:
                        var status = x.status; // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450

                        if (status === 1223) status = 204;
                        that.emit('finish', status, x.responseText);

                        that._cleanup(false);

                        break;
                    }
                  }
                };

                that.xhr.send(payload);
              };

              AbstractXHRObject.prototype._cleanup = function (abort) {
                var that = this;
                if (!that.xhr) return;
                utils.unload_del(that.unload_ref); // IE needs this field to be a function

                that.xhr.onreadystatechange = function () {};

                if (abort) {
                  try {
                    that.xhr.abort();
                  } catch (x) {}

                  ;
                }

                that.unload_ref = that.xhr = null;
              };

              AbstractXHRObject.prototype.close = function () {
                var that = this;
                that.nuke();

                that._cleanup(true);
              };

              var XHRCorsObject = utils.XHRCorsObject = function () {
                var that = this,
                    args = arguments;
                utils.delay(function () {
                  that._start.apply(that, args);
                });
              };

              XHRCorsObject.prototype = new AbstractXHRObject();

              var XHRLocalObject = utils.XHRLocalObject = function (method, url, payload) {
                var that = this;
                utils.delay(function () {
                  that._start(method, url, payload, {
                    no_credentials: true
                  });
                });
              };

              XHRLocalObject.prototype = new AbstractXHRObject(); // References:
              //   http://ajaxian.com/archives/100-line-ajax-wrapper
              //   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx

              var XDRObject = utils.XDRObject = function (method, url, payload) {
                var that = this;
                utils.delay(function () {
                  that._start(method, url, payload);
                });
              };

              XDRObject.prototype = new EventEmitter(['chunk', 'finish']);

              XDRObject.prototype._start = function (method, url, payload) {
                var that = this;
                var xdr = new XDomainRequest(); // IE caches even POSTs

                url += (url.indexOf('?') === -1 ? '?' : '&') + 't=' + +new Date();

                var onerror = xdr.ontimeout = xdr.onerror = function () {
                  that.emit('finish', 0, '');

                  that._cleanup(false);
                };

                xdr.onprogress = function () {
                  that.emit('chunk', 200, xdr.responseText);
                };

                xdr.onload = function () {
                  that.emit('finish', 200, xdr.responseText);

                  that._cleanup(false);
                };

                that.xdr = xdr;
                that.unload_ref = utils.unload_add(function () {
                  that._cleanup(true);
                });

                try {
                  // Fails with AccessDenied if port number is bogus
                  that.xdr.open(method, url);
                  that.xdr.send(payload);
                } catch (x) {
                  onerror();
                }
              };

              XDRObject.prototype._cleanup = function (abort) {
                var that = this;
                if (!that.xdr) return;
                utils.unload_del(that.unload_ref);
                that.xdr.ontimeout = that.xdr.onerror = that.xdr.onprogress = that.xdr.onload = null;

                if (abort) {
                  try {
                    that.xdr.abort();
                  } catch (x) {}

                  ;
                }

                that.unload_ref = that.xdr = null;
              };

              XDRObject.prototype.close = function () {
                var that = this;
                that.nuke();

                that._cleanup(true);
              }; // 1. Is natively via XHR
              // 2. Is natively via XDR
              // 3. Nope, but postMessage is there so it should work via the Iframe.
              // 4. Nope, sorry.


              utils.isXHRCorsCapable = function () {
                if (_window.XMLHttpRequest && 'withCredentials' in new XMLHttpRequest()) {
                  return 1;
                } // XDomainRequest doesn't work if page is served from file://


                if (_window.XDomainRequest && _document.domain) {
                  return 2;
                }

                if (IframeTransport.enabled()) {
                  return 3;
                }

                return 4;
              }; //         [*] End of lib/dom2.js
              //         [*] Including lib/sockjs.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var SockJS = function (url, dep_protocols_whitelist, options) {
                if (!(this instanceof SockJS)) {
                  // makes `new` optional
                  return new SockJS(url, dep_protocols_whitelist, options);
                }

                var that = this,
                    protocols_whitelist;
                that._options = {
                  devel: false,
                  debug: false,
                  protocols_whitelist: [],
                  info: undefined,
                  rtt: undefined
                };

                if (options) {
                  utils.objectExtend(that._options, options);
                }

                that._base_url = utils.amendUrl(url);
                that._server = that._options.server || utils.random_number_string(1000);

                if (that._options.protocols_whitelist && that._options.protocols_whitelist.length) {
                  protocols_whitelist = that._options.protocols_whitelist;
                } else {
                  // Deprecated API
                  if (typeof dep_protocols_whitelist === 'string' && dep_protocols_whitelist.length > 0) {
                    protocols_whitelist = [dep_protocols_whitelist];
                  } else if (utils.isArray(dep_protocols_whitelist)) {
                    protocols_whitelist = dep_protocols_whitelist;
                  } else {
                    protocols_whitelist = null;
                  }

                  if (protocols_whitelist) {
                    that._debug('Deprecated API: Use "protocols_whitelist" option ' + 'instead of supplying protocol list as a second ' + 'parameter to SockJS constructor.');
                  }
                }

                that._protocols = [];
                that.protocol = null;
                that.readyState = SockJS.CONNECTING;
                that._ir = createInfoReceiver(that._base_url);

                that._ir.onfinish = function (info, rtt) {
                  that._ir = null;

                  if (info) {
                    if (that._options.info) {
                      // Override if user supplies the option
                      info = utils.objectExtend(info, that._options.info);
                    }

                    if (that._options.rtt) {
                      rtt = that._options.rtt;
                    }

                    that._applyInfo(info, rtt, protocols_whitelist);

                    that._didClose();
                  } else {
                    that._didClose(1002, 'Can\'t connect to server', true);
                  }
                };
              }; // Inheritance


              SockJS.prototype = new REventTarget();
              SockJS.version = "0.3.4";
              SockJS.CONNECTING = 0;
              SockJS.OPEN = 1;
              SockJS.CLOSING = 2;
              SockJS.CLOSED = 3;

              SockJS.prototype._debug = function () {
                if (this._options.debug) utils.log.apply(utils, arguments);
              };

              SockJS.prototype._dispatchOpen = function () {
                var that = this;

                if (that.readyState === SockJS.CONNECTING) {
                  if (that._transport_tref) {
                    clearTimeout(that._transport_tref);
                    that._transport_tref = null;
                  }

                  that.readyState = SockJS.OPEN;
                  that.dispatchEvent(new SimpleEvent("open"));
                } else {
                  // The server might have been restarted, and lost track of our
                  // connection.
                  that._didClose(1006, "Server lost session");
                }
              };

              SockJS.prototype._dispatchMessage = function (data) {
                var that = this;
                if (that.readyState !== SockJS.OPEN) return;
                that.dispatchEvent(new SimpleEvent("message", {
                  data: data
                }));
              };

              SockJS.prototype._dispatchHeartbeat = function (data) {
                var that = this;
                if (that.readyState !== SockJS.OPEN) return;
                that.dispatchEvent(new SimpleEvent('heartbeat', {}));
              };

              SockJS.prototype._didClose = function (code, reason, force) {
                var that = this;
                if (that.readyState !== SockJS.CONNECTING && that.readyState !== SockJS.OPEN && that.readyState !== SockJS.CLOSING) throw new Error('INVALID_STATE_ERR');

                if (that._ir) {
                  that._ir.nuke();

                  that._ir = null;
                }

                if (that._transport) {
                  that._transport.doCleanup();

                  that._transport = null;
                }

                var close_event = new SimpleEvent("close", {
                  code: code,
                  reason: reason,
                  wasClean: utils.userSetCode(code)
                });

                if (!utils.userSetCode(code) && that.readyState === SockJS.CONNECTING && !force) {
                  if (that._try_next_protocol(close_event)) {
                    return;
                  }

                  close_event = new SimpleEvent("close", {
                    code: 2000,
                    reason: "All transports failed",
                    wasClean: false,
                    last_event: close_event
                  });
                }

                that.readyState = SockJS.CLOSED;
                utils.delay(function () {
                  that.dispatchEvent(close_event);
                });
              };

              SockJS.prototype._didMessage = function (data) {
                var that = this;
                var type = data.slice(0, 1);

                switch (type) {
                  case 'o':
                    that._dispatchOpen();

                    break;

                  case 'a':
                    var payload = JSON.parse(data.slice(1) || '[]');

                    for (var i = 0; i < payload.length; i++) {
                      that._dispatchMessage(payload[i]);
                    }

                    break;

                  case 'm':
                    var payload = JSON.parse(data.slice(1) || 'null');

                    that._dispatchMessage(payload);

                    break;

                  case 'c':
                    var payload = JSON.parse(data.slice(1) || '[]');

                    that._didClose(payload[0], payload[1]);

                    break;

                  case 'h':
                    that._dispatchHeartbeat();

                    break;
                }
              };

              SockJS.prototype._try_next_protocol = function (close_event) {
                var that = this;

                if (that.protocol) {
                  that._debug('Closed transport:', that.protocol, '' + close_event);

                  that.protocol = null;
                }

                if (that._transport_tref) {
                  clearTimeout(that._transport_tref);
                  that._transport_tref = null;
                }

                while (1) {
                  var protocol = that.protocol = that._protocols.shift();

                  if (!protocol) {
                    return false;
                  } // Some protocols require access to `body`, what if were in
                  // the `head`?


                  if (SockJS[protocol] && SockJS[protocol].need_body === true && (!_document.body || typeof _document.readyState !== 'undefined' && _document.readyState !== 'complete')) {
                    that._protocols.unshift(protocol);

                    that.protocol = 'waiting-for-load';
                    utils.attachEvent('load', function () {
                      that._try_next_protocol();
                    });
                    return true;
                  }

                  if (!SockJS[protocol] || !SockJS[protocol].enabled(that._options)) {
                    that._debug('Skipping transport:', protocol);
                  } else {
                    var roundTrips = SockJS[protocol].roundTrips || 1;
                    var to = (that._options.rto || 0) * roundTrips || 5000;
                    that._transport_tref = utils.delay(to, function () {
                      if (that.readyState === SockJS.CONNECTING) {
                        // I can't understand how it is possible to run
                        // this timer, when the state is CLOSED, but
                        // apparently in IE everythin is possible.
                        that._didClose(2007, "Transport timeouted");
                      }
                    });
                    var connid = utils.random_string(8);
                    var trans_url = that._base_url + '/' + that._server + '/' + connid;

                    that._debug('Opening transport:', protocol, ' url:' + trans_url, ' RTO:' + that._options.rto);

                    that._transport = new SockJS[protocol](that, trans_url, that._base_url);
                    return true;
                  }
                }
              };

              SockJS.prototype.close = function (code, reason) {
                var that = this;
                if (code && !utils.userSetCode(code)) throw new Error("INVALID_ACCESS_ERR");

                if (that.readyState !== SockJS.CONNECTING && that.readyState !== SockJS.OPEN) {
                  return false;
                }

                that.readyState = SockJS.CLOSING;

                that._didClose(code || 1000, reason || "Normal closure");

                return true;
              };

              SockJS.prototype.send = function (data) {
                var that = this;
                if (that.readyState === SockJS.CONNECTING) throw new Error('INVALID_STATE_ERR');

                if (that.readyState === SockJS.OPEN) {
                  that._transport.doSend(utils.quote('' + data));
                }

                return true;
              };

              SockJS.prototype._applyInfo = function (info, rtt, protocols_whitelist) {
                var that = this;
                that._options.info = info;
                that._options.rtt = rtt;
                that._options.rto = utils.countRTO(rtt);
                that._options.info.null_origin = !_document.domain; // Servers can override base_url, eg to provide a randomized domain name and
                // avoid browser per-domain connection limits.

                if (info.base_url) // <METEOR>
                  that._base_url = utils.amendUrl(info.base_url, that._base_url); // </METEOR>

                var probed = utils.probeProtocols();
                that._protocols = utils.detectProtocols(probed, protocols_whitelist, info); // <METEOR>
                // https://github.com/sockjs/sockjs-client/issues/79
                // Hack to avoid XDR when using different protocols
                // We're on IE trying to do cross-protocol. jsonp only.

                if (!utils.isSameOriginScheme(that._base_url) && 2 === utils.isXHRCorsCapable()) {
                  that._protocols = ['jsonp-polling'];
                } // </METEOR>
              }; //         [*] End of lib/sockjs.js
              //         [*] Including lib/trans-websocket.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var WebSocketTransport = SockJS.websocket = function (ri, trans_url) {
                var that = this;
                var url = trans_url + '/websocket';

                if (url.slice(0, 5) === 'https') {
                  url = 'wss' + url.slice(5);
                } else {
                  url = 'ws' + url.slice(4);
                }

                that.ri = ri;
                that.url = url;
                var Constructor = _window.WebSocket || _window.MozWebSocket;
                that.ws = new Constructor(that.url);

                that.ws.onmessage = function (e) {
                  that.ri._didMessage(e.data);
                }; // Firefox has an interesting bug. If a websocket connection is
                // created after onunload, it stays alive even when user
                // navigates away from the page. In such situation let's lie -
                // let's not open the ws connection at all. See:
                // https://github.com/sockjs/sockjs-client/issues/28
                // https://bugzilla.mozilla.org/show_bug.cgi?id=696085


                that.unload_ref = utils.unload_add(function () {
                  that.ws.close();
                });

                that.ws.onclose = function () {
                  that.ri._didMessage(utils.closeFrame(1006, "WebSocket connection broken"));
                };
              };

              WebSocketTransport.prototype.doSend = function (data) {
                this.ws.send('[' + data + ']');
              };

              WebSocketTransport.prototype.doCleanup = function () {
                var that = this;
                var ws = that.ws;

                if (ws) {
                  ws.onmessage = ws.onclose = null;
                  ws.close();
                  utils.unload_del(that.unload_ref);
                  that.unload_ref = that.ri = that.ws = null;
                }
              };

              WebSocketTransport.enabled = function () {
                return !!(_window.WebSocket || _window.MozWebSocket);
              }; // In theory, ws should require 1 round trip. But in chrome, this is
              // not very stable over SSL. Most likely a ws connection requires a
              // separate SSL connection, in which case 2 round trips are an
              // absolute minumum.


              WebSocketTransport.roundTrips = 2; //         [*] End of lib/trans-websocket.js
              //         [*] Including lib/trans-sender.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var BufferedSender = function () {};

              BufferedSender.prototype.send_constructor = function (sender) {
                var that = this;
                that.send_buffer = [];
                that.sender = sender;
              };

              BufferedSender.prototype.doSend = function (message) {
                var that = this;
                that.send_buffer.push(message);

                if (!that.send_stop) {
                  that.send_schedule();
                }
              }; // For polling transports in a situation when in the message callback,
              // new message is being send. If the sending connection was started
              // before receiving one, it is possible to saturate the network and
              // timeout due to the lack of receiving socket. To avoid that we delay
              // sending messages by some small time, in order to let receiving
              // connection be started beforehand. This is only a halfmeasure and
              // does not fix the big problem, but it does make the tests go more
              // stable on slow networks.


              BufferedSender.prototype.send_schedule_wait = function () {
                var that = this;
                var tref;

                that.send_stop = function () {
                  that.send_stop = null;
                  clearTimeout(tref);
                };

                tref = utils.delay(25, function () {
                  that.send_stop = null;
                  that.send_schedule();
                });
              };

              BufferedSender.prototype.send_schedule = function () {
                var that = this;

                if (that.send_buffer.length > 0) {
                  var payload = '[' + that.send_buffer.join(',') + ']';
                  that.send_stop = that.sender(that.trans_url, payload, function (success, abort_reason) {
                    that.send_stop = null;

                    if (success === false) {
                      that.ri._didClose(1006, 'Sending error ' + abort_reason);
                    } else {
                      that.send_schedule_wait();
                    }
                  });
                  that.send_buffer = [];
                }
              };

              BufferedSender.prototype.send_destructor = function () {
                var that = this;

                if (that._send_stop) {
                  that._send_stop();
                }

                that._send_stop = null;
              };

              var jsonPGenericSender = function (url, payload, callback) {
                var that = this;

                if (!('_send_form' in that)) {
                  var form = that._send_form = _document.createElement('form');

                  var area = that._send_area = _document.createElement('textarea');

                  area.name = 'd';
                  form.style.display = 'none';
                  form.style.position = 'absolute';
                  form.method = 'POST';
                  form.enctype = 'application/x-www-form-urlencoded';
                  form.acceptCharset = "UTF-8";
                  form.appendChild(area);

                  _document.body.appendChild(form);
                }

                var form = that._send_form;
                var area = that._send_area;
                var id = 'a' + utils.random_string(8);
                form.target = id;
                form.action = url + '/jsonp_send?i=' + id;
                var iframe;

                try {
                  // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
                  iframe = _document.createElement('<iframe name="' + id + '">');
                } catch (x) {
                  iframe = _document.createElement('iframe');
                  iframe.name = id;
                }

                iframe.id = id;
                form.appendChild(iframe);
                iframe.style.display = 'none';

                try {
                  area.value = payload;
                } catch (e) {
                  utils.log('Your browser is seriously broken. Go home! ' + e.message);
                }

                form.submit();

                var completed = function (e) {
                  if (!iframe.onerror) return;
                  iframe.onreadystatechange = iframe.onerror = iframe.onload = null; // Opera mini doesn't like if we GC iframe
                  // immediately, thus this timeout.

                  utils.delay(500, function () {
                    iframe.parentNode.removeChild(iframe);
                    iframe = null;
                  });
                  area.value = ''; // It is not possible to detect if the iframe succeeded or
                  // failed to submit our form.

                  callback(true);
                };

                iframe.onerror = iframe.onload = completed;

                iframe.onreadystatechange = function (e) {
                  if (iframe.readyState == 'complete') completed();
                };

                return completed;
              };

              var createAjaxSender = function (AjaxObject) {
                return function (url, payload, callback) {
                  var xo = new AjaxObject('POST', url + '/xhr_send', payload);

                  xo.onfinish = function (status, text) {
                    callback(status === 200 || status === 204, 'http status ' + status);
                  };

                  return function (abort_reason) {
                    callback(false, abort_reason);
                  };
                };
              }; //         [*] End of lib/trans-sender.js
              //         [*] Including lib/trans-jsonp-receiver.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */
              // Parts derived from Socket.io:
              //    https://github.com/LearnBoost/socket.io/blob/0.6.17/lib/socket.io/transports/jsonp-polling.js
              // and jQuery-JSONP:
              //    https://code.google.com/p/jquery-jsonp/source/browse/trunk/core/jquery.jsonp.js


              var jsonPGenericReceiver = function (url, callback) {
                var tref;

                var script = _document.createElement('script');

                var script2; // Opera synchronous load trick.

                var close_script = function (frame) {
                  if (script2) {
                    script2.parentNode.removeChild(script2);
                    script2 = null;
                  }

                  if (script) {
                    clearTimeout(tref); // Unfortunately, you can't really abort script loading of
                    // the script.

                    script.parentNode.removeChild(script);
                    script.onreadystatechange = script.onerror = script.onload = script.onclick = null;
                    script = null;
                    callback(frame);
                    callback = null;
                  }
                }; // IE9 fires 'error' event after orsc or before, in random order.


                var loaded_okay = false;
                var error_timer = null;
                script.id = 'a' + utils.random_string(8);
                script.src = url;
                script.type = 'text/javascript';
                script.charset = 'UTF-8';

                script.onerror = function (e) {
                  if (!error_timer) {
                    // Delay firing close_script.
                    error_timer = setTimeout(function () {
                      if (!loaded_okay) {
                        close_script(utils.closeFrame(1006, "JSONP script loaded abnormally (onerror)"));
                      }
                    }, 1000);
                  }
                };

                script.onload = function (e) {
                  close_script(utils.closeFrame(1006, "JSONP script loaded abnormally (onload)"));
                };

                script.onreadystatechange = function (e) {
                  if (/loaded|closed/.test(script.readyState)) {
                    if (script && script.htmlFor && script.onclick) {
                      loaded_okay = true;

                      try {
                        // In IE, actually execute the script.
                        script.onclick();
                      } catch (x) {}
                    }

                    if (script) {
                      close_script(utils.closeFrame(1006, "JSONP script loaded abnormally (onreadystatechange)"));
                    }
                  }
                }; // IE: event/htmlFor/onclick trick.
                // One can't rely on proper order for onreadystatechange. In order to
                // make sure, set a 'htmlFor' and 'event' properties, so that
                // script code will be installed as 'onclick' handler for the
                // script object. Later, onreadystatechange, manually execute this
                // code. FF and Chrome doesn't work with 'event' and 'htmlFor'
                // set. For reference see:
                //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html
                // Also, read on that about script ordering:
                //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order


                if (typeof script.async === 'undefined' && _document.attachEvent) {
                  // According to mozilla docs, in recent browsers script.async defaults
                  // to 'true', so we may use it to detect a good browser:
                  // https://developer.mozilla.org/en/HTML/Element/script
                  if (!/opera/i.test(navigator.userAgent)) {
                    // Naively assume we're in IE
                    try {
                      script.htmlFor = script.id;
                      script.event = "onclick";
                    } catch (x) {}

                    script.async = true;
                  } else {
                    // Opera, second sync script hack
                    script2 = _document.createElement('script');
                    script2.text = "try{var a = document.getElementById('" + script.id + "'); if(a)a.onerror();}catch(x){};";
                    script.async = script2.async = false;
                  }
                }

                if (typeof script.async !== 'undefined') {
                  script.async = true;
                } // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.


                tref = setTimeout(function () {
                  close_script(utils.closeFrame(1006, "JSONP script loaded abnormally (timeout)"));
                }, 35000);

                var head = _document.getElementsByTagName('head')[0];

                head.insertBefore(script, head.firstChild);

                if (script2) {
                  head.insertBefore(script2, head.firstChild);
                }

                return close_script;
              }; //         [*] End of lib/trans-jsonp-receiver.js
              //         [*] Including lib/trans-jsonp-polling.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */
              // The simplest and most robust transport, using the well-know cross
              // domain hack - JSONP. This transport is quite inefficient - one
              // mssage could use up to one http request. But at least it works almost
              // everywhere.
              // Known limitations:
              //   o you will get a spinning cursor
              //   o for Konqueror a dumb timer is needed to detect errors


              var JsonPTransport = SockJS['jsonp-polling'] = function (ri, trans_url) {
                utils.polluteGlobalNamespace();
                var that = this;
                that.ri = ri;
                that.trans_url = trans_url;
                that.send_constructor(jsonPGenericSender);

                that._schedule_recv();
              }; // Inheritnace


              JsonPTransport.prototype = new BufferedSender();

              JsonPTransport.prototype._schedule_recv = function () {
                var that = this;

                var callback = function (data) {
                  that._recv_stop = null;

                  if (data) {
                    // no data - heartbeat;
                    if (!that._is_closing) {
                      that.ri._didMessage(data);
                    }
                  } // The message can be a close message, and change is_closing state.


                  if (!that._is_closing) {
                    that._schedule_recv();
                  }
                };

                that._recv_stop = jsonPReceiverWrapper(that.trans_url + '/jsonp', jsonPGenericReceiver, callback);
              };

              JsonPTransport.enabled = function () {
                return true;
              };

              JsonPTransport.need_body = true;

              JsonPTransport.prototype.doCleanup = function () {
                var that = this;
                that._is_closing = true;

                if (that._recv_stop) {
                  that._recv_stop();
                }

                that.ri = that._recv_stop = null;
                that.send_destructor();
              }; // Abstract away code that handles global namespace pollution.


              var jsonPReceiverWrapper = function (url, constructReceiver, user_callback) {
                var id = 'a' + utils.random_string(6);
                var url_id = url + '?c=' + escape(WPrefix + '.' + id); // Unfortunately it is not possible to abort loading of the
                // script. We need to keep track of frake close frames.

                var aborting = 0; // Callback will be called exactly once.

                var callback = function (frame) {
                  switch (aborting) {
                    case 0:
                      // Normal behaviour - delete hook _and_ emit message.
                      delete _window[WPrefix][id];
                      user_callback(frame);
                      break;

                    case 1:
                      // Fake close frame - emit but don't delete hook.
                      user_callback(frame);
                      aborting = 2;
                      break;

                    case 2:
                      // Got frame after connection was closed, delete hook, don't emit.
                      delete _window[WPrefix][id];
                      break;
                  }
                };

                var close_script = constructReceiver(url_id, callback);
                _window[WPrefix][id] = close_script;

                var stop = function () {
                  if (_window[WPrefix][id]) {
                    aborting = 1;

                    _window[WPrefix][id](utils.closeFrame(1000, "JSONP user aborted read"));
                  }
                };

                return stop;
              }; //         [*] End of lib/trans-jsonp-polling.js
              //         [*] Including lib/trans-xhr.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var AjaxBasedTransport = function () {};

              AjaxBasedTransport.prototype = new BufferedSender();

              AjaxBasedTransport.prototype.run = function (ri, trans_url, url_suffix, Receiver, AjaxObject) {
                var that = this;
                that.ri = ri;
                that.trans_url = trans_url;
                that.send_constructor(createAjaxSender(AjaxObject));
                that.poll = new Polling(ri, Receiver, trans_url + url_suffix, AjaxObject);
              };

              AjaxBasedTransport.prototype.doCleanup = function () {
                var that = this;

                if (that.poll) {
                  that.poll.abort();
                  that.poll = null;
                }
              }; // xhr-streaming


              var XhrStreamingTransport = SockJS['xhr-streaming'] = function (ri, trans_url) {
                this.run(ri, trans_url, '/xhr_streaming', XhrReceiver, utils.XHRCorsObject);
              };

              XhrStreamingTransport.prototype = new AjaxBasedTransport();

              XhrStreamingTransport.enabled = function () {
                // Support for CORS Ajax aka Ajax2? Opera 12 claims CORS but
                // doesn't do streaming.
                return _window.XMLHttpRequest && 'withCredentials' in new XMLHttpRequest() && !/opera/i.test(navigator.userAgent);
              };

              XhrStreamingTransport.roundTrips = 2; // preflight, ajax
              // Safari gets confused when a streaming ajax request is started
              // before onload. This causes the load indicator to spin indefinetely.

              XhrStreamingTransport.need_body = true; // According to:
              //   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests
              //   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/
              // xdr-streaming

              var XdrStreamingTransport = SockJS['xdr-streaming'] = function (ri, trans_url) {
                this.run(ri, trans_url, '/xhr_streaming', XhrReceiver, utils.XDRObject);
              };

              XdrStreamingTransport.prototype = new AjaxBasedTransport();

              XdrStreamingTransport.enabled = function () {
                return !!_window.XDomainRequest;
              };

              XdrStreamingTransport.roundTrips = 2; // preflight, ajax
              // xhr-polling

              var XhrPollingTransport = SockJS['xhr-polling'] = function (ri, trans_url) {
                this.run(ri, trans_url, '/xhr', XhrReceiver, utils.XHRCorsObject);
              };

              XhrPollingTransport.prototype = new AjaxBasedTransport();
              XhrPollingTransport.enabled = XhrStreamingTransport.enabled;
              XhrPollingTransport.roundTrips = 2; // preflight, ajax
              // xdr-polling

              var XdrPollingTransport = SockJS['xdr-polling'] = function (ri, trans_url) {
                this.run(ri, trans_url, '/xhr', XhrReceiver, utils.XDRObject);
              };

              XdrPollingTransport.prototype = new AjaxBasedTransport();
              XdrPollingTransport.enabled = XdrStreamingTransport.enabled;
              XdrPollingTransport.roundTrips = 2; // preflight, ajax
              //         [*] End of lib/trans-xhr.js
              //         [*] Including lib/trans-iframe.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */
              // Few cool transports do work only for same-origin. In order to make
              // them working cross-domain we shall use iframe, served form the
              // remote domain. New browsers, have capabilities to communicate with
              // cross domain iframe, using postMessage(). In IE it was implemented
              // from IE 8+, but of course, IE got some details wrong:
              //    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx
              //    http://stevesouders.com/misc/test-postmessage.php

              var IframeTransport = function () {};

              IframeTransport.prototype.i_constructor = function (ri, trans_url, base_url) {
                var that = this;
                that.ri = ri;
                that.origin = utils.getOrigin(base_url);
                that.base_url = base_url;
                that.trans_url = trans_url;
                var iframe_url = base_url + '/iframe.html';

                if (that.ri._options.devel) {
                  iframe_url += '?t=' + +new Date();
                }

                that.window_id = utils.random_string(8);
                iframe_url += '#' + that.window_id;
                that.iframeObj = utils.createIframe(iframe_url, function (r) {
                  that.ri._didClose(1006, "Unable to load an iframe (" + r + ")");
                });
                that.onmessage_cb = utils.bind(that.onmessage, that);
                utils.attachMessage(that.onmessage_cb);
              };

              IframeTransport.prototype.doCleanup = function () {
                var that = this;

                if (that.iframeObj) {
                  utils.detachMessage(that.onmessage_cb);

                  try {
                    // When the iframe is not loaded, IE raises an exception
                    // on 'contentWindow'.
                    if (that.iframeObj.iframe.contentWindow) {
                      that.postMessage('c');
                    }
                  } catch (x) {}

                  that.iframeObj.cleanup();
                  that.iframeObj = null;
                  that.onmessage_cb = that.iframeObj = null;
                }
              };

              IframeTransport.prototype.onmessage = function (e) {
                var that = this;
                if (e.origin !== that.origin) return;
                var window_id = e.data.slice(0, 8);
                var type = e.data.slice(8, 9);
                var data = e.data.slice(9);
                if (window_id !== that.window_id) return;

                switch (type) {
                  case 's':
                    that.iframeObj.loaded();
                    that.postMessage('s', JSON.stringify([SockJS.version, that.protocol, that.trans_url, that.base_url]));
                    break;

                  case 't':
                    that.ri._didMessage(data);

                    break;
                }
              };

              IframeTransport.prototype.postMessage = function (type, data) {
                var that = this;
                that.iframeObj.post(that.window_id + type + (data || ''), that.origin);
              };

              IframeTransport.prototype.doSend = function (message) {
                this.postMessage('m', message);
              };

              IframeTransport.enabled = function () {
                // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with
                // huge delay, or not at all.
                var konqueror = navigator && navigator.userAgent && navigator.userAgent.indexOf('Konqueror') !== -1;
                return (typeof _window.postMessage === 'function' || (0, _typeof2.default)(_window.postMessage) === 'object') && !konqueror;
              }; //         [*] End of lib/trans-iframe.js
              //         [*] Including lib/trans-iframe-within.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var curr_window_id;

              var postMessage = function (type, data) {
                if (parent !== _window) {
                  parent.postMessage(curr_window_id + type + (data || ''), '*');
                } else {
                  utils.log("Can't postMessage, no parent window.", type, data);
                }
              };

              var FacadeJS = function () {};

              FacadeJS.prototype._didClose = function (code, reason) {
                postMessage('t', utils.closeFrame(code, reason));
              };

              FacadeJS.prototype._didMessage = function (frame) {
                postMessage('t', frame);
              };

              FacadeJS.prototype._doSend = function (data) {
                this._transport.doSend(data);
              };

              FacadeJS.prototype._doCleanup = function () {
                this._transport.doCleanup();
              };

              utils.parent_origin = undefined;

              SockJS.bootstrap_iframe = function () {
                var facade;
                curr_window_id = _document.location.hash.slice(1);

                var onMessage = function (e) {
                  if (e.source !== parent) return;
                  if (typeof utils.parent_origin === 'undefined') utils.parent_origin = e.origin;
                  if (e.origin !== utils.parent_origin) return;
                  var window_id = e.data.slice(0, 8);
                  var type = e.data.slice(8, 9);
                  var data = e.data.slice(9);
                  if (window_id !== curr_window_id) return;

                  switch (type) {
                    case 's':
                      var p = JSON.parse(data);
                      var version = p[0];
                      var protocol = p[1];
                      var trans_url = p[2];
                      var base_url = p[3];

                      if (version !== SockJS.version) {
                        utils.log("Incompatibile SockJS! Main site uses:" + " \"" + version + "\", the iframe:" + " \"" + SockJS.version + "\".");
                      }

                      if (!utils.flatUrl(trans_url) || !utils.flatUrl(base_url)) {
                        utils.log("Only basic urls are supported in SockJS");
                        return;
                      }

                      if (!utils.isSameOriginUrl(trans_url) || !utils.isSameOriginUrl(base_url)) {
                        utils.log("Can't connect to different domain from within an " + "iframe. (" + JSON.stringify([_window.location.href, trans_url, base_url]) + ")");
                        return;
                      }

                      facade = new FacadeJS();
                      facade._transport = new FacadeJS[protocol](facade, trans_url, base_url);
                      break;

                    case 'm':
                      facade._doSend(data);

                      break;

                    case 'c':
                      if (facade) facade._doCleanup();
                      facade = null;
                      break;
                  }
                }; // alert('test ticker');
                // facade = new FacadeJS();
                // facade._transport = new FacadeJS['w-iframe-xhr-polling'](facade, 'http://host.com:9999/ticker/12/basd');


                utils.attachMessage(onMessage); // Start

                postMessage('s');
              }; //         [*] End of lib/trans-iframe-within.js
              //         [*] Including lib/info.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var InfoReceiver = function (base_url, AjaxObject) {
                var that = this;
                utils.delay(function () {
                  that.doXhr(base_url, AjaxObject);
                });
              };

              InfoReceiver.prototype = new EventEmitter(['finish']);

              InfoReceiver.prototype.doXhr = function (base_url, AjaxObject) {
                var that = this;
                var t0 = new Date().getTime(); // <METEOR>
                // https://github.com/sockjs/sockjs-client/pull/129
                // var xo = new AjaxObject('GET', base_url + '/info');

                var xo = new AjaxObject( // add cachebusting parameter to url to work around a chrome bug:
                // https://code.google.com/p/chromium/issues/detail?id=263981
                // or misbehaving proxies.
                'GET', base_url + '/info?cb=' + utils.random_string(10)); // </METEOR>

                var tref = utils.delay(8000, function () {
                  xo.ontimeout();
                });

                xo.onfinish = function (status, text) {
                  clearTimeout(tref);
                  tref = null;

                  if (status === 200) {
                    var rtt = new Date().getTime() - t0;
                    var info = JSON.parse(text);
                    if ((0, _typeof2.default)(info) !== 'object') info = {};
                    that.emit('finish', info, rtt);
                  } else {
                    that.emit('finish');
                  }
                };

                xo.ontimeout = function () {
                  xo.close();
                  that.emit('finish');
                };
              };

              var InfoReceiverIframe = function (base_url) {
                var that = this;

                var go = function () {
                  var ifr = new IframeTransport();
                  ifr.protocol = 'w-iframe-info-receiver';

                  var fun = function (r) {
                    if (typeof r === 'string' && r.substr(0, 1) === 'm') {
                      var d = JSON.parse(r.substr(1));
                      var info = d[0],
                          rtt = d[1];
                      that.emit('finish', info, rtt);
                    } else {
                      that.emit('finish');
                    }

                    ifr.doCleanup();
                    ifr = null;
                  };

                  var mock_ri = {
                    _options: {},
                    _didClose: fun,
                    _didMessage: fun
                  };
                  ifr.i_constructor(mock_ri, base_url, base_url);
                };

                if (!_document.body) {
                  utils.attachEvent('load', go);
                } else {
                  go();
                }
              };

              InfoReceiverIframe.prototype = new EventEmitter(['finish']);

              var InfoReceiverFake = function () {
                // It may not be possible to do cross domain AJAX to get the info
                // data, for example for IE7. But we want to run JSONP, so let's
                // fake the response, with rtt=2s (rto=6s).
                var that = this;
                utils.delay(function () {
                  that.emit('finish', {}, 2000);
                });
              };

              InfoReceiverFake.prototype = new EventEmitter(['finish']);

              var createInfoReceiver = function (base_url) {
                if (utils.isSameOriginUrl(base_url)) {
                  // If, for some reason, we have SockJS locally - there's no
                  // need to start up the complex machinery. Just use ajax.
                  return new InfoReceiver(base_url, utils.XHRLocalObject);
                }

                switch (utils.isXHRCorsCapable()) {
                  case 1:
                    // XHRLocalObject -> no_credentials=true
                    return new InfoReceiver(base_url, utils.XHRLocalObject);

                  case 2:
                    // <METEOR>
                    // https://github.com/sockjs/sockjs-client/issues/79
                    // XDR doesn't work across different schemes
                    // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
                    if (utils.isSameOriginScheme(base_url)) return new InfoReceiver(base_url, utils.XDRObject);else return new InfoReceiverFake();
                  // </METEOR>

                  case 3:
                    // Opera
                    return new InfoReceiverIframe(base_url);

                  default:
                    // IE 7
                    return new InfoReceiverFake();
                }

                ;
              };

              var WInfoReceiverIframe = FacadeJS['w-iframe-info-receiver'] = function (ri, _trans_url, base_url) {
                var ir = new InfoReceiver(base_url, utils.XHRLocalObject);

                ir.onfinish = function (info, rtt) {
                  ri._didMessage('m' + JSON.stringify([info, rtt]));

                  ri._didClose();
                };
              };

              WInfoReceiverIframe.prototype.doCleanup = function () {}; //         [*] End of lib/info.js
              //         [*] Including lib/trans-iframe-eventsource.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var EventSourceIframeTransport = SockJS['iframe-eventsource'] = function () {
                var that = this;
                that.protocol = 'w-iframe-eventsource';
                that.i_constructor.apply(that, arguments);
              };

              EventSourceIframeTransport.prototype = new IframeTransport();

              EventSourceIframeTransport.enabled = function () {
                return 'EventSource' in _window && IframeTransport.enabled();
              };

              EventSourceIframeTransport.need_body = true;
              EventSourceIframeTransport.roundTrips = 3; // html, javascript, eventsource
              // w-iframe-eventsource

              var EventSourceTransport = FacadeJS['w-iframe-eventsource'] = function (ri, trans_url) {
                this.run(ri, trans_url, '/eventsource', EventSourceReceiver, utils.XHRLocalObject);
              };

              EventSourceTransport.prototype = new AjaxBasedTransport(); //         [*] End of lib/trans-iframe-eventsource.js
              //         [*] Including lib/trans-iframe-xhr-polling.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var XhrPollingIframeTransport = SockJS['iframe-xhr-polling'] = function () {
                var that = this;
                that.protocol = 'w-iframe-xhr-polling';
                that.i_constructor.apply(that, arguments);
              };

              XhrPollingIframeTransport.prototype = new IframeTransport();

              XhrPollingIframeTransport.enabled = function () {
                return _window.XMLHttpRequest && IframeTransport.enabled();
              };

              XhrPollingIframeTransport.need_body = true;
              XhrPollingIframeTransport.roundTrips = 3; // html, javascript, xhr
              // w-iframe-xhr-polling

              var XhrPollingITransport = FacadeJS['w-iframe-xhr-polling'] = function (ri, trans_url) {
                this.run(ri, trans_url, '/xhr', XhrReceiver, utils.XHRLocalObject);
              };

              XhrPollingITransport.prototype = new AjaxBasedTransport(); //         [*] End of lib/trans-iframe-xhr-polling.js
              //         [*] Including lib/trans-iframe-htmlfile.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */
              // This transport generally works in any browser, but will cause a
              // spinning cursor to appear in any browser other than IE.
              // We may test this transport in all browsers - why not, but in
              // production it should be only run in IE.

              var HtmlFileIframeTransport = SockJS['iframe-htmlfile'] = function () {
                var that = this;
                that.protocol = 'w-iframe-htmlfile';
                that.i_constructor.apply(that, arguments);
              }; // Inheritance.


              HtmlFileIframeTransport.prototype = new IframeTransport();

              HtmlFileIframeTransport.enabled = function () {
                return IframeTransport.enabled();
              };

              HtmlFileIframeTransport.need_body = true;
              HtmlFileIframeTransport.roundTrips = 3; // html, javascript, htmlfile
              // w-iframe-htmlfile

              var HtmlFileTransport = FacadeJS['w-iframe-htmlfile'] = function (ri, trans_url) {
                this.run(ri, trans_url, '/htmlfile', HtmlfileReceiver, utils.XHRLocalObject);
              };

              HtmlFileTransport.prototype = new AjaxBasedTransport(); //         [*] End of lib/trans-iframe-htmlfile.js
              //         [*] Including lib/trans-polling.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var Polling = function (ri, Receiver, recv_url, AjaxObject) {
                var that = this;
                that.ri = ri;
                that.Receiver = Receiver;
                that.recv_url = recv_url;
                that.AjaxObject = AjaxObject;

                that._scheduleRecv();
              };

              Polling.prototype._scheduleRecv = function () {
                var that = this;
                var poll = that.poll = new that.Receiver(that.recv_url, that.AjaxObject);
                var msg_counter = 0;

                poll.onmessage = function (e) {
                  msg_counter += 1;

                  that.ri._didMessage(e.data);
                };

                poll.onclose = function (e) {
                  that.poll = poll = poll.onmessage = poll.onclose = null;

                  if (!that.poll_is_closing) {
                    if (e.reason === 'permanent') {
                      that.ri._didClose(1006, 'Polling error (' + e.reason + ')');
                    } else {
                      that._scheduleRecv();
                    }
                  }
                };
              };

              Polling.prototype.abort = function () {
                var that = this;
                that.poll_is_closing = true;

                if (that.poll) {
                  that.poll.abort();
                }
              }; //         [*] End of lib/trans-polling.js
              //         [*] Including lib/trans-receiver-eventsource.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var EventSourceReceiver = function (url) {
                var that = this;
                var es = new EventSource(url);

                es.onmessage = function (e) {
                  that.dispatchEvent(new SimpleEvent('message', {
                    'data': unescape(e.data)
                  }));
                };

                that.es_close = es.onerror = function (e, abort_reason) {
                  // ES on reconnection has readyState = 0 or 1.
                  // on network error it's CLOSED = 2
                  var reason = abort_reason ? 'user' : es.readyState !== 2 ? 'network' : 'permanent';
                  that.es_close = es.onmessage = es.onerror = null; // EventSource reconnects automatically.

                  es.close();
                  es = null; // Safari and chrome < 15 crash if we close window before
                  // waiting for ES cleanup. See:
                  //   https://code.google.com/p/chromium/issues/detail?id=89155

                  utils.delay(200, function () {
                    that.dispatchEvent(new SimpleEvent('close', {
                      reason: reason
                    }));
                  });
                };
              };

              EventSourceReceiver.prototype = new REventTarget();

              EventSourceReceiver.prototype.abort = function () {
                var that = this;

                if (that.es_close) {
                  that.es_close({}, true);
                }
              }; //         [*] End of lib/trans-receiver-eventsource.js
              //         [*] Including lib/trans-receiver-htmlfile.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var _is_ie_htmlfile_capable;

              var isIeHtmlfileCapable = function () {
                if (_is_ie_htmlfile_capable === undefined) {
                  if ('ActiveXObject' in _window) {
                    try {
                      _is_ie_htmlfile_capable = !!new ActiveXObject('htmlfile');
                    } catch (x) {}
                  } else {
                    _is_ie_htmlfile_capable = false;
                  }
                }

                return _is_ie_htmlfile_capable;
              };

              var HtmlfileReceiver = function (url) {
                var that = this;
                utils.polluteGlobalNamespace();
                that.id = 'a' + utils.random_string(6, 26);
                url += (url.indexOf('?') === -1 ? '?' : '&') + 'c=' + escape(WPrefix + '.' + that.id);
                var constructor = isIeHtmlfileCapable() ? utils.createHtmlfile : utils.createIframe;
                var iframeObj;
                _window[WPrefix][that.id] = {
                  start: function () {
                    iframeObj.loaded();
                  },
                  message: function (data) {
                    that.dispatchEvent(new SimpleEvent('message', {
                      'data': data
                    }));
                  },
                  stop: function () {
                    that.iframe_close({}, 'network');
                  }
                };

                that.iframe_close = function (e, abort_reason) {
                  iframeObj.cleanup();
                  that.iframe_close = iframeObj = null;
                  delete _window[WPrefix][that.id];
                  that.dispatchEvent(new SimpleEvent('close', {
                    reason: abort_reason
                  }));
                };

                iframeObj = constructor(url, function (e) {
                  that.iframe_close({}, 'permanent');
                });
              };

              HtmlfileReceiver.prototype = new REventTarget();

              HtmlfileReceiver.prototype.abort = function () {
                var that = this;

                if (that.iframe_close) {
                  that.iframe_close({}, 'user');
                }
              }; //         [*] End of lib/trans-receiver-htmlfile.js
              //         [*] Including lib/trans-receiver-xhr.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */

              var XhrReceiver = function (url, AjaxObject) {
                var that = this;
                var buf_pos = 0;
                that.xo = new AjaxObject('POST', url, null);

                that.xo.onchunk = function (status, text) {
                  if (status !== 200) return;

                  while (1) {
                    var buf = text.slice(buf_pos);
                    var p = buf.indexOf('\n');
                    if (p === -1) break;
                    buf_pos += p + 1;
                    var msg = buf.slice(0, p);
                    that.dispatchEvent(new SimpleEvent('message', {
                      data: msg
                    }));
                  }
                };

                that.xo.onfinish = function (status, text) {
                  that.xo.onchunk(status, text);
                  that.xo = null;
                  var reason = status === 200 ? 'network' : 'permanent';
                  that.dispatchEvent(new SimpleEvent('close', {
                    reason: reason
                  }));
                };
              };

              XhrReceiver.prototype = new REventTarget();

              XhrReceiver.prototype.abort = function () {
                var that = this;

                if (that.xo) {
                  that.xo.close();
                  that.dispatchEvent(new SimpleEvent('close', {
                    reason: 'user'
                  }));
                  that.xo = null;
                }
              }; //         [*] End of lib/trans-receiver-xhr.js
              //         [*] Including lib/test-hooks.js

              /*
               * ***** BEGIN LICENSE BLOCK *****
               * Copyright (c) 2011-2012 VMware, Inc.
               *
               * For the license see COPYING.
               * ***** END LICENSE BLOCK *****
               */
              // For testing


              SockJS.getUtils = function () {
                return utils;
              };

              SockJS.getIframeTransport = function () {
                return IframeTransport;
              }; //         [*] End of lib/test-hooks.js


              return SockJS;
            }();

            if ('_sockjs_onload' in window) setTimeout(_sockjs_onload, 1); // AMD compliance

            if (true) {
              !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
                return SockJS;
              }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            } //     [*] End of lib/index.js
            // [*] End of lib/all.js
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "browser.js": function (_require3, _exports, _module) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/socket-stream-client/browser.js                                                                            //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require3("@babel/runtime/helpers/interopRequireDefault");

            var _objectSpread2 = _interopRequireDefault(_require3("@babel/runtime/helpers/objectSpread"));

            var _inheritsLoose2 = _interopRequireDefault(_require3("@babel/runtime/helpers/inheritsLoose"));

            var _assertThisInitialized2 = _interopRequireDefault(_require3("@babel/runtime/helpers/assertThisInitialized"));

            _module.export({
              ClientStream: function () {
                return ClientStream;
              }
            });
            var toSockjsUrl, toWebsocketUrl;
            _module.watch(_require3("./urls.js"), {
              toSockjsUrl: function (v) {
                toSockjsUrl = v;
              },
              toWebsocketUrl: function (v) {
                toWebsocketUrl = v;
              }
            }, 0);
            var StreamClientCommon;
            _module.watch(_require3("./common.js"), {
              StreamClientCommon: function (v) {
                StreamClientCommon = v;
              }
            }, 1);
            _module.watch(_require3("./sockjs-0.3.4.js"));

            var ClientStream =
            /*#__PURE__*/
            function (_StreamClientCommon) {
              (0, _inheritsLoose2.default)(ClientStream, _StreamClientCommon);

              // @param url {String} URL to Meteor app
              //   "http://subdomain.meteor.com/" or "/" or
              //   "ddp+sockjs://foo-**.meteor.com/sockjs"
              function ClientStream(url, options) {
                var _this;

                _this = _StreamClientCommon.call(this, options) || this;

                _this._initCommon(_this.options); //// Constants
                // how long between hearing heartbeat from the server until we declare
                // the connection dead. heartbeats come every 45s (stream_server.js)
                //
                // NOTE: this is a older timeout mechanism. We now send heartbeats at
                // the DDP level (https://github.com/meteor/meteor/pull/1865), and
                // expect those timeouts to kill a non-responsive connection before
                // this timeout fires. This is kept around for compatibility (when
                // talking to a server that doesn't support DDP heartbeats) and can be
                // removed later.


                _this.HEARTBEAT_TIMEOUT = 100 * 1000;
                _this.rawUrl = url;
                _this.socket = null;
                _this.lastError = null;
                _this.heartbeatTimer = null; // Listen to global 'online' event if we are running in a browser.
                // (IE8 does not support addEventListener)

                if (typeof window !== 'undefined' && window.addEventListener) window.addEventListener('online', _this._online.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this))), false
                /* useCapture. make FF3.6 happy. */
                ); //// Kickoff!

                _this._launchConnection();

                return _this;
              } // data is a utf8 string. Data sent while not connected is dropped on
              // the floor, and it is up the user of this API to retransmit lost
              // messages on 'reset'


              var _proto = ClientStream.prototype;

              _proto.send = function () {
                function send(data) {
                  if (this.currentStatus.connected) {
                    this.socket.send(data);
                  }
                }

                return send;
              }(); // Changes where this connection points


              _proto._changeUrl = function () {
                function _changeUrl(url) {
                  this.rawUrl = url;
                }

                return _changeUrl;
              }();

              _proto._connected = function () {
                function _connected() {
                  if (this.connectionTimer) {
                    clearTimeout(this.connectionTimer);
                    this.connectionTimer = null;
                  }

                  if (this.currentStatus.connected) {
                    // already connected. do nothing. this probably shouldn't happen.
                    return;
                  } // update status


                  this.currentStatus.status = 'connected';
                  this.currentStatus.connected = true;
                  this.currentStatus.retryCount = 0;
                  this.statusChanged(); // fire resets. This must come after status change so that clients
                  // can call send from within a reset callback.

                  this.forEachCallback('reset', function (callback) {
                    callback();
                  });
                }

                return _connected;
              }();

              _proto._cleanup = function () {
                function _cleanup(maybeError) {
                  this._clearConnectionAndHeartbeatTimers();

                  if (this.socket) {
                    this.socket.onmessage = this.socket.onclose = this.socket.onerror = this.socket.onheartbeat = function () {};

                    this.socket.close();
                    this.socket = null;
                  }

                  this.forEachCallback('disconnect', function (callback) {
                    callback(maybeError);
                  });
                }

                return _cleanup;
              }();

              _proto._clearConnectionAndHeartbeatTimers = function () {
                function _clearConnectionAndHeartbeatTimers() {
                  if (this.connectionTimer) {
                    clearTimeout(this.connectionTimer);
                    this.connectionTimer = null;
                  }

                  if (this.heartbeatTimer) {
                    clearTimeout(this.heartbeatTimer);
                    this.heartbeatTimer = null;
                  }
                }

                return _clearConnectionAndHeartbeatTimers;
              }();

              _proto._heartbeat_timeout = function () {
                function _heartbeat_timeout() {
                  console.log('Connection timeout. No sockjs heartbeat received.');

                  this._lostConnection(new this.ConnectionError("Heartbeat timed out"));
                }

                return _heartbeat_timeout;
              }();

              _proto._heartbeat_received = function () {
                function _heartbeat_received() {
                  // If we've already permanently shut down this stream, the timeout is
                  // already cleared, and we don't need to set it again.
                  if (this._forcedToDisconnect) return;
                  if (this.heartbeatTimer) clearTimeout(this.heartbeatTimer);
                  this.heartbeatTimer = setTimeout(this._heartbeat_timeout.bind(this), this.HEARTBEAT_TIMEOUT);
                }

                return _heartbeat_received;
              }();

              _proto._sockjsProtocolsWhitelist = function () {
                function _sockjsProtocolsWhitelist() {
                  // only allow polling protocols. no streaming.  streaming
                  // makes safari spin.
                  var protocolsWhitelist = ['xdr-polling', 'xhr-polling', 'iframe-xhr-polling', 'jsonp-polling']; // iOS 4 and 5 and below crash when using websockets over certain
                  // proxies. this seems to be resolved with iOS 6. eg
                  // https://github.com/LearnBoost/socket.io/issues/193#issuecomment-7308865.
                  //
                  // iOS <4 doesn't support websockets at all so sockjs will just
                  // immediately fall back to http

                  var noWebsockets = navigator && /iPhone|iPad|iPod/.test(navigator.userAgent) && /OS 4_|OS 5_/.test(navigator.userAgent);
                  if (!noWebsockets) protocolsWhitelist = ['websocket'].concat(protocolsWhitelist);
                  return protocolsWhitelist;
                }

                return _sockjsProtocolsWhitelist;
              }();

              _proto._launchConnection = function () {
                function _launchConnection() {
                  var _this2 = this;

                  this._cleanup(); // cleanup the old socket, if there was one.


                  var options = (0, _objectSpread2.default)({
                    protocols_whitelist: this._sockjsProtocolsWhitelist()
                  }, this.options._sockjsOptions);
                  var hasSockJS = typeof SockJS === "function";
                  this.socket = hasSockJS // Convert raw URL to SockJS URL each time we open a connection, so
                  // that we can connect to random hostnames and get around browser
                  // per-host connection limits.
                  ? new SockJS(toSockjsUrl(this.rawUrl), undefined, options) : new WebSocket(toWebsocketUrl(this.rawUrl));

                  this.socket.onopen = function (data) {
                    _this2.lastError = null;

                    _this2._connected();
                  };

                  this.socket.onmessage = function (data) {
                    _this2.lastError = null;

                    _this2._heartbeat_received();

                    if (_this2.currentStatus.connected) {
                      _this2.forEachCallback('message', function (callback) {
                        callback(data.data);
                      });
                    }
                  };

                  this.socket.onclose = function () {
                    Promise.resolve( // If the socket is closing because there was an error, and we
                    // didn't load SockJS before, try loading it dynamically before
                    // retrying the connection.
                    _this2.lastError && !hasSockJS && _module.dynamicImport("./sockjs-0.3.4.js")).done(function () {
                      _this2._lostConnection();
                    });
                  };

                  this.socket.onerror = function (error) {
                    var lastError = _this2.lastError;
                    _this2.lastError = error;
                    if (lastError) return;
                    console.log('stream error', error, new Date().toDateString());
                  };

                  this.socket.onheartbeat = function () {
                    _this2.lastError = null;

                    _this2._heartbeat_received();
                  };

                  if (this.connectionTimer) clearTimeout(this.connectionTimer);
                  this.connectionTimer = setTimeout(function () {
                    _this2._lostConnection(new _this2.ConnectionError("DDP connection timed out"));
                  }, this.CONNECT_TIMEOUT);
                }

                return _launchConnection;
              }();

              return ClientStream;
            }(StreamClientCommon);
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "common.js": function (_require4, _exports2, _module2) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/socket-stream-client/common.js                                                                             //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require4("@babel/runtime/helpers/interopRequireDefault");

            var _objectSpread2 = _interopRequireDefault(_require4("@babel/runtime/helpers/objectSpread"));

            _module2.export({
              StreamClientCommon: function () {
                return StreamClientCommon;
              }
            });
            var Retry;
            _module2.watch(_require4("meteor/retry"), {
              Retry: function (v) {
                Retry = v;
              }
            }, 0);
            var forcedReconnectError = new Error("forced reconnect");

            var StreamClientCommon =
            /*#__PURE__*/
            function () {
              function StreamClientCommon(options) {
                this.options = (0, _objectSpread2.default)({
                  retry: true
                }, options || null);
                this.ConnectionError = options && options.ConnectionError || Error;
              } // Register for callbacks.


              var _proto = StreamClientCommon.prototype;

              _proto.on = function () {
                function on(name, callback) {
                  if (name !== 'message' && name !== 'reset' && name !== 'disconnect') throw new Error('unknown event type: ' + name);
                  if (!this.eventCallbacks[name]) this.eventCallbacks[name] = [];
                  this.eventCallbacks[name].push(callback);
                }

                return on;
              }();

              _proto.forEachCallback = function () {
                function forEachCallback(name, cb) {
                  if (!this.eventCallbacks[name] || !this.eventCallbacks[name].length) {
                    return;
                  }

                  this.eventCallbacks[name].forEach(cb);
                }

                return forEachCallback;
              }();

              _proto._initCommon = function () {
                function _initCommon(options) {
                  var _this = this;

                  options = options || Object.create(null); //// Constants
                  // how long to wait until we declare the connection attempt
                  // failed.

                  this.CONNECT_TIMEOUT = options.connectTimeoutMs || 10000;
                  this.eventCallbacks = Object.create(null); // name -> [callback]

                  this._forcedToDisconnect = false; //// Reactive status

                  this.currentStatus = {
                    status: 'connecting',
                    connected: false,
                    retryCount: 0
                  };

                  if (Package.tracker) {
                    this.statusListeners = new Package.tracker.Tracker.Dependency();
                  }

                  this.statusChanged = function () {
                    if (_this.statusListeners) {
                      _this.statusListeners.changed();
                    }
                  }; //// Retry logic


                  this._retry = new Retry();
                  this.connectionTimer = null;
                }

                return _initCommon;
              }(); // Trigger a reconnect.


              _proto.reconnect = function () {
                function reconnect(options) {
                  options = options || Object.create(null);

                  if (options.url) {
                    this._changeUrl(options.url);
                  }

                  if (options._sockjsOptions) {
                    this.options._sockjsOptions = options._sockjsOptions;
                  }

                  if (this.currentStatus.connected) {
                    if (options._force || options.url) {
                      this._lostConnection(forcedReconnectError);
                    }

                    return;
                  } // if we're mid-connection, stop it.


                  if (this.currentStatus.status === 'connecting') {
                    // Pretend it's a clean close.
                    this._lostConnection();
                  }

                  this._retry.clear();

                  this.currentStatus.retryCount -= 1; // don't count manual retries

                  this._retryNow();
                }

                return reconnect;
              }();

              _proto.disconnect = function () {
                function disconnect(options) {
                  options = options || Object.create(null); // Failed is permanent. If we're failed, don't let people go back
                  // online by calling 'disconnect' then 'reconnect'.

                  if (this._forcedToDisconnect) return; // If _permanent is set, permanently disconnect a stream. Once a stream
                  // is forced to disconnect, it can never reconnect. This is for
                  // error cases such as ddp version mismatch, where trying again
                  // won't fix the problem.

                  if (options._permanent) {
                    this._forcedToDisconnect = true;
                  }

                  this._cleanup();

                  this._retry.clear();

                  this.currentStatus = {
                    status: options._permanent ? 'failed' : 'offline',
                    connected: false,
                    retryCount: 0
                  };
                  if (options._permanent && options._error) this.currentStatus.reason = options._error;
                  this.statusChanged();
                }

                return disconnect;
              }(); // maybeError is set unless it's a clean protocol-level close.


              _proto._lostConnection = function () {
                function _lostConnection(maybeError) {
                  this._cleanup(maybeError);

                  this._retryLater(maybeError); // sets status. no need to do it here.
                }

                return _lostConnection;
              }(); // fired when we detect that we've gone online. try to reconnect
              // immediately.


              _proto._online = function () {
                function _online() {
                  // if we've requested to be offline by disconnecting, don't reconnect.
                  if (this.currentStatus.status != 'offline') this.reconnect();
                }

                return _online;
              }();

              _proto._retryLater = function () {
                function _retryLater(maybeError) {
                  var timeout = 0;

                  if (this.options.retry || maybeError === forcedReconnectError) {
                    timeout = this._retry.retryLater(this.currentStatus.retryCount, this._retryNow.bind(this));
                    this.currentStatus.status = 'waiting';
                    this.currentStatus.retryTime = new Date().getTime() + timeout;
                  } else {
                    this.currentStatus.status = 'failed';
                    delete this.currentStatus.retryTime;
                  }

                  this.currentStatus.connected = false;
                  this.statusChanged();
                }

                return _retryLater;
              }();

              _proto._retryNow = function () {
                function _retryNow() {
                  if (this._forcedToDisconnect) return;
                  this.currentStatus.retryCount += 1;
                  this.currentStatus.status = 'connecting';
                  this.currentStatus.connected = false;
                  delete this.currentStatus.retryTime;
                  this.statusChanged();

                  this._launchConnection();
                }

                return _retryNow;
              }(); // Get current status. Reactive.


              _proto.status = function () {
                function status() {
                  if (this.statusListeners) {
                    this.statusListeners.depend();
                  }

                  return this.currentStatus;
                }

                return status;
              }();

              return StreamClientCommon;
            }();
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "urls.js": function (_require5, _exports3, _module3) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/socket-stream-client/urls.js                                                                               //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module3.export({
              toSockjsUrl: function () {
                return toSockjsUrl;
              },
              toWebsocketUrl: function () {
                return toWebsocketUrl;
              }
            });

            // @param url {String} URL to Meteor app, eg:
            //   "/" or "madewith.meteor.com" or "https://foo.meteor.com"
            //   or "ddp+sockjs://ddp--****-foo.meteor.com/sockjs"
            // @returns {String} URL to the endpoint with the specific scheme and subPath, e.g.
            // for scheme "http" and subPath "sockjs"
            //   "http://subdomain.meteor.com/sockjs" or "/sockjs"
            //   or "https://ddp--1234-foo.meteor.com/sockjs"
            function translateUrl(url, newSchemeBase, subPath) {
              if (!newSchemeBase) {
                newSchemeBase = 'http';
              }

              if (subPath !== "sockjs" && url.startsWith("/")) {
                url = Meteor.absoluteUrl(url.substr(1));
              }

              var ddpUrlMatch = url.match(/^ddp(i?)\+sockjs:\/\//);
              var httpUrlMatch = url.match(/^http(s?):\/\//);
              var newScheme;

              if (ddpUrlMatch) {
                // Remove scheme and split off the host.
                var urlAfterDDP = url.substr(ddpUrlMatch[0].length);
                newScheme = ddpUrlMatch[1] === 'i' ? newSchemeBase : newSchemeBase + 's';
                var slashPos = urlAfterDDP.indexOf('/');
                var host = slashPos === -1 ? urlAfterDDP : urlAfterDDP.substr(0, slashPos);
                var rest = slashPos === -1 ? '' : urlAfterDDP.substr(slashPos); // In the host (ONLY!), change '*' characters into random digits. This
                // allows different stream connections to connect to different hostnames
                // and avoid browser per-hostname connection limits.

                host = host.replace(/\*/g, function () {
                  return Math.floor(Math.random() * 10);
                });
                return newScheme + '://' + host + rest;
              } else if (httpUrlMatch) {
                newScheme = !httpUrlMatch[1] ? newSchemeBase : newSchemeBase + 's';
                var urlAfterHttp = url.substr(httpUrlMatch[0].length);
                url = newScheme + '://' + urlAfterHttp;
              } // Prefix FQDNs but not relative URLs


              if (url.indexOf('://') === -1 && !url.startsWith('/')) {
                url = newSchemeBase + '://' + url;
              } // XXX This is not what we should be doing: if I have a site
              // deployed at "/foo", then DDP.connect("/") should actually connect
              // to "/", not to "/foo". "/" is an absolute path. (Contrast: if
              // deployed at "/foo", it would be reasonable for DDP.connect("bar")
              // to connect to "/foo/bar").
              //
              // We should make this properly honor absolute paths rather than
              // forcing the path to be relative to the site root. Simultaneously,
              // we should set DDP_DEFAULT_CONNECTION_URL to include the site
              // root. See also client_convenience.js #RationalizingRelativeDDPURLs


              url = Meteor._relativeToSiteRootUrl(url);
              if (url.endsWith('/')) return url + subPath;else return url + '/' + subPath;
            }

            function toSockjsUrl(url) {
              return translateUrl(url, 'http', 'sockjs');
            }

            function toWebsocketUrl(url) {
              return translateUrl(url, 'ws', 'websocket');
            }
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  _require2("/node_modules/meteor/socket-stream-client/sockjs-0.3.4.js");

  /* Exports */
  Package._define("socket-stream-client");
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var EJSON = Package.ejson.EJSON;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var DiffSequence;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "diff-sequence": { "diff.js": function (_require, _exports, _module) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                 //
            // packages/diff-sequence/diff.js                                                                  //
            //                                                                                                 //
            /////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module.export({
              DiffSequence: function () {
                return DiffSequence;
              }
            });
            var DiffSequence = {};
            var hasOwn = Object.prototype.hasOwnProperty;

            function isObjEmpty(obj) {
              for (var key in meteorBabelHelpers.sanitizeForInObject(Object(obj))) {
                if (hasOwn.call(obj, key)) {
                  return false;
                }
              }

              return true;
            } // ordered: bool.
            // old_results and new_results: collections of documents.
            //    if ordered, they are arrays.
            //    if unordered, they are IdMaps


            DiffSequence.diffQueryChanges = function (ordered, oldResults, newResults, observer, options) {
              if (ordered) DiffSequence.diffQueryOrderedChanges(oldResults, newResults, observer, options);else DiffSequence.diffQueryUnorderedChanges(oldResults, newResults, observer, options);
            };

            DiffSequence.diffQueryUnorderedChanges = function (oldResults, newResults, observer, options) {
              options = options || {};
              var projectionFn = options.projectionFn || EJSON.clone;

              if (observer.movedBefore) {
                throw new Error("_diffQueryUnordered called with a movedBefore observer!");
              }

              newResults.forEach(function (newDoc, id) {
                var oldDoc = oldResults.get(id);

                if (oldDoc) {
                  if (observer.changed && !EJSON.equals(oldDoc, newDoc)) {
                    var projectedNew = projectionFn(newDoc);
                    var projectedOld = projectionFn(oldDoc);
                    var changedFields = DiffSequence.makeChangedFields(projectedNew, projectedOld);

                    if (!isObjEmpty(changedFields)) {
                      observer.changed(id, changedFields);
                    }
                  }
                } else if (observer.added) {
                  var fields = projectionFn(newDoc);
                  delete fields._id;
                  observer.added(newDoc._id, fields);
                }
              });

              if (observer.removed) {
                oldResults.forEach(function (oldDoc, id) {
                  if (!newResults.has(id)) observer.removed(id);
                });
              }
            };

            DiffSequence.diffQueryOrderedChanges = function (old_results, new_results, observer, options) {
              options = options || {};
              var projectionFn = options.projectionFn || EJSON.clone;
              var new_presence_of_id = {};
              new_results.forEach(function (doc) {
                if (new_presence_of_id[doc._id]) Meteor._debug("Duplicate _id in new_results");
                new_presence_of_id[doc._id] = true;
              });
              var old_index_of_id = {};
              old_results.forEach(function (doc, i) {
                if (doc._id in old_index_of_id) Meteor._debug("Duplicate _id in old_results");
                old_index_of_id[doc._id] = i;
              }); // ALGORITHM:
              //
              // To determine which docs should be considered "moved" (and which
              // merely change position because of other docs moving) we run
              // a "longest common subsequence" (LCS) algorithm.  The LCS of the
              // old doc IDs and the new doc IDs gives the docs that should NOT be
              // considered moved.
              // To actually call the appropriate callbacks to get from the old state to the
              // new state:
              // First, we call removed() on all the items that only appear in the old
              // state.
              // Then, once we have the items that should not move, we walk through the new
              // results array group-by-group, where a "group" is a set of items that have
              // moved, anchored on the end by an item that should not move.  One by one, we
              // move each of those elements into place "before" the anchoring end-of-group
              // item, and fire changed events on them if necessary.  Then we fire a changed
              // event on the anchor, and move on to the next group.  There is always at
              // least one group; the last group is anchored by a virtual "null" id at the
              // end.
              // Asymptotically: O(N k) where k is number of ops, or potentially
              // O(N log N) if inner loop of LCS were made to be binary search.
              //////// LCS (longest common sequence, with respect to _id)
              // (see Wikipedia article on Longest Increasing Subsequence,
              // where the LIS is taken of the sequence of old indices of the
              // docs in new_results)
              //
              // unmoved: the output of the algorithm; members of the LCS,
              // in the form of indices into new_results

              var unmoved = []; // max_seq_len: length of LCS found so far

              var max_seq_len = 0; // seq_ends[i]: the index into new_results of the last doc in a
              // common subsequence of length of i+1 <= max_seq_len

              var N = new_results.length;
              var seq_ends = new Array(N); // ptrs:  the common subsequence ending with new_results[n] extends
              // a common subsequence ending with new_results[ptr[n]], unless
              // ptr[n] is -1.

              var ptrs = new Array(N); // virtual sequence of old indices of new results

              var old_idx_seq = function (i_new) {
                return old_index_of_id[new_results[i_new]._id];
              }; // for each item in new_results, use it to extend a common subsequence
              // of length j <= max_seq_len


              for (var i = 0; i < N; i++) {
                if (old_index_of_id[new_results[i]._id] !== undefined) {
                  var j = max_seq_len; // this inner loop would traditionally be a binary search,
                  // but scanning backwards we will likely find a subseq to extend
                  // pretty soon, bounded for example by the total number of ops.
                  // If this were to be changed to a binary search, we'd still want
                  // to scan backwards a bit as an optimization.

                  while (j > 0) {
                    if (old_idx_seq(seq_ends[j - 1]) < old_idx_seq(i)) break;
                    j--;
                  }

                  ptrs[i] = j === 0 ? -1 : seq_ends[j - 1];
                  seq_ends[j] = i;
                  if (j + 1 > max_seq_len) max_seq_len = j + 1;
                }
              } // pull out the LCS/LIS into unmoved


              var idx = max_seq_len === 0 ? -1 : seq_ends[max_seq_len - 1];

              while (idx >= 0) {
                unmoved.push(idx);
                idx = ptrs[idx];
              } // the unmoved item list is built backwards, so fix that


              unmoved.reverse(); // the last group is always anchored by the end of the result list, which is
              // an id of "null"

              unmoved.push(new_results.length);
              old_results.forEach(function (doc) {
                if (!new_presence_of_id[doc._id]) observer.removed && observer.removed(doc._id);
              }); // for each group of things in the new_results that is anchored by an unmoved
              // element, iterate through the things before it.

              var startOfGroup = 0;
              unmoved.forEach(function (endOfGroup) {
                var groupId = new_results[endOfGroup] ? new_results[endOfGroup]._id : null;
                var oldDoc, newDoc, fields, projectedNew, projectedOld;

                for (var i = startOfGroup; i < endOfGroup; i++) {
                  newDoc = new_results[i];

                  if (!hasOwn.call(old_index_of_id, newDoc._id)) {
                    fields = projectionFn(newDoc);
                    delete fields._id;
                    observer.addedBefore && observer.addedBefore(newDoc._id, fields, groupId);
                    observer.added && observer.added(newDoc._id, fields);
                  } else {
                    // moved
                    oldDoc = old_results[old_index_of_id[newDoc._id]];
                    projectedNew = projectionFn(newDoc);
                    projectedOld = projectionFn(oldDoc);
                    fields = DiffSequence.makeChangedFields(projectedNew, projectedOld);

                    if (!isObjEmpty(fields)) {
                      observer.changed && observer.changed(newDoc._id, fields);
                    }

                    observer.movedBefore && observer.movedBefore(newDoc._id, groupId);
                  }
                }

                if (groupId) {
                  newDoc = new_results[endOfGroup];
                  oldDoc = old_results[old_index_of_id[newDoc._id]];
                  projectedNew = projectionFn(newDoc);
                  projectedOld = projectionFn(oldDoc);
                  fields = DiffSequence.makeChangedFields(projectedNew, projectedOld);

                  if (!isObjEmpty(fields)) {
                    observer.changed && observer.changed(newDoc._id, fields);
                  }
                }

                startOfGroup = endOfGroup + 1;
              });
            }; // General helper for diff-ing two objects.
            // callbacks is an object like so:
            // { leftOnly: function (key, leftValue) {...},
            //   rightOnly: function (key, rightValue) {...},
            //   both: function (key, leftValue, rightValue) {...},
            // }


            DiffSequence.diffObjects = function (left, right, callbacks) {
              Object.keys(left).forEach(function (key) {
                var leftValue = left[key];

                if (hasOwn.call(right, key)) {
                  callbacks.both && callbacks.both(key, leftValue, right[key]);
                } else {
                  callbacks.leftOnly && callbacks.leftOnly(key, leftValue);
                }
              });

              if (callbacks.rightOnly) {
                Object.keys(right).forEach(function (key) {
                  var rightValue = right[key];

                  if (!hasOwn.call(left, key)) {
                    callbacks.rightOnly(key, rightValue);
                  }
                });
              }
            };

            DiffSequence.makeChangedFields = function (newDoc, oldDoc) {
              var fields = {};
              DiffSequence.diffObjects(oldDoc, newDoc, {
                leftOnly: function (key, value) {
                  fields[key] = undefined;
                },
                rightOnly: function (key, value) {
                  fields[key] = value;
                },
                both: function (key, leftValue, rightValue) {
                  if (!EJSON.equals(leftValue, rightValue)) fields[key] = rightValue;
                }
              });
              return fields;
            };

            DiffSequence.applyChanges = function (doc, changeFields) {
              Object.keys(changeFields).forEach(function (key) {
                var value = changeFields[key];

                if (typeof value === "undefined") {
                  delete doc[key];
                } else {
                  doc[key] = value;
                }
              });
            };
            /////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/diff-sequence/diff.js");

  /* Exports */
  Package._define("diff-sequence", _exports2, {
    DiffSequence: DiffSequence
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var EJSON = Package.ejson.EJSON;
  var IdMap = Package['id-map'].IdMap;
  var Random = Package.random.Random;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var MongoID;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "mongo-id": { "id.js": function (_require, _exports, _module) {

            ///////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                           //
            // packages/mongo-id/id.js                                                                   //
            //                                                                                           //
            ///////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require("@babel/runtime/helpers/interopRequireDefault");

            var _typeof2 = _interopRequireDefault(_require("@babel/runtime/helpers/typeof"));

            _module.export({
              MongoID: function () {
                return MongoID;
              }
            });
            var EJSON;
            _module.watch(_require("meteor/ejson"), {
              EJSON: function (v) {
                EJSON = v;
              }
            }, 0);
            var Random;
            _module.watch(_require("meteor/random"), {
              Random: function (v) {
                Random = v;
              }
            }, 1);
            var MongoID = {};

            MongoID._looksLikeObjectID = function (str) {
              return str.length === 24 && str.match(/^[0-9a-f]*$/);
            };

            MongoID.ObjectID =
            /*#__PURE__*/
            function () {
              function ObjectID(hexString) {
                //random-based impl of Mongo ObjectID
                if (hexString) {
                  hexString = hexString.toLowerCase();

                  if (!MongoID._looksLikeObjectID(hexString)) {
                    throw new Error('Invalid hexadecimal string for creating an ObjectID');
                  } // meant to work with _.isEqual(), which relies on structural equality


                  this._str = hexString;
                } else {
                  this._str = Random.hexString(24);
                }
              }

              var _proto = ObjectID.prototype;

              _proto.equals = function () {
                function equals(other) {
                  return other instanceof MongoID.ObjectID && this.valueOf() === other.valueOf();
                }

                return equals;
              }();

              _proto.toString = function () {
                function toString() {
                  return "ObjectID(\"" + this._str + "\")";
                }

                return toString;
              }();

              _proto.clone = function () {
                function clone() {
                  return new MongoID.ObjectID(this._str);
                }

                return clone;
              }();

              _proto.typeName = function () {
                function typeName() {
                  return 'oid';
                }

                return typeName;
              }();

              _proto.getTimestamp = function () {
                function getTimestamp() {
                  return Number.parseInt(this._str.substr(0, 8), 16);
                }

                return getTimestamp;
              }();

              _proto.valueOf = function () {
                function valueOf() {
                  return this._str;
                }

                return valueOf;
              }();

              _proto.toJSONValue = function () {
                function toJSONValue() {
                  return this.valueOf();
                }

                return toJSONValue;
              }();

              _proto.toHexString = function () {
                function toHexString() {
                  return this.valueOf();
                }

                return toHexString;
              }();

              return ObjectID;
            }();

            EJSON.addType('oid', function (str) {
              return new MongoID.ObjectID(str);
            });

            MongoID.idStringify = function (id) {
              if (id instanceof MongoID.ObjectID) {
                return id.valueOf();
              } else if (typeof id === 'string') {
                if (id === '') {
                  return id;
                } else if (id.startsWith('-') || // escape previously dashed strings
                id.startsWith('~') || // escape escaped numbers, true, false
                MongoID._looksLikeObjectID(id) || // escape object-id-form strings
                id.startsWith('{')) {
                  // escape object-form strings, for maybe implementing later
                  return "-" + id;
                } else {
                  return id; // other strings go through unchanged.
                }
              } else if (id === undefined) {
                return '-';
              } else if ((0, _typeof2.default)(id) === 'object' && id !== null) {
                throw new Error('Meteor does not currently support objects other than ObjectID as ids');
              } else {
                // Numbers, true, false, null
                return "~" + JSON.stringify(id);
              }
            };

            MongoID.idParse = function (id) {
              if (id === '') {
                return id;
              } else if (id === '-') {
                return undefined;
              } else if (id.startsWith('-')) {
                return id.substr(1);
              } else if (id.startsWith('~')) {
                return JSON.parse(id.substr(1));
              } else if (MongoID._looksLikeObjectID(id)) {
                return new MongoID.ObjectID(id);
              } else {
                return id;
              }
            };
            ///////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/mongo-id/id.js");

  /* Exports */
  Package._define("mongo-id", _exports2, {
    MongoID: MongoID
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var check = Package.check.check;
  var Match = Package.check.Match;
  var Random = Package.random.Random;
  var EJSON = Package.ejson.EJSON;
  var Tracker = Package.tracker.Tracker;
  var Deps = Package.tracker.Deps;
  var Retry = Package.retry.Retry;
  var IdMap = Package['id-map'].IdMap;
  var Hook = Package['callback-hook'].Hook;
  var DDPCommon = Package['ddp-common'].DDPCommon;
  var Reload = Package.reload.Reload;
  var DiffSequence = Package['diff-sequence'].DiffSequence;
  var MongoID = Package['mongo-id'].MongoID;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var DDP;

  var _require3 = meteorInstall({ "node_modules": { "meteor": { "ddp-client": { "client": { "client.js": function (_require2, _exports, _module) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // packages/ddp-client/client/client.js                                                                                //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module.watch(_require2("../common/namespace.js"), {
                DDP: function (v) {
                  _exports.DDP = v;
                }
              }, 0);
              _module.watch(_require2("../common/livedata_connection"));
              _module.watch(_require2("./client_convenience"));
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "client_convenience.js": function (_require4, _exports3, _module2) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // packages/ddp-client/client/client_convenience.js                                                                    //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var DDP;
              _module2.watch(_require4("../common/namespace.js"), {
                DDP: function (v) {
                  DDP = v;
                }
              }, 0);
              var Meteor;
              _module2.watch(_require4("meteor/meteor"), {
                Meteor: function (v) {
                  Meteor = v;
                }
              }, 1);

              // Meteor.refresh can be called on the client (if you're in common code) but it
              // only has an effect on the server.
              Meteor.refresh = function () {}; // By default, try to connect back to the same endpoint as the page
              // was served from.
              //
              // XXX We should be doing this a different way. Right now we don't
              // include ROOT_URL_PATH_PREFIX when computing ddpUrl. (We don't
              // include it on the server when computing
              // DDP_DEFAULT_CONNECTION_URL, and we don't include it in our
              // default, '/'.) We get by with this because DDP.connect then
              // forces the URL passed to it to be interpreted relative to the
              // app's deploy path, even if it is absolute. Instead, we should
              // make DDP_DEFAULT_CONNECTION_URL, if set, include the path prefix;
              // make the default ddpUrl be '' rather that '/'; and make
              // _translateUrl in stream_client_common.js not force absolute paths
              // to be treated like relative paths. See also
              // stream_client_common.js #RationalizingRelativeDDPURLs


              var ddpUrl = '/';

              if (typeof __meteor_runtime_config__ !== 'undefined') {
                if (__meteor_runtime_config__.DDP_DEFAULT_CONNECTION_URL) ddpUrl = __meteor_runtime_config__.DDP_DEFAULT_CONNECTION_URL;
              }

              var retry = new Retry();

              function onDDPVersionNegotiationFailure(description) {
                Meteor._debug(description);

                if (Package.reload) {
                  var migrationData = Package.reload.Reload._migrationData('livedata') || Object.create(null);
                  var failures = migrationData.DDPVersionNegotiationFailures || 0;
                  ++failures;

                  Package.reload.Reload._onMigrate('livedata', function () {
                    return [true, {
                      DDPVersionNegotiationFailures: failures
                    }];
                  });

                  retry.retryLater(failures, function () {
                    Package.reload.Reload._reload();
                  });
                }
              }

              Meteor.connection = DDP.connect(ddpUrl, {
                onDDPVersionNegotiationFailure: onDDPVersionNegotiationFailure
              }); // Proxy the public methods of Meteor.connection so they can
              // be called directly on Meteor.

              ['subscribe', 'methods', 'call', 'apply', 'status', 'reconnect', 'disconnect'].forEach(function (name) {
                Meteor[name] = Meteor.connection[name].bind(Meteor.connection);
              }); // Meteor.connection used to be called
              // Meteor.default_connection. Provide backcompat as a courtesy even
              // though it was never documented.
              // XXX COMPAT WITH 0.6.4

              Meteor.default_connection = Meteor.connection; // We should transition from Meteor.connect to DDP.connect.
              // XXX COMPAT WITH 0.6.4

              Meteor.connect = DDP.connect;
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            } }, "common": { "MethodInvoker.js": function (_require5, _exports4, _module3) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // packages/ddp-client/common/MethodInvoker.js                                                                         //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module3.export({
                "default": function () {
                  return MethodInvoker;
                }
              });

              var MethodInvoker =
              /*#__PURE__*/
              function () {
                function MethodInvoker(options) {
                  // Public (within this file) fields.
                  this.methodId = options.methodId;
                  this.sentMessage = false;
                  this._callback = options.callback;
                  this._connection = options.connection;
                  this._message = options.message;

                  this._onResultReceived = options.onResultReceived || function () {};

                  this._wait = options.wait;
                  this.noRetry = options.noRetry;
                  this._methodResult = null;
                  this._dataVisible = false; // Register with the connection.

                  this._connection._methodInvokers[this.methodId] = this;
                } // Sends the method message to the server. May be called additional times if
                // we lose the connection and reconnect before receiving a result.


                var _proto = MethodInvoker.prototype;

                _proto.sendMessage = function () {
                  function sendMessage() {
                    // This function is called before sending a method (including resending on
                    // reconnect). We should only (re)send methods where we don't already have a
                    // result!
                    if (this.gotResult()) throw new Error('sendingMethod is called on method with result'); // If we're re-sending it, it doesn't matter if data was written the first
                    // time.

                    this._dataVisible = false;
                    this.sentMessage = true; // If this is a wait method, make all data messages be buffered until it is
                    // done.

                    if (this._wait) this._connection._methodsBlockingQuiescence[this.methodId] = true; // Actually send the message.

                    this._connection._send(this._message);
                  }

                  return sendMessage;
                }(); // Invoke the callback, if we have both a result and know that all data has
                // been written to the local cache.


                _proto._maybeInvokeCallback = function () {
                  function _maybeInvokeCallback() {
                    if (this._methodResult && this._dataVisible) {
                      // Call the callback. (This won't throw: the callback was wrapped with
                      // bindEnvironment.)
                      this._callback(this._methodResult[0], this._methodResult[1]); // Forget about this method.


                      delete this._connection._methodInvokers[this.methodId]; // Let the connection know that this method is finished, so it can try to
                      // move on to the next block of methods.

                      this._connection._outstandingMethodFinished();
                    }
                  }

                  return _maybeInvokeCallback;
                }(); // Call with the result of the method from the server. Only may be called
                // once; once it is called, you should not call sendMessage again.
                // If the user provided an onResultReceived callback, call it immediately.
                // Then invoke the main callback if data is also visible.


                _proto.receiveResult = function () {
                  function receiveResult(err, result) {
                    if (this.gotResult()) throw new Error('Methods should only receive results once');
                    this._methodResult = [err, result];

                    this._onResultReceived(err, result);

                    this._maybeInvokeCallback();
                  }

                  return receiveResult;
                }(); // Call this when all data written by the method is visible. This means that
                // the method has returns its "data is done" message *AND* all server
                // documents that are buffered at that time have been written to the local
                // cache. Invokes the main callback if the result has been received.


                _proto.dataVisible = function () {
                  function dataVisible() {
                    this._dataVisible = true;

                    this._maybeInvokeCallback();
                  }

                  return dataVisible;
                }(); // True if receiveResult has been called.


                _proto.gotResult = function () {
                  function gotResult() {
                    return !!this._methodResult;
                  }

                  return gotResult;
                }();

                return MethodInvoker;
              }();
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "livedata_connection.js": function (_require6, _exports5, _module4) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // packages/ddp-client/common/livedata_connection.js                                                                   //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              var _interopRequireDefault = _require6("@babel/runtime/helpers/interopRequireDefault");

              var _toConsumableArray2 = _interopRequireDefault(_require6("@babel/runtime/helpers/toConsumableArray"));

              var _typeof2 = _interopRequireDefault(_require6("@babel/runtime/helpers/typeof"));

              var _objectSpread2 = _interopRequireDefault(_require6("@babel/runtime/helpers/objectSpread"));

              var _inheritsLoose2 = _interopRequireDefault(_require6("@babel/runtime/helpers/inheritsLoose"));

              _module4.export({
                Connection: function () {
                  return Connection;
                }
              });
              var Meteor;
              _module4.watch(_require6("meteor/meteor"), {
                Meteor: function (v) {
                  Meteor = v;
                }
              }, 0);
              var DDPCommon;
              _module4.watch(_require6("meteor/ddp-common"), {
                DDPCommon: function (v) {
                  DDPCommon = v;
                }
              }, 1);
              var Tracker;
              _module4.watch(_require6("meteor/tracker"), {
                Tracker: function (v) {
                  Tracker = v;
                }
              }, 2);
              var EJSON;
              _module4.watch(_require6("meteor/ejson"), {
                EJSON: function (v) {
                  EJSON = v;
                }
              }, 3);
              var Random;
              _module4.watch(_require6("meteor/random"), {
                Random: function (v) {
                  Random = v;
                }
              }, 4);
              var Hook;
              _module4.watch(_require6("meteor/callback-hook"), {
                Hook: function (v) {
                  Hook = v;
                }
              }, 5);
              var MongoID;
              _module4.watch(_require6("meteor/mongo-id"), {
                MongoID: function (v) {
                  MongoID = v;
                }
              }, 6);
              var DDP;
              _module4.watch(_require6("./namespace.js"), {
                DDP: function (v) {
                  DDP = v;
                }
              }, 7);
              var MethodInvoker;
              _module4.watch(_require6("./MethodInvoker.js"), {
                "default": function (v) {
                  MethodInvoker = v;
                }
              }, 8);
              var hasOwn, slice, keys, isEmpty, last;
              _module4.watch(_require6("meteor/ddp-common/utils.js"), {
                hasOwn: function (v) {
                  hasOwn = v;
                },
                slice: function (v) {
                  slice = v;
                },
                keys: function (v) {
                  keys = v;
                },
                isEmpty: function (v) {
                  isEmpty = v;
                },
                last: function (v) {
                  last = v;
                }
              }, 9);

              if (Meteor.isServer) {
                var Fiber = Npm.require('fibers');

                var Future = Npm.require('fibers/future');
              }

              var MongoIDMap =
              /*#__PURE__*/
              function (_IdMap) {
                (0, _inheritsLoose2.default)(MongoIDMap, _IdMap);

                function MongoIDMap() {
                  return _IdMap.call(this, MongoID.idStringify, MongoID.idParse) || this;
                }

                return MongoIDMap;
              }(IdMap); // @param url {String|Object} URL to Meteor app,
              //   or an object as a test hook (see code)
              // Options:
              //   reloadWithOutstanding: is it OK to reload if there are outstanding methods?
              //   headers: extra headers to send on the websockets connection, for
              //     server-to-server DDP only
              //   _sockjsOptions: Specifies options to pass through to the sockjs client
              //   onDDPNegotiationVersionFailure: callback when version negotiation fails.
              //
              // XXX There should be a way to destroy a DDP connection, causing all
              // outstanding method calls to fail.
              //
              // XXX Our current way of handling failure and reconnection is great
              // for an app (where we want to tolerate being disconnected as an
              // expect state, and keep trying forever to reconnect) but cumbersome
              // for something like a command line tool that wants to make a
              // connection, call a method, and print an error if connection
              // fails. We should have better usability in the latter case (while
              // still transparently reconnecting if it's just a transient failure
              // or the server migrating us).


              var Connection =
              /*#__PURE__*/
              function () {
                function Connection(url, options) {
                  var self = this;
                  this.options = options = (0, _objectSpread2.default)({
                    onConnected: function () {},
                    onDDPVersionNegotiationFailure: function (description) {
                      Meteor._debug(description);
                    },
                    heartbeatInterval: 17500,
                    heartbeatTimeout: 15000,
                    npmFayeOptions: Object.create(null),
                    // These options are only for testing.
                    reloadWithOutstanding: false,
                    supportedDDPVersions: DDPCommon.SUPPORTED_DDP_VERSIONS,
                    retry: true,
                    respondToPings: true,
                    // When updates are coming within this ms interval, batch them together.
                    bufferedWritesInterval: 5,
                    // Flush buffers immediately if writes are happening continuously for more than this many ms.
                    bufferedWritesMaxAge: 500
                  }, options); // If set, called when we reconnect, queuing method calls _before_ the
                  // existing outstanding ones.
                  // NOTE: This feature has been preserved for backwards compatibility. The
                  // preferred method of setting a callback on reconnect is to use
                  // DDP.onReconnect.

                  self.onReconnect = null; // as a test hook, allow passing a stream instead of a url.

                  if ((0, _typeof2.default)(url) === 'object') {
                    self._stream = url;
                  } else {
                    var _require = _require6("meteor/socket-stream-client"),
                        ClientStream = _require.ClientStream;

                    self._stream = new ClientStream(url, {
                      retry: options.retry,
                      ConnectionError: DDP.ConnectionError,
                      headers: options.headers,
                      _sockjsOptions: options._sockjsOptions,
                      // Used to keep some tests quiet, or for other cases in which
                      // the right thing to do with connection errors is to silently
                      // fail (e.g. sending package usage stats). At some point we
                      // should have a real API for handling client-stream-level
                      // errors.
                      _dontPrintErrors: options._dontPrintErrors,
                      connectTimeoutMs: options.connectTimeoutMs,
                      npmFayeOptions: options.npmFayeOptions
                    });
                  }

                  self._lastSessionId = null;
                  self._versionSuggestion = null; // The last proposed DDP version.

                  self._version = null; // The DDP version agreed on by client and server.

                  self._stores = Object.create(null); // name -> object with methods

                  self._methodHandlers = Object.create(null); // name -> func

                  self._nextMethodId = 1;
                  self._supportedDDPVersions = options.supportedDDPVersions;
                  self._heartbeatInterval = options.heartbeatInterval;
                  self._heartbeatTimeout = options.heartbeatTimeout; // Tracks methods which the user has tried to call but which have not yet
                  // called their user callback (ie, they are waiting on their result or for all
                  // of their writes to be written to the local cache). Map from method ID to
                  // MethodInvoker object.

                  self._methodInvokers = Object.create(null); // Tracks methods which the user has called but whose result messages have not
                  // arrived yet.
                  //
                  // _outstandingMethodBlocks is an array of blocks of methods. Each block
                  // represents a set of methods that can run at the same time. The first block
                  // represents the methods which are currently in flight; subsequent blocks
                  // must wait for previous blocks to be fully finished before they can be sent
                  // to the server.
                  //
                  // Each block is an object with the following fields:
                  // - methods: a list of MethodInvoker objects
                  // - wait: a boolean; if true, this block had a single method invoked with
                  //         the "wait" option
                  //
                  // There will never be adjacent blocks with wait=false, because the only thing
                  // that makes methods need to be serialized is a wait method.
                  //
                  // Methods are removed from the first block when their "result" is
                  // received. The entire first block is only removed when all of the in-flight
                  // methods have received their results (so the "methods" list is empty) *AND*
                  // all of the data written by those methods are visible in the local cache. So
                  // it is possible for the first block's methods list to be empty, if we are
                  // still waiting for some objects to quiesce.
                  //
                  // Example:
                  //  _outstandingMethodBlocks = [
                  //    {wait: false, methods: []},
                  //    {wait: true, methods: [<MethodInvoker for 'login'>]},
                  //    {wait: false, methods: [<MethodInvoker for 'foo'>,
                  //                            <MethodInvoker for 'bar'>]}]
                  // This means that there were some methods which were sent to the server and
                  // which have returned their results, but some of the data written by
                  // the methods may not be visible in the local cache. Once all that data is
                  // visible, we will send a 'login' method. Once the login method has returned
                  // and all the data is visible (including re-running subs if userId changes),
                  // we will send the 'foo' and 'bar' methods in parallel.

                  self._outstandingMethodBlocks = []; // method ID -> array of objects with keys 'collection' and 'id', listing
                  // documents written by a given method's stub. keys are associated with
                  // methods whose stub wrote at least one document, and whose data-done message
                  // has not yet been received.

                  self._documentsWrittenByStub = Object.create(null); // collection -> IdMap of "server document" object. A "server document" has:
                  // - "document": the version of the document according the
                  //   server (ie, the snapshot before a stub wrote it, amended by any changes
                  //   received from the server)
                  //   It is undefined if we think the document does not exist
                  // - "writtenByStubs": a set of method IDs whose stubs wrote to the document
                  //   whose "data done" messages have not yet been processed

                  self._serverDocuments = Object.create(null); // Array of callbacks to be called after the next update of the local
                  // cache. Used for:
                  //  - Calling methodInvoker.dataVisible and sub ready callbacks after
                  //    the relevant data is flushed.
                  //  - Invoking the callbacks of "half-finished" methods after reconnect
                  //    quiescence. Specifically, methods whose result was received over the old
                  //    connection (so we don't re-send it) but whose data had not been made
                  //    visible.

                  self._afterUpdateCallbacks = []; // In two contexts, we buffer all incoming data messages and then process them
                  // all at once in a single update:
                  //   - During reconnect, we buffer all data messages until all subs that had
                  //     been ready before reconnect are ready again, and all methods that are
                  //     active have returned their "data done message"; then
                  //   - During the execution of a "wait" method, we buffer all data messages
                  //     until the wait method gets its "data done" message. (If the wait method
                  //     occurs during reconnect, it doesn't get any special handling.)
                  // all data messages are processed in one update.
                  //
                  // The following fields are used for this "quiescence" process.
                  // This buffers the messages that aren't being processed yet.

                  self._messagesBufferedUntilQuiescence = []; // Map from method ID -> true. Methods are removed from this when their
                  // "data done" message is received, and we will not quiesce until it is
                  // empty.

                  self._methodsBlockingQuiescence = Object.create(null); // map from sub ID -> true for subs that were ready (ie, called the sub
                  // ready callback) before reconnect but haven't become ready again yet

                  self._subsBeingRevived = Object.create(null); // map from sub._id -> true
                  // if true, the next data update should reset all stores. (set during
                  // reconnect.)

                  self._resetStores = false; // name -> array of updates for (yet to be created) collections

                  self._updatesForUnknownStores = Object.create(null); // if we're blocking a migration, the retry func

                  self._retryMigrate = null;
                  self.__flushBufferedWrites = Meteor.bindEnvironment(self._flushBufferedWrites, 'flushing DDP buffered writes', self); // Collection name -> array of messages.

                  self._bufferedWrites = Object.create(null); // When current buffer of updates must be flushed at, in ms timestamp.

                  self._bufferedWritesFlushAt = null; // Timeout handle for the next processing of all pending writes

                  self._bufferedWritesFlushHandle = null;
                  self._bufferedWritesInterval = options.bufferedWritesInterval;
                  self._bufferedWritesMaxAge = options.bufferedWritesMaxAge; // metadata for subscriptions.  Map from sub ID to object with keys:
                  //   - id
                  //   - name
                  //   - params
                  //   - inactive (if true, will be cleaned up if not reused in re-run)
                  //   - ready (has the 'ready' message been received?)
                  //   - readyCallback (an optional callback to call when ready)
                  //   - errorCallback (an optional callback to call if the sub terminates with
                  //                    an error, XXX COMPAT WITH 1.0.3.1)
                  //   - stopCallback (an optional callback to call when the sub terminates
                  //     for any reason, with an error argument if an error triggered the stop)

                  self._subscriptions = Object.create(null); // Reactive userId.

                  self._userId = null;
                  self._userIdDeps = new Tracker.Dependency(); // Block auto-reload while we're waiting for method responses.

                  if (Meteor.isClient && Package.reload && !options.reloadWithOutstanding) {
                    Package.reload.Reload._onMigrate(function (retry) {
                      if (!self._readyToMigrate()) {
                        if (self._retryMigrate) throw new Error('Two migrations in progress?');
                        self._retryMigrate = retry;
                        return false;
                      } else {
                        return [true];
                      }
                    });
                  }

                  var onDisconnect = function () {
                    if (self._heartbeat) {
                      self._heartbeat.stop();

                      self._heartbeat = null;
                    }
                  };

                  if (Meteor.isServer) {
                    self._stream.on('message', Meteor.bindEnvironment(this.onMessage.bind(this), 'handling DDP message'));

                    self._stream.on('reset', Meteor.bindEnvironment(this.onReset.bind(this), 'handling DDP reset'));

                    self._stream.on('disconnect', Meteor.bindEnvironment(onDisconnect, 'handling DDP disconnect'));
                  } else {
                    self._stream.on('message', this.onMessage.bind(this));

                    self._stream.on('reset', this.onReset.bind(this));

                    self._stream.on('disconnect', onDisconnect);
                  }
                } // 'name' is the name of the data on the wire that should go in the
                // store. 'wrappedStore' should be an object with methods beginUpdate, update,
                // endUpdate, saveOriginals, retrieveOriginals. see Collection for an example.


                var _proto = Connection.prototype;

                _proto.registerStore = function () {
                  function registerStore(name, wrappedStore) {
                    var self = this;
                    if (name in self._stores) return false; // Wrap the input object in an object which makes any store method not
                    // implemented by 'store' into a no-op.

                    var store = Object.create(null);
                    ['update', 'beginUpdate', 'endUpdate', 'saveOriginals', 'retrieveOriginals', 'getDoc', '_getCollection'].forEach(function (method) {
                      store[method] = function () {
                        if (wrappedStore[method]) {
                          return wrappedStore[method].apply(wrappedStore, arguments);
                        }
                      };
                    });
                    self._stores[name] = store;
                    var queued = self._updatesForUnknownStores[name];

                    if (queued) {
                      store.beginUpdate(queued.length, false);
                      queued.forEach(function (msg) {
                        store.update(msg);
                      });
                      store.endUpdate();
                      delete self._updatesForUnknownStores[name];
                    }

                    return true;
                  }

                  return registerStore;
                }();
                /**
                 * @memberOf Meteor
                 * @importFromPackage meteor
                 * @alias Meteor.subscribe
                 * @summary Subscribe to a record set.  Returns a handle that provides
                 * `stop()` and `ready()` methods.
                 * @locus Client
                 * @param {String} name Name of the subscription.  Matches the name of the
                 * server's `publish()` call.
                 * @param {EJSONable} [arg1,arg2...] Optional arguments passed to publisher
                 * function on server.
                 * @param {Function|Object} [callbacks] Optional. May include `onStop`
                 * and `onReady` callbacks. If there is an error, it is passed as an
                 * argument to `onStop`. If a function is passed instead of an object, it
                 * is interpreted as an `onReady` callback.
                 */

                _proto.subscribe = function () {
                  function subscribe(name
                  /* .. [arguments] .. (callback|callbacks) */
                  ) {
                    var self = this;
                    var params = slice.call(arguments, 1);
                    var callbacks = Object.create(null);

                    if (params.length) {
                      var lastParam = params[params.length - 1];

                      if (typeof lastParam === 'function') {
                        callbacks.onReady = params.pop();
                      } else if (lastParam && [lastParam.onReady, // XXX COMPAT WITH 1.0.3.1 onError used to exist, but now we use
                      // onStop with an error callback instead.
                      lastParam.onError, lastParam.onStop].some(function (f) {
                        return typeof f === "function";
                      })) {
                        callbacks = params.pop();
                      }
                    } // Is there an existing sub with the same name and param, run in an
                    // invalidated Computation? This will happen if we are rerunning an
                    // existing computation.
                    //
                    // For example, consider a rerun of:
                    //
                    //     Tracker.autorun(function () {
                    //       Meteor.subscribe("foo", Session.get("foo"));
                    //       Meteor.subscribe("bar", Session.get("bar"));
                    //     });
                    //
                    // If "foo" has changed but "bar" has not, we will match the "bar"
                    // subcribe to an existing inactive subscription in order to not
                    // unsub and resub the subscription unnecessarily.
                    //
                    // We only look for one such sub; if there are N apparently-identical subs
                    // being invalidated, we will require N matching subscribe calls to keep
                    // them all active.


                    var existing;
                    keys(self._subscriptions).some(function (id) {
                      var sub = self._subscriptions[id];

                      if (sub.inactive && sub.name === name && EJSON.equals(sub.params, params)) {
                        return existing = sub;
                      }
                    });
                    var id;

                    if (existing) {
                      id = existing.id;
                      existing.inactive = false; // reactivate

                      if (callbacks.onReady) {
                        // If the sub is not already ready, replace any ready callback with the
                        // one provided now. (It's not really clear what users would expect for
                        // an onReady callback inside an autorun; the semantics we provide is
                        // that at the time the sub first becomes ready, we call the last
                        // onReady callback provided, if any.)
                        // If the sub is already ready, run the ready callback right away.
                        // It seems that users would expect an onReady callback inside an
                        // autorun to trigger once the the sub first becomes ready and also
                        // when re-subs happens.
                        if (existing.ready) {
                          callbacks.onReady();
                        } else {
                          existing.readyCallback = callbacks.onReady;
                        }
                      } // XXX COMPAT WITH 1.0.3.1 we used to have onError but now we call
                      // onStop with an optional error argument


                      if (callbacks.onError) {
                        // Replace existing callback if any, so that errors aren't
                        // double-reported.
                        existing.errorCallback = callbacks.onError;
                      }

                      if (callbacks.onStop) {
                        existing.stopCallback = callbacks.onStop;
                      }
                    } else {
                      // New sub! Generate an id, save it locally, and send message.
                      id = Random.id();
                      self._subscriptions[id] = {
                        id: id,
                        name: name,
                        params: EJSON.clone(params),
                        inactive: false,
                        ready: false,
                        readyDeps: new Tracker.Dependency(),
                        readyCallback: callbacks.onReady,
                        // XXX COMPAT WITH 1.0.3.1 #errorCallback
                        errorCallback: callbacks.onError,
                        stopCallback: callbacks.onStop,
                        connection: self,
                        remove: function () {
                          delete this.connection._subscriptions[this.id];
                          this.ready && this.readyDeps.changed();
                        },
                        stop: function () {
                          this.connection._send({
                            msg: 'unsub',
                            id: id
                          });

                          this.remove();

                          if (callbacks.onStop) {
                            callbacks.onStop();
                          }
                        }
                      };

                      self._send({
                        msg: 'sub',
                        id: id,
                        name: name,
                        params: params
                      });
                    } // return a handle to the application.


                    var handle = {
                      stop: function () {
                        if (!hasOwn.call(self._subscriptions, id)) {
                          return;
                        }

                        self._subscriptions[id].stop();
                      },
                      ready: function () {
                        // return false if we've unsubscribed.
                        if (!hasOwn.call(self._subscriptions, id)) {
                          return false;
                        }

                        var record = self._subscriptions[id];
                        record.readyDeps.depend();
                        return record.ready;
                      },
                      subscriptionId: id
                    };

                    if (Tracker.active) {
                      // We're in a reactive computation, so we'd like to unsubscribe when the
                      // computation is invalidated... but not if the rerun just re-subscribes
                      // to the same subscription!  When a rerun happens, we use onInvalidate
                      // as a change to mark the subscription "inactive" so that it can
                      // be reused from the rerun.  If it isn't reused, it's killed from
                      // an afterFlush.
                      Tracker.onInvalidate(function (c) {
                        if (hasOwn.call(self._subscriptions, id)) {
                          self._subscriptions[id].inactive = true;
                        }

                        Tracker.afterFlush(function () {
                          if (hasOwn.call(self._subscriptions, id) && self._subscriptions[id].inactive) {
                            handle.stop();
                          }
                        });
                      });
                    }

                    return handle;
                  }

                  return subscribe;
                }(); // options:
                // - onLateError {Function(error)} called if an error was received after the ready event.
                //     (errors received before ready cause an error to be thrown)


                _proto._subscribeAndWait = function () {
                  function _subscribeAndWait(name, args, options) {
                    var self = this;
                    var f = new Future();
                    var ready = false;
                    var handle;
                    args = args || [];
                    args.push({
                      onReady: function () {
                        ready = true;
                        f['return']();
                      },
                      onError: function (e) {
                        if (!ready) f['throw'](e);else options && options.onLateError && options.onLateError(e);
                      }
                    });
                    handle = self.subscribe.apply(self, [name].concat(args));
                    f.wait();
                    return handle;
                  }

                  return _subscribeAndWait;
                }();

                _proto.methods = function () {
                  function methods(_methods) {
                    var _this = this;

                    keys(_methods).forEach(function (name) {
                      var func = _methods[name];

                      if (typeof func !== 'function') {
                        throw new Error("Method '" + name + "' must be a function");
                      }

                      if (_this._methodHandlers[name]) {
                        throw new Error("A method named '" + name + "' is already defined");
                      }

                      _this._methodHandlers[name] = func;
                    });
                  }

                  return methods;
                }();
                /**
                 * @memberOf Meteor
                 * @importFromPackage meteor
                 * @alias Meteor.call
                 * @summary Invokes a method passing any number of arguments.
                 * @locus Anywhere
                 * @param {String} name Name of method to invoke
                 * @param {EJSONable} [arg1,arg2...] Optional method arguments
                 * @param {Function} [asyncCallback] Optional callback, which is called asynchronously with the error or result after the method is complete. If not provided, the method runs synchronously if possible (see below).
                 */

                _proto.call = function () {
                  function call(name
                  /* .. [arguments] .. callback */
                  ) {
                    // if it's a function, the last argument is the result callback,
                    // not a parameter to the remote method.
                    var args = slice.call(arguments, 1);
                    if (args.length && typeof args[args.length - 1] === 'function') var callback = args.pop();
                    return this.apply(name, args, callback);
                  }

                  return call;
                }();
                /**
                 * @memberOf Meteor
                 * @importFromPackage meteor
                 * @alias Meteor.apply
                 * @summary Invoke a method passing an array of arguments.
                 * @locus Anywhere
                 * @param {String} name Name of method to invoke
                 * @param {EJSONable[]} args Method arguments
                 * @param {Object} [options]
                 * @param {Boolean} options.wait (Client only) If true, don't send this method until all previous method calls have completed, and don't send any subsequent method calls until this one is completed.
                 * @param {Function} options.onResultReceived (Client only) This callback is invoked with the error or result of the method (just like `asyncCallback`) as soon as the error or result is available. The local cache may not yet reflect the writes performed by the method.
                 * @param {Boolean} options.noRetry (Client only) if true, don't send this method again on reload, simply call the callback an error with the error code 'invocation-failed'.
                 * @param {Boolean} options.throwStubExceptions (Client only) If true, exceptions thrown by method stubs will be thrown instead of logged, and the method will not be invoked on the server.
                 * @param {Boolean} options.returnStubValue (Client only) If true then in cases where we would have otherwise discarded the stub's return value and returned undefined, instead we go ahead and return it. Specifically, this is any time other than when (a) we are already inside a stub or (b) we are in Node and no callback was provided. Currently we require this flag to be explicitly passed to reduce the likelihood that stub return values will be confused with server return values; we may improve this in future.
                 * @param {Function} [asyncCallback] Optional callback; same semantics as in [`Meteor.call`](#meteor_call).
                 */

                _proto.apply = function () {
                  function apply(name, args, options, callback) {
                    var self = this; // We were passed 3 arguments. They may be either (name, args, options)
                    // or (name, args, callback)

                    if (!callback && typeof options === 'function') {
                      callback = options;
                      options = Object.create(null);
                    }

                    options = options || Object.create(null);

                    if (callback) {
                      // XXX would it be better form to do the binding in stream.on,
                      // or caller, instead of here?
                      // XXX improve error message (and how we report it)
                      callback = Meteor.bindEnvironment(callback, "delivering result of invoking '" + name + "'");
                    } // Keep our args safe from mutation (eg if we don't send the message for a
                    // while because of a wait method).


                    args = EJSON.clone(args);

                    var enclosing = DDP._CurrentMethodInvocation.get();

                    var alreadyInSimulation = enclosing && enclosing.isSimulation; // Lazily generate a randomSeed, only if it is requested by the stub.
                    // The random streams only have utility if they're used on both the client
                    // and the server; if the client doesn't generate any 'random' values
                    // then we don't expect the server to generate any either.
                    // Less commonly, the server may perform different actions from the client,
                    // and may in fact generate values where the client did not, but we don't
                    // have any client-side values to match, so even here we may as well just
                    // use a random seed on the server.  In that case, we don't pass the
                    // randomSeed to save bandwidth, and we don't even generate it to save a
                    // bit of CPU and to avoid consuming entropy.

                    var randomSeed = null;

                    var randomSeedGenerator = function () {
                      if (randomSeed === null) {
                        randomSeed = DDPCommon.makeRpcSeed(enclosing, name);
                      }

                      return randomSeed;
                    }; // Run the stub, if we have one. The stub is supposed to make some
                    // temporary writes to the database to give the user a smooth experience
                    // until the actual result of executing the method comes back from the
                    // server (whereupon the temporary writes to the database will be reversed
                    // during the beginUpdate/endUpdate process.)
                    //
                    // Normally, we ignore the return value of the stub (even if it is an
                    // exception), in favor of the real return value from the server. The
                    // exception is if the *caller* is a stub. In that case, we're not going
                    // to do a RPC, so we use the return value of the stub as our return
                    // value.


                    var stub = self._methodHandlers[name];

                    if (stub) {
                      var setUserId = function (userId) {
                        self.setUserId(userId);
                      };

                      var invocation = new DDPCommon.MethodInvocation({
                        isSimulation: true,
                        userId: self.userId(),
                        setUserId: setUserId,
                        randomSeed: function () {
                          return randomSeedGenerator();
                        }
                      });
                      if (!alreadyInSimulation) self._saveOriginals();

                      try {
                        // Note that unlike in the corresponding server code, we never audit
                        // that stubs check() their arguments.
                        var stubReturnValue = DDP._CurrentMethodInvocation.withValue(invocation, function () {
                          if (Meteor.isServer) {
                            // Because saveOriginals and retrieveOriginals aren't reentrant,
                            // don't allow stubs to yield.
                            return Meteor._noYieldsAllowed(function () {
                              // re-clone, so that the stub can't affect our caller's values
                              return stub.apply(invocation, EJSON.clone(args));
                            });
                          } else {
                            return stub.apply(invocation, EJSON.clone(args));
                          }
                        });
                      } catch (e) {
                        var exception = e;
                      }
                    } // If we're in a simulation, stop and return the result we have,
                    // rather than going on to do an RPC. If there was no stub,
                    // we'll end up returning undefined.


                    if (alreadyInSimulation) {
                      if (callback) {
                        callback(exception, stubReturnValue);
                        return undefined;
                      }

                      if (exception) throw exception;
                      return stubReturnValue;
                    } // We only create the methodId here because we don't actually need one if
                    // we're already in a simulation


                    var methodId = '' + self._nextMethodId++;

                    if (stub) {
                      self._retrieveAndStoreOriginals(methodId);
                    } // Generate the DDP message for the method call. Note that on the client,
                    // it is important that the stub have finished before we send the RPC, so
                    // that we know we have a complete list of which local documents the stub
                    // wrote.


                    var message = {
                      msg: 'method',
                      method: name,
                      params: args,
                      id: methodId
                    }; // If an exception occurred in a stub, and we're ignoring it
                    // because we're doing an RPC and want to use what the server
                    // returns instead, log it so the developer knows
                    // (unless they explicitly ask to see the error).
                    //
                    // Tests can set the '_expectedByTest' flag on an exception so it won't
                    // go to log.

                    if (exception) {
                      if (options.throwStubExceptions) {
                        throw exception;
                      } else if (!exception._expectedByTest) {
                        Meteor._debug("Exception while simulating the effect of invoking '" + name + "'", exception);
                      }
                    } // At this point we're definitely doing an RPC, and we're going to
                    // return the value of the RPC to the caller.
                    // If the caller didn't give a callback, decide what to do.


                    if (!callback) {
                      if (Meteor.isClient) {
                        // On the client, we don't have fibers, so we can't block. The
                        // only thing we can do is to return undefined and discard the
                        // result of the RPC. If an error occurred then print the error
                        // to the console.
                        callback = function (err) {
                          err && Meteor._debug("Error invoking Method '" + name + "'", err);
                        };
                      } else {
                        // On the server, make the function synchronous. Throw on
                        // errors, return on success.
                        var future = new Future();
                        callback = future.resolver();
                      }
                    } // Send the randomSeed only if we used it


                    if (randomSeed !== null) {
                      message.randomSeed = randomSeed;
                    }

                    var methodInvoker = new MethodInvoker({
                      methodId: methodId,
                      callback: callback,
                      connection: self,
                      onResultReceived: options.onResultReceived,
                      wait: !!options.wait,
                      message: message,
                      noRetry: !!options.noRetry
                    });

                    if (options.wait) {
                      // It's a wait method! Wait methods go in their own block.
                      self._outstandingMethodBlocks.push({
                        wait: true,
                        methods: [methodInvoker]
                      });
                    } else {
                      // Not a wait method. Start a new block if the previous block was a wait
                      // block, and add it to the last block of methods.
                      if (isEmpty(self._outstandingMethodBlocks) || last(self._outstandingMethodBlocks).wait) {
                        self._outstandingMethodBlocks.push({
                          wait: false,
                          methods: []
                        });
                      }

                      last(self._outstandingMethodBlocks).methods.push(methodInvoker);
                    } // If we added it to the first block, send it out now.


                    if (self._outstandingMethodBlocks.length === 1) methodInvoker.sendMessage(); // If we're using the default callback on the server,
                    // block waiting for the result.

                    if (future) {
                      return future.wait();
                    }

                    return options.returnStubValue ? stubReturnValue : undefined;
                  }

                  return apply;
                }(); // Before calling a method stub, prepare all stores to track changes and allow
                // _retrieveAndStoreOriginals to get the original versions of changed
                // documents.


                _proto._saveOriginals = function () {
                  function _saveOriginals() {
                    var _this2 = this;

                    if (!this._waitingForQuiescence()) {
                      this._flushBufferedWrites();
                    }

                    keys(this._stores).forEach(function (storeName) {
                      _this2._stores[storeName].saveOriginals();
                    });
                  }

                  return _saveOriginals;
                }(); // Retrieves the original versions of all documents modified by the stub for
                // method 'methodId' from all stores and saves them to _serverDocuments (keyed
                // by document) and _documentsWrittenByStub (keyed by method ID).


                _proto._retrieveAndStoreOriginals = function () {
                  function _retrieveAndStoreOriginals(methodId) {
                    var self = this;
                    if (self._documentsWrittenByStub[methodId]) throw new Error('Duplicate methodId in _retrieveAndStoreOriginals');
                    var docsWritten = [];
                    keys(self._stores).forEach(function (collection) {
                      var originals = self._stores[collection].retrieveOriginals(); // not all stores define retrieveOriginals


                      if (!originals) return;
                      originals.forEach(function (doc, id) {
                        docsWritten.push({
                          collection: collection,
                          id: id
                        });

                        if (!hasOwn.call(self._serverDocuments, collection)) {
                          self._serverDocuments[collection] = new MongoIDMap();
                        }

                        var serverDoc = self._serverDocuments[collection].setDefault(id, Object.create(null));

                        if (serverDoc.writtenByStubs) {
                          // We're not the first stub to write this doc. Just add our method ID
                          // to the record.
                          serverDoc.writtenByStubs[methodId] = true;
                        } else {
                          // First stub! Save the original value and our method ID.
                          serverDoc.document = doc;
                          serverDoc.flushCallbacks = [];
                          serverDoc.writtenByStubs = Object.create(null);
                          serverDoc.writtenByStubs[methodId] = true;
                        }
                      });
                    });

                    if (!isEmpty(docsWritten)) {
                      self._documentsWrittenByStub[methodId] = docsWritten;
                    }
                  }

                  return _retrieveAndStoreOriginals;
                }(); // This is very much a private function we use to make the tests
                // take up fewer server resources after they complete.


                _proto._unsubscribeAll = function () {
                  function _unsubscribeAll() {
                    var _this3 = this;

                    keys(this._subscriptions).forEach(function (id) {
                      var sub = _this3._subscriptions[id]; // Avoid killing the autoupdate subscription so that developers
                      // still get hot code pushes when writing tests.
                      //
                      // XXX it's a hack to encode knowledge about autoupdate here,
                      // but it doesn't seem worth it yet to have a special API for
                      // subscriptions to preserve after unit tests.

                      if (sub.name !== 'meteor_autoupdate_clientVersions') {
                        sub.stop();
                      }
                    });
                  }

                  return _unsubscribeAll;
                }(); // Sends the DDP stringification of the given message object


                _proto._send = function () {
                  function _send(obj) {
                    this._stream.send(DDPCommon.stringifyDDP(obj));
                  }

                  return _send;
                }(); // We detected via DDP-level heartbeats that we've lost the
                // connection.  Unlike `disconnect` or `close`, a lost connection
                // will be automatically retried.


                _proto._lostConnection = function () {
                  function _lostConnection(error) {
                    this._stream._lostConnection(error);
                  }

                  return _lostConnection;
                }();
                /**
                 * @memberOf Meteor
                 * @importFromPackage meteor
                 * @alias Meteor.status
                 * @summary Get the current connection status. A reactive data source.
                 * @locus Client
                 */

                _proto.status = function () {
                  function status() {
                    var _this$_stream;

                    return (_this$_stream = this._stream).status.apply(_this$_stream, arguments);
                  }

                  return status;
                }();
                /**
                 * @summary Force an immediate reconnection attempt if the client is not connected to the server.
                 This method does nothing if the client is already connected.
                 * @memberOf Meteor
                 * @importFromPackage meteor
                 * @alias Meteor.reconnect
                 * @locus Client
                 */

                _proto.reconnect = function () {
                  function reconnect() {
                    var _this$_stream2;

                    return (_this$_stream2 = this._stream).reconnect.apply(_this$_stream2, arguments);
                  }

                  return reconnect;
                }();
                /**
                 * @memberOf Meteor
                 * @importFromPackage meteor
                 * @alias Meteor.disconnect
                 * @summary Disconnect the client from the server.
                 * @locus Client
                 */

                _proto.disconnect = function () {
                  function disconnect() {
                    var _this$_stream3;

                    return (_this$_stream3 = this._stream).disconnect.apply(_this$_stream3, arguments);
                  }

                  return disconnect;
                }();

                _proto.close = function () {
                  function close() {
                    return this._stream.disconnect({
                      _permanent: true
                    });
                  }

                  return close;
                }(); ///
                /// Reactive user system
                ///


                _proto.userId = function () {
                  function userId() {
                    if (this._userIdDeps) this._userIdDeps.depend();
                    return this._userId;
                  }

                  return userId;
                }();

                _proto.setUserId = function () {
                  function setUserId(userId) {
                    // Avoid invalidating dependents if setUserId is called with current value.
                    if (this._userId === userId) return;
                    this._userId = userId;
                    if (this._userIdDeps) this._userIdDeps.changed();
                  }

                  return setUserId;
                }(); // Returns true if we are in a state after reconnect of waiting for subs to be
                // revived or early methods to finish their data, or we are waiting for a
                // "wait" method to finish.


                _proto._waitingForQuiescence = function () {
                  function _waitingForQuiescence() {
                    return !isEmpty(this._subsBeingRevived) || !isEmpty(this._methodsBlockingQuiescence);
                  }

                  return _waitingForQuiescence;
                }(); // Returns true if any method whose message has been sent to the server has
                // not yet invoked its user callback.


                _proto._anyMethodsAreOutstanding = function () {
                  function _anyMethodsAreOutstanding() {
                    var invokers = this._methodInvokers;
                    return keys(invokers).some(function (id) {
                      return invokers[id].sentMessage;
                    });
                  }

                  return _anyMethodsAreOutstanding;
                }();

                _proto._livedata_connected = function () {
                  function _livedata_connected(msg) {
                    var self = this;

                    if (self._version !== 'pre1' && self._heartbeatInterval !== 0) {
                      self._heartbeat = new DDPCommon.Heartbeat({
                        heartbeatInterval: self._heartbeatInterval,
                        heartbeatTimeout: self._heartbeatTimeout,
                        onTimeout: function () {
                          self._lostConnection(new DDP.ConnectionError('DDP heartbeat timed out'));
                        },
                        sendPing: function () {
                          self._send({
                            msg: 'ping'
                          });
                        }
                      });

                      self._heartbeat.start();
                    } // If this is a reconnect, we'll have to reset all stores.


                    if (self._lastSessionId) self._resetStores = true;

                    if (typeof msg.session === 'string') {
                      var reconnectedToPreviousSession = self._lastSessionId === msg.session;
                      self._lastSessionId = msg.session;
                    }

                    if (reconnectedToPreviousSession) {
                      // Successful reconnection -- pick up where we left off.  Note that right
                      // now, this never happens: the server never connects us to a previous
                      // session, because DDP doesn't provide enough data for the server to know
                      // what messages the client has processed. We need to improve DDP to make
                      // this possible, at which point we'll probably need more code here.
                      return;
                    } // Server doesn't have our data any more. Re-sync a new session.
                    // Forget about messages we were buffering for unknown collections. They'll
                    // be resent if still relevant.


                    self._updatesForUnknownStores = Object.create(null);

                    if (self._resetStores) {
                      // Forget about the effects of stubs. We'll be resetting all collections
                      // anyway.
                      self._documentsWrittenByStub = Object.create(null);
                      self._serverDocuments = Object.create(null);
                    } // Clear _afterUpdateCallbacks.


                    self._afterUpdateCallbacks = []; // Mark all named subscriptions which are ready (ie, we already called the
                    // ready callback) as needing to be revived.
                    // XXX We should also block reconnect quiescence until unnamed subscriptions
                    //     (eg, autopublish) are done re-publishing to avoid flicker!

                    self._subsBeingRevived = Object.create(null);
                    keys(self._subscriptions).forEach(function (id) {
                      if (self._subscriptions[id].ready) {
                        self._subsBeingRevived[id] = true;
                      }
                    }); // Arrange for "half-finished" methods to have their callbacks run, and
                    // track methods that were sent on this connection so that we don't
                    // quiesce until they are all done.
                    //
                    // Start by clearing _methodsBlockingQuiescence: methods sent before
                    // reconnect don't matter, and any "wait" methods sent on the new connection
                    // that we drop here will be restored by the loop below.

                    self._methodsBlockingQuiescence = Object.create(null);

                    if (self._resetStores) {
                      var invokers = self._methodInvokers;
                      keys(invokers).forEach(function (id) {
                        var invoker = invokers[id];

                        if (invoker.gotResult()) {
                          // This method already got its result, but it didn't call its callback
                          // because its data didn't become visible. We did not resend the
                          // method RPC. We'll call its callback when we get a full quiesce,
                          // since that's as close as we'll get to "data must be visible".
                          self._afterUpdateCallbacks.push(function () {
                            return invoker.dataVisible.apply(invoker, arguments);
                          });
                        } else if (invoker.sentMessage) {
                          // This method has been sent on this connection (maybe as a resend
                          // from the last connection, maybe from onReconnect, maybe just very
                          // quickly before processing the connected message).
                          //
                          // We don't need to do anything special to ensure its callbacks get
                          // called, but we'll count it as a method which is preventing
                          // reconnect quiescence. (eg, it might be a login method that was run
                          // from onReconnect, and we don't want to see flicker by seeing a
                          // logged-out state.)
                          self._methodsBlockingQuiescence[invoker.methodId] = true;
                        }
                      });
                    }

                    self._messagesBufferedUntilQuiescence = []; // If we're not waiting on any methods or subs, we can reset the stores and
                    // call the callbacks immediately.

                    if (!self._waitingForQuiescence()) {
                      if (self._resetStores) {
                        keys(self._stores).forEach(function (storeName) {
                          var s = self._stores[storeName];
                          s.beginUpdate(0, true);
                          s.endUpdate();
                        });
                        self._resetStores = false;
                      }

                      self._runAfterUpdateCallbacks();
                    }
                  }

                  return _livedata_connected;
                }();

                _proto._processOneDataMessage = function () {
                  function _processOneDataMessage(msg, updates) {
                    var messageType = msg.msg; // msg is one of ['added', 'changed', 'removed', 'ready', 'updated']

                    if (messageType === 'added') {
                      this._process_added(msg, updates);
                    } else if (messageType === 'changed') {
                      this._process_changed(msg, updates);
                    } else if (messageType === 'removed') {
                      this._process_removed(msg, updates);
                    } else if (messageType === 'ready') {
                      this._process_ready(msg, updates);
                    } else if (messageType === 'updated') {
                      this._process_updated(msg, updates);
                    } else if (messageType === 'nosub') {// ignore this
                    } else {
                      Meteor._debug('discarding unknown livedata data message type', msg);
                    }
                  }

                  return _processOneDataMessage;
                }();

                _proto._livedata_data = function () {
                  function _livedata_data(msg) {
                    var self = this;

                    if (self._waitingForQuiescence()) {
                      self._messagesBufferedUntilQuiescence.push(msg);

                      if (msg.msg === 'nosub') {
                        delete self._subsBeingRevived[msg.id];
                      }

                      if (msg.subs) {
                        msg.subs.forEach(function (subId) {
                          delete self._subsBeingRevived[subId];
                        });
                      }

                      if (msg.methods) {
                        msg.methods.forEach(function (methodId) {
                          delete self._methodsBlockingQuiescence[methodId];
                        });
                      }

                      if (self._waitingForQuiescence()) {
                        return;
                      } // No methods or subs are blocking quiescence!
                      // We'll now process and all of our buffered messages, reset all stores,
                      // and apply them all at once.


                      var bufferedMessages = self._messagesBufferedUntilQuiescence;
                      keys(bufferedMessages).forEach(function (id) {
                        self._processOneDataMessage(bufferedMessages[id], self._bufferedWrites);
                      });
                      self._messagesBufferedUntilQuiescence = [];
                    } else {
                      self._processOneDataMessage(msg, self._bufferedWrites);
                    } // Immediately flush writes when:
                    //  1. Buffering is disabled. Or;
                    //  2. any non-(added/changed/removed) message arrives.


                    var standardWrite = msg.msg === "added" || msg.msg === "changed" || msg.msg === "removed";

                    if (self._bufferedWritesInterval === 0 || !standardWrite) {
                      self._flushBufferedWrites();

                      return;
                    }

                    if (self._bufferedWritesFlushAt === null) {
                      self._bufferedWritesFlushAt = new Date().valueOf() + self._bufferedWritesMaxAge;
                    } else if (self._bufferedWritesFlushAt < new Date().valueOf()) {
                      self._flushBufferedWrites();

                      return;
                    }

                    if (self._bufferedWritesFlushHandle) {
                      clearTimeout(self._bufferedWritesFlushHandle);
                    }

                    self._bufferedWritesFlushHandle = setTimeout(self.__flushBufferedWrites, self._bufferedWritesInterval);
                  }

                  return _livedata_data;
                }();

                _proto._flushBufferedWrites = function () {
                  function _flushBufferedWrites() {
                    var self = this;

                    if (self._bufferedWritesFlushHandle) {
                      clearTimeout(self._bufferedWritesFlushHandle);
                      self._bufferedWritesFlushHandle = null;
                    }

                    self._bufferedWritesFlushAt = null; // We need to clear the buffer before passing it to
                    //  performWrites. As there's no guarantee that it
                    //  will exit cleanly.

                    var writes = self._bufferedWrites;
                    self._bufferedWrites = Object.create(null);

                    self._performWrites(writes);
                  }

                  return _flushBufferedWrites;
                }();

                _proto._performWrites = function () {
                  function _performWrites(updates) {
                    var self = this;

                    if (self._resetStores || !isEmpty(updates)) {
                      // Begin a transactional update of each store.
                      keys(self._stores).forEach(function (storeName) {
                        self._stores[storeName].beginUpdate(hasOwn.call(updates, storeName) ? updates[storeName].length : 0, self._resetStores);
                      });
                      self._resetStores = false;
                      keys(updates).forEach(function (storeName) {
                        var updateMessages = updates[storeName];
                        var store = self._stores[storeName];

                        if (store) {
                          updateMessages.forEach(function (updateMessage) {
                            store.update(updateMessage);
                          });
                        } else {
                          var _updates$storeName;

                          // Nobody's listening for this data. Queue it up until
                          // someone wants it.
                          // XXX memory use will grow without bound if you forget to
                          // create a collection or just don't care about it... going
                          // to have to do something about that.
                          var _updates = self._updatesForUnknownStores;

                          if (!hasOwn.call(_updates, storeName)) {
                            _updates[storeName] = [];
                          }

                          (_updates$storeName = _updates[storeName]).push.apply(_updates$storeName, (0, _toConsumableArray2.default)(updateMessages));
                        }
                      }); // End update transaction.

                      keys(self._stores).forEach(function (storeName) {
                        self._stores[storeName].endUpdate();
                      });
                    }

                    self._runAfterUpdateCallbacks();
                  }

                  return _performWrites;
                }(); // Call any callbacks deferred with _runWhenAllServerDocsAreFlushed whose
                // relevant docs have been flushed, as well as dataVisible callbacks at
                // reconnect-quiescence time.


                _proto._runAfterUpdateCallbacks = function () {
                  function _runAfterUpdateCallbacks() {
                    var self = this;
                    var callbacks = self._afterUpdateCallbacks;
                    self._afterUpdateCallbacks = [];
                    callbacks.forEach(function (c) {
                      c();
                    });
                  }

                  return _runAfterUpdateCallbacks;
                }();

                _proto._pushUpdate = function () {
                  function _pushUpdate(updates, collection, msg) {
                    if (!hasOwn.call(updates, collection)) {
                      updates[collection] = [];
                    }

                    updates[collection].push(msg);
                  }

                  return _pushUpdate;
                }();

                _proto._getServerDoc = function () {
                  function _getServerDoc(collection, id) {
                    var self = this;

                    if (!hasOwn.call(self._serverDocuments, collection)) {
                      return null;
                    }

                    var serverDocsForCollection = self._serverDocuments[collection];
                    return serverDocsForCollection.get(id) || null;
                  }

                  return _getServerDoc;
                }();

                _proto._process_added = function () {
                  function _process_added(msg, updates) {
                    var self = this;
                    var id = MongoID.idParse(msg.id);

                    var serverDoc = self._getServerDoc(msg.collection, id);

                    if (serverDoc) {
                      // Some outstanding stub wrote here.
                      var isExisting = serverDoc.document !== undefined;
                      serverDoc.document = msg.fields || Object.create(null);
                      serverDoc.document._id = id;

                      if (self._resetStores) {
                        // During reconnect the server is sending adds for existing ids.
                        // Always push an update so that document stays in the store after
                        // reset. Use current version of the document for this update, so
                        // that stub-written values are preserved.
                        var currentDoc = self._stores[msg.collection].getDoc(msg.id);

                        if (currentDoc !== undefined) msg.fields = currentDoc;

                        self._pushUpdate(updates, msg.collection, msg);
                      } else if (isExisting) {
                        throw new Error('Server sent add for existing id: ' + msg.id);
                      }
                    } else {
                      self._pushUpdate(updates, msg.collection, msg);
                    }
                  }

                  return _process_added;
                }();

                _proto._process_changed = function () {
                  function _process_changed(msg, updates) {
                    var self = this;

                    var serverDoc = self._getServerDoc(msg.collection, MongoID.idParse(msg.id));

                    if (serverDoc) {
                      if (serverDoc.document === undefined) throw new Error('Server sent changed for nonexisting id: ' + msg.id);
                      DiffSequence.applyChanges(serverDoc.document, msg.fields);
                    } else {
                      self._pushUpdate(updates, msg.collection, msg);
                    }
                  }

                  return _process_changed;
                }();

                _proto._process_removed = function () {
                  function _process_removed(msg, updates) {
                    var self = this;

                    var serverDoc = self._getServerDoc(msg.collection, MongoID.idParse(msg.id));

                    if (serverDoc) {
                      // Some outstanding stub wrote here.
                      if (serverDoc.document === undefined) throw new Error('Server sent removed for nonexisting id:' + msg.id);
                      serverDoc.document = undefined;
                    } else {
                      self._pushUpdate(updates, msg.collection, {
                        msg: 'removed',
                        collection: msg.collection,
                        id: msg.id
                      });
                    }
                  }

                  return _process_removed;
                }();

                _proto._process_updated = function () {
                  function _process_updated(msg, updates) {
                    var self = this; // Process "method done" messages.

                    msg.methods.forEach(function (methodId) {
                      var docs = self._documentsWrittenByStub[methodId];
                      keys(docs).forEach(function (id) {
                        var written = docs[id];

                        var serverDoc = self._getServerDoc(written.collection, written.id);

                        if (!serverDoc) {
                          throw new Error('Lost serverDoc for ' + JSON.stringify(written));
                        }

                        if (!serverDoc.writtenByStubs[methodId]) {
                          throw new Error('Doc ' + JSON.stringify(written) + ' not written by  method ' + methodId);
                        }

                        delete serverDoc.writtenByStubs[methodId];

                        if (isEmpty(serverDoc.writtenByStubs)) {
                          // All methods whose stubs wrote this method have completed! We can
                          // now copy the saved document to the database (reverting the stub's
                          // change if the server did not write to this object, or applying the
                          // server's writes if it did).
                          // This is a fake ddp 'replace' message.  It's just for talking
                          // between livedata connections and minimongo.  (We have to stringify
                          // the ID because it's supposed to look like a wire message.)
                          self._pushUpdate(updates, written.collection, {
                            msg: 'replace',
                            id: MongoID.idStringify(written.id),
                            replace: serverDoc.document
                          }); // Call all flush callbacks.


                          serverDoc.flushCallbacks.forEach(function (c) {
                            c();
                          }); // Delete this completed serverDocument. Don't bother to GC empty
                          // IdMaps inside self._serverDocuments, since there probably aren't
                          // many collections and they'll be written repeatedly.

                          self._serverDocuments[written.collection].remove(written.id);
                        }
                      });
                      delete self._documentsWrittenByStub[methodId]; // We want to call the data-written callback, but we can't do so until all
                      // currently buffered messages are flushed.

                      var callbackInvoker = self._methodInvokers[methodId];

                      if (!callbackInvoker) {
                        throw new Error('No callback invoker for method ' + methodId);
                      }

                      self._runWhenAllServerDocsAreFlushed(function () {
                        return callbackInvoker.dataVisible.apply(callbackInvoker, arguments);
                      });
                    });
                  }

                  return _process_updated;
                }();

                _proto._process_ready = function () {
                  function _process_ready(msg, updates) {
                    var self = this; // Process "sub ready" messages. "sub ready" messages don't take effect
                    // until all current server documents have been flushed to the local
                    // database. We can use a write fence to implement this.

                    msg.subs.forEach(function (subId) {
                      self._runWhenAllServerDocsAreFlushed(function () {
                        var subRecord = self._subscriptions[subId]; // Did we already unsubscribe?

                        if (!subRecord) return; // Did we already receive a ready message? (Oops!)

                        if (subRecord.ready) return;
                        subRecord.ready = true;
                        subRecord.readyCallback && subRecord.readyCallback();
                        subRecord.readyDeps.changed();
                      });
                    });
                  }

                  return _process_ready;
                }(); // Ensures that "f" will be called after all documents currently in
                // _serverDocuments have been written to the local cache. f will not be called
                // if the connection is lost before then!


                _proto._runWhenAllServerDocsAreFlushed = function () {
                  function _runWhenAllServerDocsAreFlushed(f) {
                    var self = this;

                    var runFAfterUpdates = function () {
                      self._afterUpdateCallbacks.push(f);
                    };

                    var unflushedServerDocCount = 0;

                    var onServerDocFlush = function () {
                      --unflushedServerDocCount;

                      if (unflushedServerDocCount === 0) {
                        // This was the last doc to flush! Arrange to run f after the updates
                        // have been applied.
                        runFAfterUpdates();
                      }
                    };

                    keys(self._serverDocuments).forEach(function (collection) {
                      self._serverDocuments[collection].forEach(function (serverDoc) {
                        var writtenByStubForAMethodWithSentMessage = keys(serverDoc.writtenByStubs).some(function (methodId) {
                          var invoker = self._methodInvokers[methodId];
                          return invoker && invoker.sentMessage;
                        });

                        if (writtenByStubForAMethodWithSentMessage) {
                          ++unflushedServerDocCount;
                          serverDoc.flushCallbacks.push(onServerDocFlush);
                        }
                      });
                    });

                    if (unflushedServerDocCount === 0) {
                      // There aren't any buffered docs --- we can call f as soon as the current
                      // round of updates is applied!
                      runFAfterUpdates();
                    }
                  }

                  return _runWhenAllServerDocsAreFlushed;
                }();

                _proto._livedata_nosub = function () {
                  function _livedata_nosub(msg) {
                    var self = this; // First pass it through _livedata_data, which only uses it to help get
                    // towards quiescence.

                    self._livedata_data(msg); // Do the rest of our processing immediately, with no
                    // buffering-until-quiescence.
                    // we weren't subbed anyway, or we initiated the unsub.


                    if (!hasOwn.call(self._subscriptions, msg.id)) {
                      return;
                    } // XXX COMPAT WITH 1.0.3.1 #errorCallback


                    var errorCallback = self._subscriptions[msg.id].errorCallback;
                    var stopCallback = self._subscriptions[msg.id].stopCallback;

                    self._subscriptions[msg.id].remove();

                    var meteorErrorFromMsg = function (msgArg) {
                      return msgArg && msgArg.error && new Meteor.Error(msgArg.error.error, msgArg.error.reason, msgArg.error.details);
                    }; // XXX COMPAT WITH 1.0.3.1 #errorCallback


                    if (errorCallback && msg.error) {
                      errorCallback(meteorErrorFromMsg(msg));
                    }

                    if (stopCallback) {
                      stopCallback(meteorErrorFromMsg(msg));
                    }
                  }

                  return _livedata_nosub;
                }();

                _proto._livedata_result = function () {
                  function _livedata_result(msg) {
                    // id, result or error. error has error (code), reason, details
                    var self = this; // Lets make sure there are no buffered writes before returning result.

                    if (!isEmpty(self._bufferedWrites)) {
                      self._flushBufferedWrites();
                    } // find the outstanding request
                    // should be O(1) in nearly all realistic use cases


                    if (isEmpty(self._outstandingMethodBlocks)) {
                      Meteor._debug('Received method result but no methods outstanding');

                      return;
                    }

                    var currentMethodBlock = self._outstandingMethodBlocks[0].methods;
                    var m;

                    for (var i = 0; i < currentMethodBlock.length; i++) {
                      m = currentMethodBlock[i];
                      if (m.methodId === msg.id) break;
                    }

                    if (!m) {
                      Meteor._debug("Can't match method response to original method call", msg);

                      return;
                    } // Remove from current method block. This may leave the block empty, but we
                    // don't move on to the next block until the callback has been delivered, in
                    // _outstandingMethodFinished.


                    currentMethodBlock.splice(i, 1);

                    if (hasOwn.call(msg, 'error')) {
                      m.receiveResult(new Meteor.Error(msg.error.error, msg.error.reason, msg.error.details));
                    } else {
                      // msg.result may be undefined if the method didn't return a
                      // value
                      m.receiveResult(undefined, msg.result);
                    }
                  }

                  return _livedata_result;
                }(); // Called by MethodInvoker after a method's callback is invoked.  If this was
                // the last outstanding method in the current block, runs the next block. If
                // there are no more methods, consider accepting a hot code push.


                _proto._outstandingMethodFinished = function () {
                  function _outstandingMethodFinished() {
                    var self = this;
                    if (self._anyMethodsAreOutstanding()) return; // No methods are outstanding. This should mean that the first block of
                    // methods is empty. (Or it might not exist, if this was a method that
                    // half-finished before disconnect/reconnect.)

                    if (!isEmpty(self._outstandingMethodBlocks)) {
                      var firstBlock = self._outstandingMethodBlocks.shift();

                      if (!isEmpty(firstBlock.methods)) throw new Error('No methods outstanding but nonempty block: ' + JSON.stringify(firstBlock)); // Send the outstanding methods now in the first block.

                      if (!isEmpty(self._outstandingMethodBlocks)) self._sendOutstandingMethods();
                    } // Maybe accept a hot code push.


                    self._maybeMigrate();
                  }

                  return _outstandingMethodFinished;
                }(); // Sends messages for all the methods in the first block in
                // _outstandingMethodBlocks.


                _proto._sendOutstandingMethods = function () {
                  function _sendOutstandingMethods() {
                    var self = this;

                    if (isEmpty(self._outstandingMethodBlocks)) {
                      return;
                    }

                    self._outstandingMethodBlocks[0].methods.forEach(function (m) {
                      m.sendMessage();
                    });
                  }

                  return _sendOutstandingMethods;
                }();

                _proto._livedata_error = function () {
                  function _livedata_error(msg) {
                    Meteor._debug('Received error from server: ', msg.reason);

                    if (msg.offendingMessage) Meteor._debug('For: ', msg.offendingMessage);
                  }

                  return _livedata_error;
                }();

                _proto._callOnReconnectAndSendAppropriateOutstandingMethods = function () {
                  function _callOnReconnectAndSendAppropriateOutstandingMethods() {
                    var self = this;
                    var oldOutstandingMethodBlocks = self._outstandingMethodBlocks;
                    self._outstandingMethodBlocks = [];
                    self.onReconnect && self.onReconnect();

                    DDP._reconnectHook.each(function (callback) {
                      callback(self);
                      return true;
                    });

                    if (isEmpty(oldOutstandingMethodBlocks)) return; // We have at least one block worth of old outstanding methods to try
                    // again. First: did onReconnect actually send anything? If not, we just
                    // restore all outstanding methods and run the first block.

                    if (isEmpty(self._outstandingMethodBlocks)) {
                      self._outstandingMethodBlocks = oldOutstandingMethodBlocks;

                      self._sendOutstandingMethods();

                      return;
                    } // OK, there are blocks on both sides. Special case: merge the last block of
                    // the reconnect methods with the first block of the original methods, if
                    // neither of them are "wait" blocks.


                    if (!last(self._outstandingMethodBlocks).wait && !oldOutstandingMethodBlocks[0].wait) {
                      oldOutstandingMethodBlocks[0].methods.forEach(function (m) {
                        last(self._outstandingMethodBlocks).methods.push(m); // If this "last block" is also the first block, send the message.

                        if (self._outstandingMethodBlocks.length === 1) {
                          m.sendMessage();
                        }
                      });
                      oldOutstandingMethodBlocks.shift();
                    } // Now add the rest of the original blocks on.


                    oldOutstandingMethodBlocks.forEach(function (block) {
                      self._outstandingMethodBlocks.push(block);
                    });
                  }

                  return _callOnReconnectAndSendAppropriateOutstandingMethods;
                }(); // We can accept a hot code push if there are no methods in flight.


                _proto._readyToMigrate = function () {
                  function _readyToMigrate() {
                    return isEmpty(this._methodInvokers);
                  }

                  return _readyToMigrate;
                }(); // If we were blocking a migration, see if it's now possible to continue.
                // Call whenever the set of outstanding/blocked methods shrinks.


                _proto._maybeMigrate = function () {
                  function _maybeMigrate() {
                    var self = this;

                    if (self._retryMigrate && self._readyToMigrate()) {
                      self._retryMigrate();

                      self._retryMigrate = null;
                    }
                  }

                  return _maybeMigrate;
                }();

                _proto.onMessage = function () {
                  function onMessage(raw_msg) {
                    try {
                      var msg = DDPCommon.parseDDP(raw_msg);
                    } catch (e) {
                      Meteor._debug('Exception while parsing DDP', e);

                      return;
                    } // Any message counts as receiving a pong, as it demonstrates that
                    // the server is still alive.


                    if (this._heartbeat) {
                      this._heartbeat.messageReceived();
                    }

                    if (msg === null || !msg.msg) {
                      // XXX COMPAT WITH 0.6.6. ignore the old welcome message for back
                      // compat.  Remove this 'if' once the server stops sending welcome
                      // messages (stream_server.js).
                      if (!(msg && msg.server_id)) Meteor._debug('discarding invalid livedata message', msg);
                      return;
                    }

                    if (msg.msg === 'connected') {
                      this._version = this._versionSuggestion;

                      this._livedata_connected(msg);

                      this.options.onConnected();
                    } else if (msg.msg === 'failed') {
                      if (this._supportedDDPVersions.indexOf(msg.version) >= 0) {
                        this._versionSuggestion = msg.version;

                        this._stream.reconnect({
                          _force: true
                        });
                      } else {
                        var description = 'DDP version negotiation failed; server requested version ' + msg.version;

                        this._stream.disconnect({
                          _permanent: true,
                          _error: description
                        });

                        this.options.onDDPVersionNegotiationFailure(description);
                      }
                    } else if (msg.msg === 'ping' && this.options.respondToPings) {
                      this._send({
                        msg: 'pong',
                        id: msg.id
                      });
                    } else if (msg.msg === 'pong') {// noop, as we assume everything's a pong
                    } else if (['added', 'changed', 'removed', 'ready', 'updated'].includes(msg.msg)) {
                      this._livedata_data(msg);
                    } else if (msg.msg === 'nosub') {
                      this._livedata_nosub(msg);
                    } else if (msg.msg === 'result') {
                      this._livedata_result(msg);
                    } else if (msg.msg === 'error') {
                      this._livedata_error(msg);
                    } else {
                      Meteor._debug('discarding unknown livedata message type', msg);
                    }
                  }

                  return onMessage;
                }();

                _proto.onReset = function () {
                  function onReset() {
                    var _this4 = this;

                    // Send a connect message at the beginning of the stream.
                    // NOTE: reset is called even on the first connection, so this is
                    // the only place we send this message.
                    var msg = {
                      msg: 'connect'
                    };
                    if (this._lastSessionId) msg.session = this._lastSessionId;
                    msg.version = this._versionSuggestion || this._supportedDDPVersions[0];
                    this._versionSuggestion = msg.version;
                    msg.support = this._supportedDDPVersions;

                    this._send(msg); // Mark non-retry calls as failed. This has to be done early as getting these methods out of the
                    // current block is pretty important to making sure that quiescence is properly calculated, as
                    // well as possibly moving on to another useful block.
                    // Only bother testing if there is an outstandingMethodBlock (there might not be, especially if
                    // we are connecting for the first time.


                    if (this._outstandingMethodBlocks.length > 0) {
                      // If there is an outstanding method block, we only care about the first one as that is the
                      // one that could have already sent messages with no response, that are not allowed to retry.
                      var _currentMethodBlock = this._outstandingMethodBlocks[0].methods;
                      this._outstandingMethodBlocks[0].methods = _currentMethodBlock.filter(function (methodInvoker) {
                        // Methods with 'noRetry' option set are not allowed to re-send after
                        // recovering dropped connection.
                        if (methodInvoker.sentMessage && methodInvoker.noRetry) {
                          // Make sure that the method is told that it failed.
                          methodInvoker.receiveResult(new Meteor.Error('invocation-failed', 'Method invocation might have failed due to dropped connection. ' + 'Failing because `noRetry` option was passed to Meteor.apply.'));
                        } // Only keep a method if it wasn't sent or it's allowed to retry.
                        // This may leave the block empty, but we don't move on to the next
                        // block until the callback has been delivered, in _outstandingMethodFinished.


                        return !(methodInvoker.sentMessage && methodInvoker.noRetry);
                      });
                    } // Now, to minimize setup latency, go ahead and blast out all of
                    // our pending methods ands subscriptions before we've even taken
                    // the necessary RTT to know if we successfully reconnected. (1)
                    // They're supposed to be idempotent, and where they are not,
                    // they can block retry in apply; (2) even if we did reconnect,
                    // we're not sure what messages might have gotten lost
                    // (in either direction) since we were disconnected (TCP being
                    // sloppy about that.)
                    // If the current block of methods all got their results (but didn't all get
                    // their data visible), discard the empty block now.


                    if (this._outstandingMethodBlocks.length > 0 && this._outstandingMethodBlocks[0].methods.length === 0) {
                      this._outstandingMethodBlocks.shift();
                    } // Mark all messages as unsent, they have not yet been sent on this
                    // connection.


                    keys(this._methodInvokers).forEach(function (id) {
                      _this4._methodInvokers[id].sentMessage = false;
                    }); // If an `onReconnect` handler is set, call it first. Go through
                    // some hoops to ensure that methods that are called from within
                    // `onReconnect` get executed _before_ ones that were originally
                    // outstanding (since `onReconnect` is used to re-establish auth
                    // certificates)

                    this._callOnReconnectAndSendAppropriateOutstandingMethods(); // add new subscriptions at the end. this way they take effect after
                    // the handlers and we don't see flicker.


                    keys(this._subscriptions).forEach(function (id) {
                      var sub = _this4._subscriptions[id];

                      _this4._send({
                        msg: 'sub',
                        id: id,
                        name: sub.name,
                        params: sub.params
                      });
                    });
                  }

                  return onReset;
                }();

                return Connection;
              }();
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            }, "namespace.js": function (_require7, _exports6, _module5) {

              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //                                                                                                                     //
              // packages/ddp-client/common/namespace.js                                                                             //
              //                                                                                                                     //
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
              //
              _module5.export({
                DDP: function () {
                  return DDP;
                }
              });
              var DDPCommon;
              _module5.watch(_require7("meteor/ddp-common"), {
                DDPCommon: function (v) {
                  DDPCommon = v;
                }
              }, 0);
              var Meteor;
              _module5.watch(_require7("meteor/meteor"), {
                Meteor: function (v) {
                  Meteor = v;
                }
              }, 1);
              var keys;
              _module5.watch(_require7("meteor/ddp-common/utils.js"), {
                keys: function (v) {
                  keys = v;
                }
              }, 2);
              var Connection;
              _module5.watch(_require7("./livedata_connection.js"), {
                Connection: function (v) {
                  Connection = v;
                }
              }, 3);
              // This array allows the `_allSubscriptionsReady` method below, which
              // is used by the `spiderable` package, to keep track of whether all
              // data is ready.
              var allConnections = [];
              /**
               * @namespace DDP
               * @summary Namespace for DDP-related methods/classes.
               */

              var DDP = {};
              // This is private but it's used in a few places. accounts-base uses
              // it to get the current user. Meteor.setTimeout and friends clear
              // it. We can probably find a better way to factor this.
              DDP._CurrentMethodInvocation = new Meteor.EnvironmentVariable();
              DDP._CurrentPublicationInvocation = new Meteor.EnvironmentVariable(); // XXX: Keep DDP._CurrentInvocation for backwards-compatibility.

              DDP._CurrentInvocation = DDP._CurrentMethodInvocation; // This is passed into a weird `makeErrorType` function that expects its thing
              // to be a constructor

              function connectionErrorConstructor(message) {
                this.message = message;
              }

              DDP.ConnectionError = Meteor.makeErrorType('DDP.ConnectionError', connectionErrorConstructor);
              DDP.ForcedReconnectError = Meteor.makeErrorType('DDP.ForcedReconnectError', function () {}); // Returns the named sequence of pseudo-random values.
              // The scope will be DDP._CurrentMethodInvocation.get(), so the stream will produce
              // consistent values for method calls on the client and server.

              DDP.randomStream = function (name) {
                var scope = DDP._CurrentMethodInvocation.get();

                return DDPCommon.RandomStream.get(scope, name);
              }; // @param url {String} URL to Meteor app,
              //     e.g.:
              //     "subdomain.meteor.com",
              //     "http://subdomain.meteor.com",
              //     "/",
              //     "ddp+sockjs://ddp--****-foo.meteor.com/sockjs"

              /**
               * @summary Connect to the server of a different Meteor application to subscribe to its document sets and invoke its remote methods.
               * @locus Anywhere
               * @param {String} url The URL of another Meteor application.
               */

              DDP.connect = function (url, options) {
                var ret = new Connection(url, options);
                allConnections.push(ret); // hack. see below.

                return ret;
              };

              DDP._reconnectHook = new Hook({
                bindEnvironment: false
              });
              /**
               * @summary Register a function to call as the first step of
               * reconnecting. This function can call methods which will be executed before
               * any other outstanding methods. For example, this can be used to re-establish
               * the appropriate authentication context on the connection.
               * @locus Anywhere
               * @param {Function} callback The function to call. It will be called with a
               * single argument, the [connection object](#ddp_connect) that is reconnecting.
               */

              DDP.onReconnect = function (callback) {
                return DDP._reconnectHook.register(callback);
              }; // Hack for `spiderable` package: a way to see if the page is done
              // loading all the data it needs.
              //


              DDP._allSubscriptionsReady = function () {
                return allConnections.every(function (conn) {
                  return keys(conn._subscriptions).every(function (id) {
                    return conn._subscriptions[id].ready;
                  });
                });
              };
              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            } } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require3("/node_modules/meteor/ddp-client/client/client.js");

  /* Exports */
  Package._define("ddp-client", _exports2, {
    DDP: DDP
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var DDP = Package['ddp-client'].DDP;

  /* Exports */
  Package._define("ddp", {
    DDP: DDP
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;

  /* Package-scope variables */
  var GeoJSON;

  var _require3 = meteorInstall({ "node_modules": { "meteor": { "geojson-utils": { "main.js": function (_require, _exports) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                         //
            // packages/geojson-utils/main.js                                                                          //
            //                                                                                                         //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _exports.GeoJSON = _require("./geojson-utils.js");

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "geojson-utils.js": function (_require2, _exports2, _module) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                         //
            // packages/geojson-utils/geojson-utils.js                                                                 //
            //                                                                                                         //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            (function () {
              var gju = {};

              // Export the geojson object for **CommonJS**
              if (typeof _module !== 'undefined' && _module.exports) {
                _module.exports = gju;
              }

              // adapted from http://www.kevlindev.com/gui/math/intersection/Intersection.js
              gju.lineStringsIntersect = function (l1, l2) {
                var intersects = [];
                for (var i = 0; i <= l1.coordinates.length - 2; ++i) {
                  for (var j = 0; j <= l2.coordinates.length - 2; ++j) {
                    var a1 = {
                      x: l1.coordinates[i][1],
                      y: l1.coordinates[i][0]
                    },
                        a2 = {
                      x: l1.coordinates[i + 1][1],
                      y: l1.coordinates[i + 1][0]
                    },
                        b1 = {
                      x: l2.coordinates[j][1],
                      y: l2.coordinates[j][0]
                    },
                        b2 = {
                      x: l2.coordinates[j + 1][1],
                      y: l2.coordinates[j + 1][0]
                    },
                        ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),
                        ub_t = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),
                        u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);
                    if (u_b != 0) {
                      var ua = ua_t / u_b,
                          ub = ub_t / u_b;
                      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {
                        intersects.push({
                          'type': 'Point',
                          'coordinates': [a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)]
                        });
                      }
                    }
                  }
                }
                if (intersects.length == 0) intersects = false;
                return intersects;
              };

              // Bounding Box

              function boundingBoxAroundPolyCoords(coords) {
                var xAll = [],
                    yAll = [];

                for (var i = 0; i < coords[0].length; i++) {
                  xAll.push(coords[0][i][1]);
                  yAll.push(coords[0][i][0]);
                }

                xAll = xAll.sort(function (a, b) {
                  return a - b;
                });
                yAll = yAll.sort(function (a, b) {
                  return a - b;
                });

                return [[xAll[0], yAll[0]], [xAll[xAll.length - 1], yAll[yAll.length - 1]]];
              }

              gju.pointInBoundingBox = function (point, bounds) {
                return !(point.coordinates[1] < bounds[0][0] || point.coordinates[1] > bounds[1][0] || point.coordinates[0] < bounds[0][1] || point.coordinates[0] > bounds[1][1]);
              };

              // Point in Polygon
              // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html#Listing the Vertices

              function pnpoly(x, y, coords) {
                var vert = [[0, 0]];

                for (var i = 0; i < coords.length; i++) {
                  for (var j = 0; j < coords[i].length; j++) {
                    vert.push(coords[i][j]);
                  }
                  vert.push([0, 0]);
                }

                var inside = false;
                for (var i = 0, j = vert.length - 1; i < vert.length; j = i++) {
                  if (vert[i][0] > y != vert[j][0] > y && x < (vert[j][1] - vert[i][1]) * (y - vert[i][0]) / (vert[j][0] - vert[i][0]) + vert[i][1]) inside = !inside;
                }

                return inside;
              }

              gju.pointInPolygon = function (p, poly) {
                var coords = poly.type == "Polygon" ? [poly.coordinates] : poly.coordinates;

                var insideBox = false;
                for (var i = 0; i < coords.length; i++) {
                  if (gju.pointInBoundingBox(p, boundingBoxAroundPolyCoords(coords[i]))) insideBox = true;
                }
                if (!insideBox) return false;

                var insidePoly = false;
                for (var i = 0; i < coords.length; i++) {
                  if (pnpoly(p.coordinates[1], p.coordinates[0], coords[i])) insidePoly = true;
                }

                return insidePoly;
              };

              gju.numberToRadius = function (number) {
                return number * Math.PI / 180;
              };

              gju.numberToDegree = function (number) {
                return number * 180 / Math.PI;
              };

              // written with help from @tautologe
              gju.drawCircle = function (radiusInMeters, centerPoint, steps) {
                var center = [centerPoint.coordinates[1], centerPoint.coordinates[0]],
                    dist = radiusInMeters / 1000 / 6371,

                // convert meters to radiant
                radCenter = [gju.numberToRadius(center[0]), gju.numberToRadius(center[1])],
                    steps = steps || 15,

                // 15 sided circle
                poly = [[center[0], center[1]]];
                for (var i = 0; i < steps; i++) {
                  var brng = 2 * Math.PI * i / steps;
                  var lat = Math.asin(Math.sin(radCenter[0]) * Math.cos(dist) + Math.cos(radCenter[0]) * Math.sin(dist) * Math.cos(brng));
                  var lng = radCenter[1] + Math.atan2(Math.sin(brng) * Math.sin(dist) * Math.cos(radCenter[0]), Math.cos(dist) - Math.sin(radCenter[0]) * Math.sin(lat));
                  poly[i] = [];
                  poly[i][1] = gju.numberToDegree(lat);
                  poly[i][0] = gju.numberToDegree(lng);
                }
                return {
                  "type": "Polygon",
                  "coordinates": [poly]
                };
              };

              // assumes rectangle starts at lower left point
              gju.rectangleCentroid = function (rectangle) {
                var bbox = rectangle.coordinates[0];
                var xmin = bbox[0][0],
                    ymin = bbox[0][1],
                    xmax = bbox[2][0],
                    ymax = bbox[2][1];
                var xwidth = xmax - xmin;
                var ywidth = ymax - ymin;
                return {
                  'type': 'Point',
                  'coordinates': [xmin + xwidth / 2, ymin + ywidth / 2]
                };
              };

              // from http://www.movable-type.co.uk/scripts/latlong.html
              gju.pointDistance = function (pt1, pt2) {
                var lon1 = pt1.coordinates[0],
                    lat1 = pt1.coordinates[1],
                    lon2 = pt2.coordinates[0],
                    lat2 = pt2.coordinates[1],
                    dLat = gju.numberToRadius(lat2 - lat1),
                    dLon = gju.numberToRadius(lon2 - lon1),
                    a = Math.pow(Math.sin(dLat / 2), 2) + Math.cos(gju.numberToRadius(lat1)) * Math.cos(gju.numberToRadius(lat2)) * Math.pow(Math.sin(dLon / 2), 2),
                    c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
                // Earth radius is 6371 km
                return 6371 * c * 1000; // returns meters
              },

              // checks if geometry lies entirely within a circle
              // works with Point, LineString, Polygon
              gju.geometryWithinRadius = function (geometry, center, radius) {
                if (geometry.type == 'Point') {
                  return gju.pointDistance(geometry, center) <= radius;
                } else if (geometry.type == 'LineString' || geometry.type == 'Polygon') {
                  var point = {};
                  var coordinates;
                  if (geometry.type == 'Polygon') {
                    // it's enough to check the exterior ring of the Polygon
                    coordinates = geometry.coordinates[0];
                  } else {
                    coordinates = geometry.coordinates;
                  }
                  for (var i in coordinates) {
                    point.coordinates = coordinates[i];
                    if (gju.pointDistance(point, center) > radius) {
                      return false;
                    }
                  }
                }
                return true;
              };

              // adapted from http://paulbourke.net/geometry/polyarea/javascript.txt
              gju.area = function (polygon) {
                var area = 0;
                // TODO: polygon holes at coordinates[1]
                var points = polygon.coordinates[0];
                var j = points.length - 1;
                var p1, p2;

                for (var i = 0; i < points.length; j = i++) {
                  var p1 = {
                    x: points[i][1],
                    y: points[i][0]
                  };
                  var p2 = {
                    x: points[j][1],
                    y: points[j][0]
                  };
                  area += p1.x * p2.y;
                  area -= p1.y * p2.x;
                }

                area /= 2;
                return area;
              },

              // adapted from http://paulbourke.net/geometry/polyarea/javascript.txt
              gju.centroid = function (polygon) {
                var f,
                    x = 0,
                    y = 0;
                // TODO: polygon holes at coordinates[1]
                var points = polygon.coordinates[0];
                var j = points.length - 1;
                var p1, p2;

                for (var i = 0; i < points.length; j = i++) {
                  var p1 = {
                    x: points[i][1],
                    y: points[i][0]
                  };
                  var p2 = {
                    x: points[j][1],
                    y: points[j][0]
                  };
                  f = p1.x * p2.y - p2.x * p1.y;
                  x += (p1.x + p2.x) * f;
                  y += (p1.y + p2.y) * f;
                }

                f = gju.area(polygon) * 6;
                return {
                  'type': 'Point',
                  'coordinates': [y / f, x / f]
                };
              }, gju.simplify = function (source, kink) {
                /* source[] array of geojson points */
                /* kink	in metres, kinks above this depth kept  */
                /* kink depth is the height of the triangle abc where a-b and b-c are two consecutive line segments */
                kink = kink || 20;
                source = source.map(function (o) {
                  return {
                    lng: o.coordinates[0],
                    lat: o.coordinates[1]
                  };
                });

                var n_source, n_stack, n_dest, start, end, i, sig;
                var dev_sqr, max_dev_sqr, band_sqr;
                var x12, y12, d12, x13, y13, d13, x23, y23, d23;
                var F = Math.PI / 180.0 * 0.5;
                var index = new Array(); /* aray of indexes of source points to include in the reduced line */
                var sig_start = new Array(); /* indices of start & end of working section */
                var sig_end = new Array();

                /* check for simple cases */

                if (source.length < 3) return source; /* one or two points */

                /* more complex case. initialize stack */

                n_source = source.length;
                band_sqr = kink * 360.0 / (2.0 * Math.PI * 6378137.0); /* Now in degrees */
                band_sqr *= band_sqr;
                n_dest = 0;
                sig_start[0] = 0;
                sig_end[0] = n_source - 1;
                n_stack = 1;

                /* while the stack is not empty  ... */
                while (n_stack > 0) {

                  /* ... pop the top-most entries off the stacks */

                  start = sig_start[n_stack - 1];
                  end = sig_end[n_stack - 1];
                  n_stack--;

                  if (end - start > 1) {
                    /* any intermediate points ? */

                    /* ... yes, so find most deviant intermediate point to
                    either side of line joining start & end points */

                    x12 = source[end].lng() - source[start].lng();
                    y12 = source[end].lat() - source[start].lat();
                    if (Math.abs(x12) > 180.0) x12 = 360.0 - Math.abs(x12);
                    x12 *= Math.cos(F * (source[end].lat() + source[start].lat())); /* use avg lat to reduce lng */
                    d12 = x12 * x12 + y12 * y12;

                    for (i = start + 1, sig = start, max_dev_sqr = -1.0; i < end; i++) {

                      x13 = source[i].lng() - source[start].lng();
                      y13 = source[i].lat() - source[start].lat();
                      if (Math.abs(x13) > 180.0) x13 = 360.0 - Math.abs(x13);
                      x13 *= Math.cos(F * (source[i].lat() + source[start].lat()));
                      d13 = x13 * x13 + y13 * y13;

                      x23 = source[i].lng() - source[end].lng();
                      y23 = source[i].lat() - source[end].lat();
                      if (Math.abs(x23) > 180.0) x23 = 360.0 - Math.abs(x23);
                      x23 *= Math.cos(F * (source[i].lat() + source[end].lat()));
                      d23 = x23 * x23 + y23 * y23;

                      if (d13 >= d12 + d23) dev_sqr = d23;else if (d23 >= d12 + d13) dev_sqr = d13;else dev_sqr = (x13 * y12 - y13 * x12) * (x13 * y12 - y13 * x12) / d12; // solve triangle
                      if (dev_sqr > max_dev_sqr) {
                        sig = i;
                        max_dev_sqr = dev_sqr;
                      }
                    }

                    if (max_dev_sqr < band_sqr) {
                      /* is there a sig. intermediate point ? */
                      /* ... no, so transfer current start point */
                      index[n_dest] = start;
                      n_dest++;
                    } else {
                      /* ... yes, so push two sub-sections on stack for further processing */
                      n_stack++;
                      sig_start[n_stack - 1] = sig;
                      sig_end[n_stack - 1] = end;
                      n_stack++;
                      sig_start[n_stack - 1] = start;
                      sig_end[n_stack - 1] = sig;
                    }
                  } else {
                    /* ... no intermediate points, so transfer current start point */
                    index[n_dest] = start;
                    n_dest++;
                  }
                }

                /* transfer last point */
                index[n_dest] = n_source - 1;
                n_dest++;

                /* make return array */
                var r = new Array();
                for (var i = 0; i < n_dest; i++) r.push(source[index[i]]);

                return r.map(function (o) {
                  return {
                    type: "Point",
                    coordinates: [o.lng, o.lat]
                  };
                });
              };

              // http://www.movable-type.co.uk/scripts/latlong.html#destPoint
              gju.destinationPoint = function (pt, brng, dist) {
                dist = dist / 6371; // convert dist to angular distance in radians
                brng = gju.numberToRadius(brng);

                var lat1 = gju.numberToRadius(pt.coordinates[0]);
                var lon1 = gju.numberToRadius(pt.coordinates[1]);

                var lat2 = Math.asin(Math.sin(lat1) * Math.cos(dist) + Math.cos(lat1) * Math.sin(dist) * Math.cos(brng));
                var lon2 = lon1 + Math.atan2(Math.sin(brng) * Math.sin(dist) * Math.cos(lat1), Math.cos(dist) - Math.sin(lat1) * Math.sin(lat2));
                lon2 = (lon2 + 3 * Math.PI) % (2 * Math.PI) - Math.PI; // normalise to -180..+180º

                return {
                  'type': 'Point',
                  'coordinates': [gju.numberToDegree(lat2), gju.numberToDegree(lon2)]
                };
              };
            })();

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports3 = _require3("/node_modules/meteor/geojson-utils/main.js");

  /* Exports */
  Package._define("geojson-utils", _exports3, {
    GeoJSON: GeoJSON
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var OrderedDict;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "ordered-dict": { "ordered_dict.js": function (_require, _exports, _module) {

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                        //
            // packages/ordered-dict/ordered_dict.js                                                                  //
            //                                                                                                        //
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module.export({
              OrderedDict: function () {
                return OrderedDict;
              }
            });

            // This file defines an ordered dictionary abstraction that is useful for
            // maintaining a dataset backed by observeChanges.  It supports ordering items
            // by specifying the item they now come before.
            // The implementation is a dictionary that contains nodes of a doubly-linked
            // list as its values.
            // constructs a new element struct
            // next and prev are whole elements, not keys.
            function element(key, value, next, prev) {
              return {
                key: key,
                value: value,
                next: next,
                prev: prev
              };
            }

            var OrderedDict =
            /*#__PURE__*/
            function () {
              function OrderedDict() {
                var _this = this;

                this._dict = Object.create(null);
                this._first = null;
                this._last = null;
                this._size = 0;

                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                  args[_key] = arguments[_key];
                }

                if (typeof args[0] === 'function') {
                  this._stringify = args.shift();
                } else {
                  this._stringify = function (x) {
                    return x;
                  };
                }

                args.forEach(function (kv) {
                  return _this.putBefore(kv[0], kv[1], null);
                });
              } // the "prefix keys with a space" thing comes from here
              // https://github.com/documentcloud/underscore/issues/376#issuecomment-2815649


              var _proto = OrderedDict.prototype;

              _proto._k = function () {
                function _k(key) {
                  return " " + this._stringify(key);
                }

                return _k;
              }();

              _proto.empty = function () {
                function empty() {
                  return !this._first;
                }

                return empty;
              }();

              _proto.size = function () {
                function size() {
                  return this._size;
                }

                return size;
              }();

              _proto._linkEltIn = function () {
                function _linkEltIn(elt) {
                  if (!elt.next) {
                    elt.prev = this._last;
                    if (this._last) this._last.next = elt;
                    this._last = elt;
                  } else {
                    elt.prev = elt.next.prev;
                    elt.next.prev = elt;
                    if (elt.prev) elt.prev.next = elt;
                  }

                  if (this._first === null || this._first === elt.next) this._first = elt;
                }

                return _linkEltIn;
              }();

              _proto._linkEltOut = function () {
                function _linkEltOut(elt) {
                  if (elt.next) elt.next.prev = elt.prev;
                  if (elt.prev) elt.prev.next = elt.next;
                  if (elt === this._last) this._last = elt.prev;
                  if (elt === this._first) this._first = elt.next;
                }

                return _linkEltOut;
              }();

              _proto.putBefore = function () {
                function putBefore(key, item, before) {
                  if (this._dict[this._k(key)]) throw new Error("Item " + key + " already present in OrderedDict");
                  var elt = before ? element(key, item, this._dict[this._k(before)]) : element(key, item, null);
                  if (typeof elt.next === "undefined") throw new Error("could not find item to put this one before");

                  this._linkEltIn(elt);

                  this._dict[this._k(key)] = elt;
                  this._size++;
                }

                return putBefore;
              }();

              _proto.append = function () {
                function append(key, item) {
                  this.putBefore(key, item, null);
                }

                return append;
              }();

              _proto.remove = function () {
                function remove(key) {
                  var elt = this._dict[this._k(key)];

                  if (typeof elt === "undefined") throw new Error("Item " + key + " not present in OrderedDict");

                  this._linkEltOut(elt);

                  this._size--;
                  delete this._dict[this._k(key)];
                  return elt.value;
                }

                return remove;
              }();

              _proto.get = function () {
                function get(key) {
                  if (this.has(key)) {
                    return this._dict[this._k(key)].value;
                  }
                }

                return get;
              }();

              _proto.has = function () {
                function has(key) {
                  return Object.prototype.hasOwnProperty.call(this._dict, this._k(key));
                }

                return has;
              }(); // Iterate through the items in this dictionary in order, calling
              // iter(value, key, index) on each one.
              // Stops whenever iter returns OrderedDict.BREAK, or after the last element.


              _proto.forEach = function () {
                function forEach(iter) {
                  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                  var i = 0;
                  var elt = this._first;

                  while (elt !== null) {
                    var b = iter.call(context, elt.value, elt.key, i);
                    if (b === OrderedDict.BREAK) return;
                    elt = elt.next;
                    i++;
                  }
                }

                return forEach;
              }();

              _proto.first = function () {
                function first() {
                  if (this.empty()) {
                    return;
                  }

                  return this._first.key;
                }

                return first;
              }();

              _proto.firstValue = function () {
                function firstValue() {
                  if (this.empty()) {
                    return;
                  }

                  return this._first.value;
                }

                return firstValue;
              }();

              _proto.last = function () {
                function last() {
                  if (this.empty()) {
                    return;
                  }

                  return this._last.key;
                }

                return last;
              }();

              _proto.lastValue = function () {
                function lastValue() {
                  if (this.empty()) {
                    return;
                  }

                  return this._last.value;
                }

                return lastValue;
              }();

              _proto.prev = function () {
                function prev(key) {
                  if (this.has(key)) {
                    var elt = this._dict[this._k(key)];

                    if (elt.prev) return elt.prev.key;
                  }

                  return null;
                }

                return prev;
              }();

              _proto.next = function () {
                function next(key) {
                  if (this.has(key)) {
                    var elt = this._dict[this._k(key)];

                    if (elt.next) return elt.next.key;
                  }

                  return null;
                }

                return next;
              }();

              _proto.moveBefore = function () {
                function moveBefore(key, before) {
                  var elt = this._dict[this._k(key)];

                  var eltBefore = before ? this._dict[this._k(before)] : null;

                  if (typeof elt === "undefined") {
                    throw new Error("Item to move is not present");
                  }

                  if (typeof eltBefore === "undefined") {
                    throw new Error("Could not find element to move this one before");
                  }

                  if (eltBefore === elt.next) // no moving necessary
                    return; // remove from its old place

                  this._linkEltOut(elt); // patch into its new place


                  elt.next = eltBefore;

                  this._linkEltIn(elt);
                }

                return moveBefore;
              }(); // Linear, sadly.


              _proto.indexOf = function () {
                function indexOf(key) {
                  var _this2 = this;

                  var ret = null;
                  this.forEach(function (v, k, i) {
                    if (_this2._k(k) === _this2._k(key)) {
                      ret = i;
                      return OrderedDict.BREAK;
                    }

                    return;
                  });
                  return ret;
                }

                return indexOf;
              }();

              _proto._checkRep = function () {
                function _checkRep() {
                  var _this3 = this;

                  Object.keys(this._dict).forEach(function (k) {
                    var v = _this3._dict[k];

                    if (v.next === v) {
                      throw new Error("Next is a loop");
                    }

                    if (v.prev === v) {
                      throw new Error("Prev is a loop");
                    }
                  });
                }

                return _checkRep;
              }();

              return OrderedDict;
            }();

            OrderedDict.BREAK = {
              "break": true
            };
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/ordered-dict/ordered_dict.js");

  /* Exports */
  Package._define("ordered-dict", _exports2, {
    OrderedDict: OrderedDict
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var DiffSequence = Package['diff-sequence'].DiffSequence;
  var EJSON = Package.ejson.EJSON;
  var GeoJSON = Package['geojson-utils'].GeoJSON;
  var IdMap = Package['id-map'].IdMap;
  var MongoID = Package['mongo-id'].MongoID;
  var OrderedDict = Package['ordered-dict'].OrderedDict;
  var Random = Package.random.Random;
  var Tracker = Package.tracker.Tracker;
  var Deps = Package.tracker.Deps;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var MinimongoTest, MinimongoError, LocalCollection, Minimongo;

  var _require3 = meteorInstall({ "node_modules": { "meteor": { "minimongo": { "minimongo_client.js": function (_require, _exports, _module) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/minimongo/minimongo_client.js                                                                              //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module.watch(_require("./minimongo_common.js"));
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "common.js": function (_require2, _exports2, _module2) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/minimongo/common.js                                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require2("@babel/runtime/helpers/interopRequireDefault");

            var _toConsumableArray2 = _interopRequireDefault(_require2("@babel/runtime/helpers/toConsumableArray"));

            var _typeof2 = _interopRequireDefault(_require2("@babel/runtime/helpers/typeof"));

            _module2.export({
              hasOwn: function () {
                return hasOwn;
              },
              ELEMENT_OPERATORS: function () {
                return ELEMENT_OPERATORS;
              },
              compileDocumentSelector: function () {
                return compileDocumentSelector;
              },
              equalityElementMatcher: function () {
                return equalityElementMatcher;
              },
              expandArraysInBranches: function () {
                return expandArraysInBranches;
              },
              isIndexable: function () {
                return isIndexable;
              },
              isNumericKey: function () {
                return isNumericKey;
              },
              isOperatorObject: function () {
                return isOperatorObject;
              },
              makeLookupFunction: function () {
                return makeLookupFunction;
              },
              nothingMatcher: function () {
                return nothingMatcher;
              },
              pathsToTree: function () {
                return pathsToTree;
              },
              populateDocumentWithQueryFields: function () {
                return populateDocumentWithQueryFields;
              },
              projectionDetails: function () {
                return projectionDetails;
              },
              regexpElementMatcher: function () {
                return regexpElementMatcher;
              }
            });
            var LocalCollection;
            _module2.watch(_require2("./local_collection.js"), {
              "default": function (v) {
                LocalCollection = v;
              }
            }, 0);
            var hasOwn = Object.prototype.hasOwnProperty;
            var ELEMENT_OPERATORS = {
              $lt: makeInequality(function (cmpValue) {
                return cmpValue < 0;
              }),
              $gt: makeInequality(function (cmpValue) {
                return cmpValue > 0;
              }),
              $lte: makeInequality(function (cmpValue) {
                return cmpValue <= 0;
              }),
              $gte: makeInequality(function (cmpValue) {
                return cmpValue >= 0;
              }),
              $mod: {
                compileElementSelector: function (operand) {
                  if (!(Array.isArray(operand) && operand.length === 2 && typeof operand[0] === 'number' && typeof operand[1] === 'number')) {
                    throw Error('argument to $mod must be an array of two numbers');
                  } // XXX could require to be ints or round or something


                  var divisor = operand[0];
                  var remainder = operand[1];
                  return function (value) {
                    return typeof value === 'number' && value % divisor === remainder;
                  };
                }
              },
              $in: {
                compileElementSelector: function (operand) {
                  if (!Array.isArray(operand)) {
                    throw Error('$in needs an array');
                  }

                  var elementMatchers = operand.map(function (option) {
                    if (option instanceof RegExp) {
                      return regexpElementMatcher(option);
                    }

                    if (isOperatorObject(option)) {
                      throw Error('cannot nest $ under $in');
                    }

                    return equalityElementMatcher(option);
                  });
                  return function (value) {
                    // Allow {a: {$in: [null]}} to match when 'a' does not exist.
                    if (value === undefined) {
                      value = null;
                    }

                    return elementMatchers.some(function (matcher) {
                      return matcher(value);
                    });
                  };
                }
              },
              $size: {
                // {a: [[5, 5]]} must match {a: {$size: 1}} but not {a: {$size: 2}}, so we
                // don't want to consider the element [5,5] in the leaf array [[5,5]] as a
                // possible value.
                dontExpandLeafArrays: true,
                compileElementSelector: function (operand) {
                  if (typeof operand === 'string') {
                    // Don't ask me why, but by experimentation, this seems to be what Mongo
                    // does.
                    operand = 0;
                  } else if (typeof operand !== 'number') {
                    throw Error('$size needs a number');
                  }

                  return function (value) {
                    return Array.isArray(value) && value.length === operand;
                  };
                }
              },
              $type: {
                // {a: [5]} must not match {a: {$type: 4}} (4 means array), but it should
                // match {a: {$type: 1}} (1 means number), and {a: [[5]]} must match {$a:
                // {$type: 4}}. Thus, when we see a leaf array, we *should* expand it but
                // should *not* include it itself.
                dontIncludeLeafArrays: true,
                compileElementSelector: function (operand) {
                  if (typeof operand === 'string') {
                    var operandAliasMap = {
                      'double': 1,
                      'string': 2,
                      'object': 3,
                      'array': 4,
                      'binData': 5,
                      'undefined': 6,
                      'objectId': 7,
                      'bool': 8,
                      'date': 9,
                      'null': 10,
                      'regex': 11,
                      'dbPointer': 12,
                      'javascript': 13,
                      'symbol': 14,
                      'javascriptWithScope': 15,
                      'int': 16,
                      'timestamp': 17,
                      'long': 18,
                      'decimal': 19,
                      'minKey': -1,
                      'maxKey': 127
                    };

                    if (!hasOwn.call(operandAliasMap, operand)) {
                      throw Error("unknown string alias for $type: " + operand);
                    }

                    operand = operandAliasMap[operand];
                  } else if (typeof operand === 'number') {
                    if (operand === 0 || operand < -1 || operand > 19 && operand !== 127) {
                      throw Error("Invalid numerical $type code: " + operand);
                    }
                  } else {
                    throw Error('argument to $type is not a number or a string');
                  }

                  return function (value) {
                    return value !== undefined && LocalCollection._f._type(value) === operand;
                  };
                }
              },
              $bitsAllSet: {
                compileElementSelector: function (operand) {
                  var mask = getOperandBitmask(operand, '$bitsAllSet');
                  return function (value) {
                    var bitmask = getValueBitmask(value, mask.length);
                    return bitmask && mask.every(function (byte, i) {
                      return (bitmask[i] & byte) === byte;
                    });
                  };
                }
              },
              $bitsAnySet: {
                compileElementSelector: function (operand) {
                  var mask = getOperandBitmask(operand, '$bitsAnySet');
                  return function (value) {
                    var bitmask = getValueBitmask(value, mask.length);
                    return bitmask && mask.some(function (byte, i) {
                      return (~bitmask[i] & byte) !== byte;
                    });
                  };
                }
              },
              $bitsAllClear: {
                compileElementSelector: function (operand) {
                  var mask = getOperandBitmask(operand, '$bitsAllClear');
                  return function (value) {
                    var bitmask = getValueBitmask(value, mask.length);
                    return bitmask && mask.every(function (byte, i) {
                      return !(bitmask[i] & byte);
                    });
                  };
                }
              },
              $bitsAnyClear: {
                compileElementSelector: function (operand) {
                  var mask = getOperandBitmask(operand, '$bitsAnyClear');
                  return function (value) {
                    var bitmask = getValueBitmask(value, mask.length);
                    return bitmask && mask.some(function (byte, i) {
                      return (bitmask[i] & byte) !== byte;
                    });
                  };
                }
              },
              $regex: {
                compileElementSelector: function (operand, valueSelector) {
                  if (!(typeof operand === 'string' || operand instanceof RegExp)) {
                    throw Error('$regex has to be a string or RegExp');
                  }

                  var regexp;

                  if (valueSelector.$options !== undefined) {
                    // Options passed in $options (even the empty string) always overrides
                    // options in the RegExp object itself.
                    // Be clear that we only support the JS-supported options, not extended
                    // ones (eg, Mongo supports x and s). Ideally we would implement x and s
                    // by transforming the regexp, but not today...
                    if (/[^gim]/.test(valueSelector.$options)) {
                      throw new Error('Only the i, m, and g regexp options are supported');
                    }

                    var source = operand instanceof RegExp ? operand.source : operand;
                    regexp = new RegExp(source, valueSelector.$options);
                  } else if (operand instanceof RegExp) {
                    regexp = operand;
                  } else {
                    regexp = new RegExp(operand);
                  }

                  return regexpElementMatcher(regexp);
                }
              },
              $elemMatch: {
                dontExpandLeafArrays: true,
                compileElementSelector: function (operand, valueSelector, matcher) {
                  if (!LocalCollection._isPlainObject(operand)) {
                    throw Error('$elemMatch need an object');
                  }

                  var isDocMatcher = !isOperatorObject(Object.keys(operand).filter(function (key) {
                    return !hasOwn.call(LOGICAL_OPERATORS, key);
                  }).reduce(function (a, b) {
                    var _Object$assign;

                    return Object.assign(a, (_Object$assign = {}, _Object$assign[b] = operand[b], _Object$assign));
                  }, {}), true);
                  var subMatcher;

                  if (isDocMatcher) {
                    // This is NOT the same as compileValueSelector(operand), and not just
                    // because of the slightly different calling convention.
                    // {$elemMatch: {x: 3}} means "an element has a field x:3", not
                    // "consists only of a field x:3". Also, regexps and sub-$ are allowed.
                    subMatcher = compileDocumentSelector(operand, matcher, {
                      inElemMatch: true
                    });
                  } else {
                    subMatcher = compileValueSelector(operand, matcher);
                  }

                  return function (value) {
                    if (!Array.isArray(value)) {
                      return false;
                    }

                    for (var i = 0; i < value.length; ++i) {
                      var arrayElement = value[i];
                      var arg = void 0;

                      if (isDocMatcher) {
                        // We can only match {$elemMatch: {b: 3}} against objects.
                        // (We can also match against arrays, if there's numeric indices,
                        // eg {$elemMatch: {'0.b': 3}} or {$elemMatch: {0: 3}}.)
                        if (!isIndexable(arrayElement)) {
                          return false;
                        }

                        arg = arrayElement;
                      } else {
                        // dontIterate ensures that {a: {$elemMatch: {$gt: 5}}} matches
                        // {a: [8]} but not {a: [[8]]}
                        arg = [{
                          value: arrayElement,
                          dontIterate: true
                        }];
                      } // XXX support $near in $elemMatch by propagating $distance?


                      if (subMatcher(arg).result) {
                        return i; // specially understood to mean "use as arrayIndices"
                      }
                    }

                    return false;
                  };
                }
              }
            };
            // Operators that appear at the top level of a document selector.
            var LOGICAL_OPERATORS = {
              $and: function (subSelector, matcher, inElemMatch) {
                return andDocumentMatchers(compileArrayOfDocumentSelectors(subSelector, matcher, inElemMatch));
              },
              $or: function (subSelector, matcher, inElemMatch) {
                var matchers = compileArrayOfDocumentSelectors(subSelector, matcher, inElemMatch); // Special case: if there is only one matcher, use it directly, *preserving*
                // any arrayIndices it returns.

                if (matchers.length === 1) {
                  return matchers[0];
                }

                return function (doc) {
                  var result = matchers.some(function (fn) {
                    return fn(doc).result;
                  }); // $or does NOT set arrayIndices when it has multiple
                  // sub-expressions. (Tested against MongoDB.)

                  return {
                    result: result
                  };
                };
              },
              $nor: function (subSelector, matcher, inElemMatch) {
                var matchers = compileArrayOfDocumentSelectors(subSelector, matcher, inElemMatch);
                return function (doc) {
                  var result = matchers.every(function (fn) {
                    return !fn(doc).result;
                  }); // Never set arrayIndices, because we only match if nothing in particular
                  // 'matched' (and because this is consistent with MongoDB).

                  return {
                    result: result
                  };
                };
              },
              $where: function (selectorValue, matcher) {
                // Record that *any* path may be used.
                matcher._recordPathUsed('');

                matcher._hasWhere = true;

                if (!(selectorValue instanceof Function)) {
                  // XXX MongoDB seems to have more complex logic to decide where or or not
                  // to add 'return'; not sure exactly what it is.
                  selectorValue = Function('obj', "return " + selectorValue);
                } // We make the document available as both `this` and `obj`.
                // // XXX not sure what we should do if this throws


                return function (doc) {
                  return {
                    result: selectorValue.call(doc, doc)
                  };
                };
              },
              // This is just used as a comment in the query (in MongoDB, it also ends up in
              // query logs); it has no effect on the actual selection.
              $comment: function () {
                return function () {
                  return {
                    result: true
                  };
                };
              }
            }; // Operators that (unlike LOGICAL_OPERATORS) pertain to individual paths in a
            // document, but (unlike ELEMENT_OPERATORS) do not have a simple definition as
            // "match each branched value independently and combine with
            // convertElementMatcherToBranchedMatcher".

            var VALUE_OPERATORS = {
              $eq: function (operand) {
                return convertElementMatcherToBranchedMatcher(equalityElementMatcher(operand));
              },
              $not: function (operand, valueSelector, matcher) {
                return invertBranchedMatcher(compileValueSelector(operand, matcher));
              },
              $ne: function (operand) {
                return invertBranchedMatcher(convertElementMatcherToBranchedMatcher(equalityElementMatcher(operand)));
              },
              $nin: function (operand) {
                return invertBranchedMatcher(convertElementMatcherToBranchedMatcher(ELEMENT_OPERATORS.$in.compileElementSelector(operand)));
              },
              $exists: function (operand) {
                var exists = convertElementMatcherToBranchedMatcher(function (value) {
                  return value !== undefined;
                });
                return operand ? exists : invertBranchedMatcher(exists);
              },
              // $options just provides options for $regex; its logic is inside $regex
              $options: function (operand, valueSelector) {
                if (!hasOwn.call(valueSelector, '$regex')) {
                  throw Error('$options needs a $regex');
                }

                return everythingMatcher;
              },
              // $maxDistance is basically an argument to $near
              $maxDistance: function (operand, valueSelector) {
                if (!valueSelector.$near) {
                  throw Error('$maxDistance needs a $near');
                }

                return everythingMatcher;
              },
              $all: function (operand, valueSelector, matcher) {
                if (!Array.isArray(operand)) {
                  throw Error('$all requires array');
                } // Not sure why, but this seems to be what MongoDB does.


                if (operand.length === 0) {
                  return nothingMatcher;
                }

                var branchedMatchers = operand.map(function (criterion) {
                  // XXX handle $all/$elemMatch combination
                  if (isOperatorObject(criterion)) {
                    throw Error('no $ expressions in $all');
                  } // This is always a regexp or equality selector.


                  return compileValueSelector(criterion, matcher);
                }); // andBranchedMatchers does NOT require all selectors to return true on the
                // SAME branch.

                return andBranchedMatchers(branchedMatchers);
              },
              $near: function (operand, valueSelector, matcher, isRoot) {
                if (!isRoot) {
                  throw Error('$near can\'t be inside another $ operator');
                }

                matcher._hasGeoQuery = true; // There are two kinds of geodata in MongoDB: legacy coordinate pairs and
                // GeoJSON. They use different distance metrics, too. GeoJSON queries are
                // marked with a $geometry property, though legacy coordinates can be
                // matched using $geometry.

                var maxDistance, point, distance;

                if (LocalCollection._isPlainObject(operand) && hasOwn.call(operand, '$geometry')) {
                  // GeoJSON "2dsphere" mode.
                  maxDistance = operand.$maxDistance;
                  point = operand.$geometry;

                  distance = function (value) {
                    // XXX: for now, we don't calculate the actual distance between, say,
                    // polygon and circle. If people care about this use-case it will get
                    // a priority.
                    if (!value) {
                      return null;
                    }

                    if (!value.type) {
                      return GeoJSON.pointDistance(point, {
                        type: 'Point',
                        coordinates: pointToArray(value)
                      });
                    }

                    if (value.type === 'Point') {
                      return GeoJSON.pointDistance(point, value);
                    }

                    return GeoJSON.geometryWithinRadius(value, point, maxDistance) ? 0 : maxDistance + 1;
                  };
                } else {
                  maxDistance = valueSelector.$maxDistance;

                  if (!isIndexable(operand)) {
                    throw Error('$near argument must be coordinate pair or GeoJSON');
                  }

                  point = pointToArray(operand);

                  distance = function (value) {
                    if (!isIndexable(value)) {
                      return null;
                    }

                    return distanceCoordinatePairs(point, value);
                  };
                }

                return function (branchedValues) {
                  // There might be multiple points in the document that match the given
                  // field. Only one of them needs to be within $maxDistance, but we need to
                  // evaluate all of them and use the nearest one for the implicit sort
                  // specifier. (That's why we can't just use ELEMENT_OPERATORS here.)
                  //
                  // Note: This differs from MongoDB's implementation, where a document will
                  // actually show up *multiple times* in the result set, with one entry for
                  // each within-$maxDistance branching point.
                  var result = {
                    result: false
                  };
                  expandArraysInBranches(branchedValues).every(function (branch) {
                    // if operation is an update, don't skip branches, just return the first
                    // one (#3599)
                    var curDistance;

                    if (!matcher._isUpdate) {
                      if (!((0, _typeof2.default)(branch.value) === 'object')) {
                        return true;
                      }

                      curDistance = distance(branch.value); // Skip branches that aren't real points or are too far away.

                      if (curDistance === null || curDistance > maxDistance) {
                        return true;
                      } // Skip anything that's a tie.


                      if (result.distance !== undefined && result.distance <= curDistance) {
                        return true;
                      }
                    }

                    result.result = true;
                    result.distance = curDistance;

                    if (branch.arrayIndices) {
                      result.arrayIndices = branch.arrayIndices;
                    } else {
                      delete result.arrayIndices;
                    }

                    return !matcher._isUpdate;
                  });
                  return result;
                };
              }
            }; // NB: We are cheating and using this function to implement 'AND' for both
            // 'document matchers' and 'branched matchers'. They both return result objects
            // but the argument is different: for the former it's a whole doc, whereas for
            // the latter it's an array of 'branched values'.

            function andSomeMatchers(subMatchers) {
              if (subMatchers.length === 0) {
                return everythingMatcher;
              }

              if (subMatchers.length === 1) {
                return subMatchers[0];
              }

              return function (docOrBranches) {
                var match = {};
                match.result = subMatchers.every(function (fn) {
                  var subResult = fn(docOrBranches); // Copy a 'distance' number out of the first sub-matcher that has
                  // one. Yes, this means that if there are multiple $near fields in a
                  // query, something arbitrary happens; this appears to be consistent with
                  // Mongo.

                  if (subResult.result && subResult.distance !== undefined && match.distance === undefined) {
                    match.distance = subResult.distance;
                  } // Similarly, propagate arrayIndices from sub-matchers... but to match
                  // MongoDB behavior, this time the *last* sub-matcher with arrayIndices
                  // wins.


                  if (subResult.result && subResult.arrayIndices) {
                    match.arrayIndices = subResult.arrayIndices;
                  }

                  return subResult.result;
                }); // If we didn't actually match, forget any extra metadata we came up with.

                if (!match.result) {
                  delete match.distance;
                  delete match.arrayIndices;
                }

                return match;
              };
            }

            var andDocumentMatchers = andSomeMatchers;
            var andBranchedMatchers = andSomeMatchers;

            function compileArrayOfDocumentSelectors(selectors, matcher, inElemMatch) {
              if (!Array.isArray(selectors) || selectors.length === 0) {
                throw Error('$and/$or/$nor must be nonempty array');
              }

              return selectors.map(function (subSelector) {
                if (!LocalCollection._isPlainObject(subSelector)) {
                  throw Error('$or/$and/$nor entries need to be full objects');
                }

                return compileDocumentSelector(subSelector, matcher, {
                  inElemMatch: inElemMatch
                });
              });
            } // Takes in a selector that could match a full document (eg, the original
            // selector). Returns a function mapping document->result object.
            //
            // matcher is the Matcher object we are compiling.
            //
            // If this is the root document selector (ie, not wrapped in $and or the like),
            // then isRoot is true. (This is used by $near.)


            function compileDocumentSelector(docSelector, matcher) {
              var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
              var docMatchers = Object.keys(docSelector).map(function (key) {
                var subSelector = docSelector[key];

                if (key.substr(0, 1) === '$') {
                  // Outer operators are either logical operators (they recurse back into
                  // this function), or $where.
                  if (!hasOwn.call(LOGICAL_OPERATORS, key)) {
                    throw new Error("Unrecognized logical operator: " + key);
                  }

                  matcher._isSimple = false;
                  return LOGICAL_OPERATORS[key](subSelector, matcher, options.inElemMatch);
                } // Record this path, but only if we aren't in an elemMatcher, since in an
                // elemMatch this is a path inside an object in an array, not in the doc
                // root.


                if (!options.inElemMatch) {
                  matcher._recordPathUsed(key);
                } // Don't add a matcher if subSelector is a function -- this is to match
                // the behavior of Meteor on the server (inherited from the node mongodb
                // driver), which is to ignore any part of a selector which is a function.


                if (typeof subSelector === 'function') {
                  return undefined;
                }

                var lookUpByIndex = makeLookupFunction(key);
                var valueMatcher = compileValueSelector(subSelector, matcher, options.isRoot);
                return function (doc) {
                  return valueMatcher(lookUpByIndex(doc));
                };
              }).filter(Boolean);
              return andDocumentMatchers(docMatchers);
            }

            // Takes in a selector that could match a key-indexed value in a document; eg,
            // {$gt: 5, $lt: 9}, or a regular expression, or any non-expression object (to
            // indicate equality).  Returns a branched matcher: a function mapping
            // [branched value]->result object.
            function compileValueSelector(valueSelector, matcher, isRoot) {
              if (valueSelector instanceof RegExp) {
                matcher._isSimple = false;
                return convertElementMatcherToBranchedMatcher(regexpElementMatcher(valueSelector));
              }

              if (isOperatorObject(valueSelector)) {
                return operatorBranchedMatcher(valueSelector, matcher, isRoot);
              }

              return convertElementMatcherToBranchedMatcher(equalityElementMatcher(valueSelector));
            } // Given an element matcher (which evaluates a single value), returns a branched
            // value (which evaluates the element matcher on all the branches and returns a
            // more structured return value possibly including arrayIndices).


            function convertElementMatcherToBranchedMatcher(elementMatcher) {
              var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
              return function (branches) {
                var expanded = options.dontExpandLeafArrays ? branches : expandArraysInBranches(branches, options.dontIncludeLeafArrays);
                var match = {};
                match.result = expanded.some(function (element) {
                  var matched = elementMatcher(element.value); // Special case for $elemMatch: it means "true, and use this as an array
                  // index if I didn't already have one".

                  if (typeof matched === 'number') {
                    // XXX This code dates from when we only stored a single array index
                    // (for the outermost array). Should we be also including deeper array
                    // indices from the $elemMatch match?
                    if (!element.arrayIndices) {
                      element.arrayIndices = [matched];
                    }

                    matched = true;
                  } // If some element matched, and it's tagged with array indices, include
                  // those indices in our result object.


                  if (matched && element.arrayIndices) {
                    match.arrayIndices = element.arrayIndices;
                  }

                  return matched;
                });
                return match;
              };
            } // Helpers for $near.


            function distanceCoordinatePairs(a, b) {
              var pointA = pointToArray(a);
              var pointB = pointToArray(b);
              return Math.hypot(pointA[0] - pointB[0], pointA[1] - pointB[1]);
            } // Takes something that is not an operator object and returns an element matcher
            // for equality with that thing.


            function equalityElementMatcher(elementSelector) {
              if (isOperatorObject(elementSelector)) {
                throw Error('Can\'t create equalityValueSelector for operator object');
              } // Special-case: null and undefined are equal (if you got undefined in there
              // somewhere, or if you got it due to some branch being non-existent in the
              // weird special case), even though they aren't with EJSON.equals.
              // undefined or null


              if (elementSelector == null) {
                return function (value) {
                  return value == null;
                };
              }

              return function (value) {
                return LocalCollection._f._equal(elementSelector, value);
              };
            }

            function everythingMatcher(docOrBranchedValues) {
              return {
                result: true
              };
            }

            function expandArraysInBranches(branches, skipTheArrays) {
              var branchesOut = [];
              branches.forEach(function (branch) {
                var thisIsArray = Array.isArray(branch.value); // We include the branch itself, *UNLESS* we it's an array that we're going
                // to iterate and we're told to skip arrays.  (That's right, we include some
                // arrays even skipTheArrays is true: these are arrays that were found via
                // explicit numerical indices.)

                if (!(skipTheArrays && thisIsArray && !branch.dontIterate)) {
                  branchesOut.push({
                    arrayIndices: branch.arrayIndices,
                    value: branch.value
                  });
                }

                if (thisIsArray && !branch.dontIterate) {
                  branch.value.forEach(function (value, i) {
                    branchesOut.push({
                      arrayIndices: (branch.arrayIndices || []).concat(i),
                      value: value
                    });
                  });
                }
              });
              return branchesOut;
            }

            // Helpers for $bitsAllSet/$bitsAnySet/$bitsAllClear/$bitsAnyClear.
            function getOperandBitmask(operand, selector) {
              // numeric bitmask
              // You can provide a numeric bitmask to be matched against the operand field.
              // It must be representable as a non-negative 32-bit signed integer.
              // Otherwise, $bitsAllSet will return an error.
              if (Number.isInteger(operand) && operand >= 0) {
                return new Uint8Array(new Int32Array([operand]).buffer);
              } // bindata bitmask
              // You can also use an arbitrarily large BinData instance as a bitmask.


              if (EJSON.isBinary(operand)) {
                return new Uint8Array(operand.buffer);
              } // position list
              // If querying a list of bit positions, each <position> must be a non-negative
              // integer. Bit positions start at 0 from the least significant bit.


              if (Array.isArray(operand) && operand.every(function (x) {
                return Number.isInteger(x) && x >= 0;
              })) {
                var buffer = new ArrayBuffer((Math.max.apply(Math, (0, _toConsumableArray2.default)(operand)) >> 3) + 1);
                var view = new Uint8Array(buffer);
                operand.forEach(function (x) {
                  view[x >> 3] |= 1 << (x & 0x7);
                });
                return view;
              } // bad operand


              throw Error("operand to " + selector + " must be a numeric bitmask (representable as a " + 'non-negative 32-bit signed integer), a bindata bitmask or an array with ' + 'bit positions (non-negative integers)');
            }

            function getValueBitmask(value, length) {
              // The field value must be either numerical or a BinData instance. Otherwise,
              // $bits... will not match the current document.
              // numerical
              if (Number.isSafeInteger(value)) {
                // $bits... will not match numerical values that cannot be represented as a
                // signed 64-bit integer. This can be the case if a value is either too
                // large or small to fit in a signed 64-bit integer, or if it has a
                // fractional component.
                var buffer = new ArrayBuffer(Math.max(length, 2 * Uint32Array.BYTES_PER_ELEMENT));
                var view = new Uint32Array(buffer, 0, 2);
                view[0] = value % ((1 << 16) * (1 << 16)) | 0;
                view[1] = value / ((1 << 16) * (1 << 16)) | 0; // sign extension

                if (value < 0) {
                  view = new Uint8Array(buffer, 2);
                  view.forEach(function (byte, i) {
                    view[i] = 0xff;
                  });
                }

                return new Uint8Array(buffer);
              } // bindata


              if (EJSON.isBinary(value)) {
                return new Uint8Array(value.buffer);
              } // no match


              return false;
            } // Actually inserts a key value into the selector document
            // However, this checks there is no ambiguity in setting
            // the value for the given key, throws otherwise


            function insertIntoDocument(document, key, value) {
              Object.keys(document).forEach(function (existingKey) {
                if (existingKey.length > key.length && existingKey.indexOf(key + ".") === 0 || key.length > existingKey.length && key.indexOf(existingKey + ".") === 0) {
                  throw new Error("cannot infer query fields to set, both paths '" + existingKey + "' and " + ("'" + key + "' are matched"));
                } else if (existingKey === key) {
                  throw new Error("cannot infer query fields to set, path '" + key + "' is matched twice");
                }
              });
              document[key] = value;
            } // Returns a branched matcher that matches iff the given matcher does not.
            // Note that this implicitly "deMorganizes" the wrapped function.  ie, it
            // means that ALL branch values need to fail to match innerBranchedMatcher.


            function invertBranchedMatcher(branchedMatcher) {
              return function (branchValues) {
                // We explicitly choose to strip arrayIndices here: it doesn't make sense to
                // say "update the array element that does not match something", at least
                // in mongo-land.
                return {
                  result: !branchedMatcher(branchValues).result
                };
              };
            }

            function isIndexable(obj) {
              return Array.isArray(obj) || LocalCollection._isPlainObject(obj);
            }

            function isNumericKey(s) {
              return (/^[0-9]+$/.test(s)
              );
            }

            function isOperatorObject(valueSelector, inconsistentOK) {
              if (!LocalCollection._isPlainObject(valueSelector)) {
                return false;
              }

              var theseAreOperators = undefined;
              Object.keys(valueSelector).forEach(function (selKey) {
                var thisIsOperator = selKey.substr(0, 1) === '$';

                if (theseAreOperators === undefined) {
                  theseAreOperators = thisIsOperator;
                } else if (theseAreOperators !== thisIsOperator) {
                  if (!inconsistentOK) {
                    throw new Error("Inconsistent operator: " + JSON.stringify(valueSelector));
                  }

                  theseAreOperators = false;
                }
              });
              return !!theseAreOperators; // {} has no operators
            }

            // Helper for $lt/$gt/$lte/$gte.
            function makeInequality(cmpValueComparator) {
              return {
                compileElementSelector: function (operand) {
                  // Arrays never compare false with non-arrays for any inequality.
                  // XXX This was behavior we observed in pre-release MongoDB 2.5, but
                  //     it seems to have been reverted.
                  //     See https://jira.mongodb.org/browse/SERVER-11444
                  if (Array.isArray(operand)) {
                    return function () {
                      return false;
                    };
                  } // Special case: consider undefined and null the same (so true with
                  // $gte/$lte).


                  if (operand === undefined) {
                    operand = null;
                  }

                  var operandType = LocalCollection._f._type(operand);

                  return function (value) {
                    if (value === undefined) {
                      value = null;
                    } // Comparisons are never true among things of different type (except
                    // null vs undefined).


                    if (LocalCollection._f._type(value) !== operandType) {
                      return false;
                    }

                    return cmpValueComparator(LocalCollection._f._cmp(value, operand));
                  };
                }
              };
            } // makeLookupFunction(key) returns a lookup function.
            //
            // A lookup function takes in a document and returns an array of matching
            // branches.  If no arrays are found while looking up the key, this array will
            // have exactly one branches (possibly 'undefined', if some segment of the key
            // was not found).
            //
            // If arrays are found in the middle, this can have more than one element, since
            // we 'branch'. When we 'branch', if there are more key segments to look up,
            // then we only pursue branches that are plain objects (not arrays or scalars).
            // This means we can actually end up with no branches!
            //
            // We do *NOT* branch on arrays that are found at the end (ie, at the last
            // dotted member of the key). We just return that array; if you want to
            // effectively 'branch' over the array's values, post-process the lookup
            // function with expandArraysInBranches.
            //
            // Each branch is an object with keys:
            //  - value: the value at the branch
            //  - dontIterate: an optional bool; if true, it means that 'value' is an array
            //    that expandArraysInBranches should NOT expand. This specifically happens
            //    when there is a numeric index in the key, and ensures the
            //    perhaps-surprising MongoDB behavior where {'a.0': 5} does NOT
            //    match {a: [[5]]}.
            //  - arrayIndices: if any array indexing was done during lookup (either due to
            //    explicit numeric indices or implicit branching), this will be an array of
            //    the array indices used, from outermost to innermost; it is falsey or
            //    absent if no array index is used. If an explicit numeric index is used,
            //    the index will be followed in arrayIndices by the string 'x'.
            //
            //    Note: arrayIndices is used for two purposes. First, it is used to
            //    implement the '$' modifier feature, which only ever looks at its first
            //    element.
            //
            //    Second, it is used for sort key generation, which needs to be able to tell
            //    the difference between different paths. Moreover, it needs to
            //    differentiate between explicit and implicit branching, which is why
            //    there's the somewhat hacky 'x' entry: this means that explicit and
            //    implicit array lookups will have different full arrayIndices paths. (That
            //    code only requires that different paths have different arrayIndices; it
            //    doesn't actually 'parse' arrayIndices. As an alternative, arrayIndices
            //    could contain objects with flags like 'implicit', but I think that only
            //    makes the code surrounding them more complex.)
            //
            //    (By the way, this field ends up getting passed around a lot without
            //    cloning, so never mutate any arrayIndices field/var in this package!)
            //
            //
            // At the top level, you may only pass in a plain object or array.
            //
            // See the test 'minimongo - lookup' for some examples of what lookup functions
            // return.


            function makeLookupFunction(key) {
              var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
              var parts = key.split('.');
              var firstPart = parts.length ? parts[0] : '';
              var lookupRest = parts.length > 1 && makeLookupFunction(parts.slice(1).join('.'), options);

              var omitUnnecessaryFields = function (result) {
                if (!result.dontIterate) {
                  delete result.dontIterate;
                }

                if (result.arrayIndices && !result.arrayIndices.length) {
                  delete result.arrayIndices;
                }

                return result;
              }; // Doc will always be a plain object or an array.
              // apply an explicit numeric index, an array.


              return function (doc) {
                var arrayIndices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

                if (Array.isArray(doc)) {
                  // If we're being asked to do an invalid lookup into an array (non-integer
                  // or out-of-bounds), return no results (which is different from returning
                  // a single undefined result, in that `null` equality checks won't match).
                  if (!(isNumericKey(firstPart) && firstPart < doc.length)) {
                    return [];
                  } // Remember that we used this array index. Include an 'x' to indicate that
                  // the previous index came from being considered as an explicit array
                  // index (not branching).


                  arrayIndices = arrayIndices.concat(+firstPart, 'x');
                } // Do our first lookup.


                var firstLevel = doc[firstPart]; // If there is no deeper to dig, return what we found.
                //
                // If what we found is an array, most value selectors will choose to treat
                // the elements of the array as matchable values in their own right, but
                // that's done outside of the lookup function. (Exceptions to this are $size
                // and stuff relating to $elemMatch.  eg, {a: {$size: 2}} does not match {a:
                // [[1, 2]]}.)
                //
                // That said, if we just did an *explicit* array lookup (on doc) to find
                // firstLevel, and firstLevel is an array too, we do NOT want value
                // selectors to iterate over it.  eg, {'a.0': 5} does not match {a: [[5]]}.
                // So in that case, we mark the return value as 'don't iterate'.

                if (!lookupRest) {
                  return [omitUnnecessaryFields({
                    arrayIndices: arrayIndices,
                    dontIterate: Array.isArray(doc) && Array.isArray(firstLevel),
                    value: firstLevel
                  })];
                } // We need to dig deeper.  But if we can't, because what we've found is not
                // an array or plain object, we're done. If we just did a numeric index into
                // an array, we return nothing here (this is a change in Mongo 2.5 from
                // Mongo 2.4, where {'a.0.b': null} stopped matching {a: [5]}). Otherwise,
                // return a single `undefined` (which can, for example, match via equality
                // with `null`).


                if (!isIndexable(firstLevel)) {
                  if (Array.isArray(doc)) {
                    return [];
                  }

                  return [omitUnnecessaryFields({
                    arrayIndices: arrayIndices,
                    value: undefined
                  })];
                }

                var result = [];

                var appendToResult = function (more) {
                  result.push.apply(result, (0, _toConsumableArray2.default)(more));
                }; // Dig deeper: look up the rest of the parts on whatever we've found.
                // (lookupRest is smart enough to not try to do invalid lookups into
                // firstLevel if it's an array.)


                appendToResult(lookupRest(firstLevel, arrayIndices)); // If we found an array, then in *addition* to potentially treating the next
                // part as a literal integer lookup, we should also 'branch': try to look up
                // the rest of the parts on each array element in parallel.
                //
                // In this case, we *only* dig deeper into array elements that are plain
                // objects. (Recall that we only got this far if we have further to dig.)
                // This makes sense: we certainly don't dig deeper into non-indexable
                // objects. And it would be weird to dig into an array: it's simpler to have
                // a rule that explicit integer indexes only apply to an outer array, not to
                // an array you find after a branching search.
                //
                // In the special case of a numeric part in a *sort selector* (not a query
                // selector), we skip the branching: we ONLY allow the numeric part to mean
                // 'look up this index' in that case, not 'also look up this index in all
                // the elements of the array'.

                if (Array.isArray(firstLevel) && !(isNumericKey(parts[1]) && options.forSort)) {
                  firstLevel.forEach(function (branch, arrayIndex) {
                    if (LocalCollection._isPlainObject(branch)) {
                      appendToResult(lookupRest(branch, arrayIndices.concat(arrayIndex)));
                    }
                  });
                }

                return result;
              };
            }

            // Object exported only for unit testing.
            // Use it to export private functions to test in Tinytest.
            MinimongoTest = {
              makeLookupFunction: makeLookupFunction
            };

            MinimongoError = function (message) {
              var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

              if (typeof message === 'string' && options.field) {
                message += " for field '" + options.field + "'";
              }

              var error = new Error(message);
              error.name = 'MinimongoError';
              return error;
            };

            function nothingMatcher(docOrBranchedValues) {
              return {
                result: false
              };
            }

            // Takes an operator object (an object with $ keys) and returns a branched
            // matcher for it.
            function operatorBranchedMatcher(valueSelector, matcher, isRoot) {
              // Each valueSelector works separately on the various branches.  So one
              // operator can match one branch and another can match another branch.  This
              // is OK.
              var operatorMatchers = Object.keys(valueSelector).map(function (operator) {
                var operand = valueSelector[operator];
                var simpleRange = ['$lt', '$lte', '$gt', '$gte'].includes(operator) && typeof operand === 'number';
                var simpleEquality = ['$ne', '$eq'].includes(operator) && operand !== Object(operand);
                var simpleInclusion = ['$in', '$nin'].includes(operator) && Array.isArray(operand) && !operand.some(function (x) {
                  return x === Object(x);
                });

                if (!(simpleRange || simpleInclusion || simpleEquality)) {
                  matcher._isSimple = false;
                }

                if (hasOwn.call(VALUE_OPERATORS, operator)) {
                  return VALUE_OPERATORS[operator](operand, valueSelector, matcher, isRoot);
                }

                if (hasOwn.call(ELEMENT_OPERATORS, operator)) {
                  var options = ELEMENT_OPERATORS[operator];
                  return convertElementMatcherToBranchedMatcher(options.compileElementSelector(operand, valueSelector, matcher), options);
                }

                throw new Error("Unrecognized operator: " + operator);
              });
              return andBranchedMatchers(operatorMatchers);
            } // paths - Array: list of mongo style paths
            // newLeafFn - Function: of form function(path) should return a scalar value to
            //                       put into list created for that path
            // conflictFn - Function: of form function(node, path, fullPath) is called
            //                        when building a tree path for 'fullPath' node on
            //                        'path' was already a leaf with a value. Must return a
            //                        conflict resolution.
            // initial tree - Optional Object: starting tree.
            // @returns - Object: tree represented as a set of nested objects


            function pathsToTree(paths, newLeafFn, conflictFn) {
              var root = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
              paths.forEach(function (path) {
                var pathArray = path.split('.');
                var tree = root; // use .every just for iteration with break

                var success = pathArray.slice(0, -1).every(function (key, i) {
                  if (!hasOwn.call(tree, key)) {
                    tree[key] = {};
                  } else if (tree[key] !== Object(tree[key])) {
                    tree[key] = conflictFn(tree[key], pathArray.slice(0, i + 1).join('.'), path); // break out of loop if we are failing for this path

                    if (tree[key] !== Object(tree[key])) {
                      return false;
                    }
                  }

                  tree = tree[key];
                  return true;
                });

                if (success) {
                  var lastKey = pathArray[pathArray.length - 1];

                  if (hasOwn.call(tree, lastKey)) {
                    tree[lastKey] = conflictFn(tree[lastKey], path, path);
                  } else {
                    tree[lastKey] = newLeafFn(path);
                  }
                }
              });
              return root;
            }

            // Makes sure we get 2 elements array and assume the first one to be x and
            // the second one to y no matter what user passes.
            // In case user passes { lon: x, lat: y } returns [x, y]
            function pointToArray(point) {
              return Array.isArray(point) ? point.slice() : [point.x, point.y];
            } // Creating a document from an upsert is quite tricky.
            // E.g. this selector: {"$or": [{"b.foo": {"$all": ["bar"]}}]}, should result
            // in: {"b.foo": "bar"}
            // But this selector: {"$or": [{"b": {"foo": {"$all": ["bar"]}}}]} should throw
            // an error
            // Some rules (found mainly with trial & error, so there might be more):
            // - handle all childs of $and (or implicit $and)
            // - handle $or nodes with exactly 1 child
            // - ignore $or nodes with more than 1 child
            // - ignore $nor and $not nodes
            // - throw when a value can not be set unambiguously
            // - every value for $all should be dealt with as separate $eq-s
            // - threat all children of $all as $eq setters (=> set if $all.length === 1,
            //   otherwise throw error)
            // - you can not mix '$'-prefixed keys and non-'$'-prefixed keys
            // - you can only have dotted keys on a root-level
            // - you can not have '$'-prefixed keys more than one-level deep in an object
            // Handles one key/value pair to put in the selector document


            function populateDocumentWithKeyValue(document, key, value) {
              if (value && Object.getPrototypeOf(value) === Object.prototype) {
                populateDocumentWithObject(document, key, value);
              } else if (!(value instanceof RegExp)) {
                insertIntoDocument(document, key, value);
              }
            } // Handles a key, value pair to put in the selector document
            // if the value is an object


            function populateDocumentWithObject(document, key, value) {
              var keys = Object.keys(value);
              var unprefixedKeys = keys.filter(function (op) {
                return op[0] !== '$';
              });

              if (unprefixedKeys.length > 0 || !keys.length) {
                // Literal (possibly empty) object ( or empty object )
                // Don't allow mixing '$'-prefixed with non-'$'-prefixed fields
                if (keys.length !== unprefixedKeys.length) {
                  throw new Error("unknown operator: " + unprefixedKeys[0]);
                }

                validateObject(value, key);
                insertIntoDocument(document, key, value);
              } else {
                Object.keys(value).forEach(function (op) {
                  var object = value[op];

                  if (op === '$eq') {
                    populateDocumentWithKeyValue(document, key, object);
                  } else if (op === '$all') {
                    // every value for $all should be dealt with as separate $eq-s
                    object.forEach(function (element) {
                      return populateDocumentWithKeyValue(document, key, element);
                    });
                  }
                });
              }
            } // Fills a document with certain fields from an upsert selector


            function populateDocumentWithQueryFields(query) {
              var document = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

              if (Object.getPrototypeOf(query) === Object.prototype) {
                // handle implicit $and
                Object.keys(query).forEach(function (key) {
                  var value = query[key];

                  if (key === '$and') {
                    // handle explicit $and
                    value.forEach(function (element) {
                      return populateDocumentWithQueryFields(element, document);
                    });
                  } else if (key === '$or') {
                    // handle $or nodes with exactly 1 child
                    if (value.length === 1) {
                      populateDocumentWithQueryFields(value[0], document);
                    }
                  } else if (key[0] !== '$') {
                    // Ignore other '$'-prefixed logical selectors
                    populateDocumentWithKeyValue(document, key, value);
                  }
                });
              } else {
                // Handle meteor-specific shortcut for selecting _id
                if (LocalCollection._selectorIsId(query)) {
                  insertIntoDocument(document, '_id', query);
                }
              }

              return document;
            }

            function projectionDetails(fields) {
              // Find the non-_id keys (_id is handled specially because it is included
              // unless explicitly excluded). Sort the keys, so that our code to detect
              // overlaps like 'foo' and 'foo.bar' can assume that 'foo' comes first.
              var fieldsKeys = Object.keys(fields).sort(); // If _id is the only field in the projection, do not remove it, since it is
              // required to determine if this is an exclusion or exclusion. Also keep an
              // inclusive _id, since inclusive _id follows the normal rules about mixing
              // inclusive and exclusive fields. If _id is not the only field in the
              // projection and is exclusive, remove it so it can be handled later by a
              // special case, since exclusive _id is always allowed.

              if (!(fieldsKeys.length === 1 && fieldsKeys[0] === '_id') && !(fieldsKeys.includes('_id') && fields._id)) {
                fieldsKeys = fieldsKeys.filter(function (key) {
                  return key !== '_id';
                });
              }

              var including = null; // Unknown

              fieldsKeys.forEach(function (keyPath) {
                var rule = !!fields[keyPath];

                if (including === null) {
                  including = rule;
                } // This error message is copied from MongoDB shell


                if (including !== rule) {
                  throw MinimongoError('You cannot currently mix including and excluding fields.');
                }
              });
              var projectionRulesTree = pathsToTree(fieldsKeys, function (path) {
                return including;
              }, function (node, path, fullPath) {
                // Check passed projection fields' keys: If you have two rules such as
                // 'foo.bar' and 'foo.bar.baz', then the result becomes ambiguous. If
                // that happens, there is a probability you are doing something wrong,
                // framework should notify you about such mistake earlier on cursor
                // compilation step than later during runtime.  Note, that real mongo
                // doesn't do anything about it and the later rule appears in projection
                // project, more priority it takes.
                //
                // Example, assume following in mongo shell:
                // > db.coll.insert({ a: { b: 23, c: 44 } })
                // > db.coll.find({}, { 'a': 1, 'a.b': 1 })
                // {"_id": ObjectId("520bfe456024608e8ef24af3"), "a": {"b": 23}}
                // > db.coll.find({}, { 'a.b': 1, 'a': 1 })
                // {"_id": ObjectId("520bfe456024608e8ef24af3"), "a": {"b": 23, "c": 44}}
                //
                // Note, how second time the return set of keys is different.
                var currentPath = fullPath;
                var anotherPath = path;
                throw MinimongoError("both " + currentPath + " and " + anotherPath + " found in fields option, " + 'using both of them may trigger unexpected behavior. Did you mean to ' + 'use only one of them?');
              });
              return {
                including: including,
                tree: projectionRulesTree
              };
            }

            function regexpElementMatcher(regexp) {
              return function (value) {
                if (value instanceof RegExp) {
                  return value.toString() === regexp.toString();
                } // Regexps only work against strings.


                if (typeof value !== 'string') {
                  return false;
                } // Reset regexp's state to avoid inconsistent matching for objects with the
                // same value on consecutive calls of regexp.test. This happens only if the
                // regexp has the 'g' flag. Also note that ES6 introduces a new flag 'y' for
                // which we should *not* change the lastIndex but MongoDB doesn't support
                // either of these flags.


                regexp.lastIndex = 0;
                return regexp.test(value);
              };
            }

            // Validates the key in a path.
            // Objects that are nested more then 1 level cannot have dotted fields
            // or fields starting with '$'
            function validateKeyInPath(key, path) {
              if (key.includes('.')) {
                throw new Error("The dotted field '" + key + "' in '" + path + "." + key + " is not valid for storage.");
              }

              if (key[0] === '$') {
                throw new Error("The dollar ($) prefixed field  '" + path + "." + key + " is not valid for storage.");
              }
            } // Recursively validates an object that is nested more than one level deep


            function validateObject(object, path) {
              if (object && Object.getPrototypeOf(object) === Object.prototype) {
                Object.keys(object).forEach(function (key) {
                  validateKeyInPath(key, path);
                  validateObject(object[key], path + '.' + key);
                });
              }
            }
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "cursor.js": function (_require4, _exports4, _module3) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/minimongo/cursor.js                                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module3.export({
              "default": function () {
                return Cursor;
              }
            });
            var LocalCollection;
            _module3.watch(_require4("./local_collection.js"), {
              "default": function (v) {
                LocalCollection = v;
              }
            }, 0);
            var hasOwn;
            _module3.watch(_require4("./common.js"), {
              hasOwn: function (v) {
                hasOwn = v;
              }
            }, 1);

            var Cursor =
            /*#__PURE__*/
            function () {
              // don't call this ctor directly.  use LocalCollection.find().
              function Cursor(collection, selector) {
                var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                this.collection = collection;
                this.sorter = null;
                this.matcher = new Minimongo.Matcher(selector);

                if (LocalCollection._selectorIsIdPerhapsAsObject(selector)) {
                  // stash for fast _id and { _id }
                  this._selectorId = hasOwn.call(selector, '_id') ? selector._id : selector;
                } else {
                  this._selectorId = undefined;

                  if (this.matcher.hasGeoQuery() || options.sort) {
                    this.sorter = new Minimongo.Sorter(options.sort || []);
                  }
                }

                this.skip = options.skip || 0;
                this.limit = options.limit;
                this.fields = options.fields;
                this._projectionFn = LocalCollection._compileProjection(this.fields || {});
                this._transform = LocalCollection.wrapTransform(options.transform); // by default, queries register w/ Tracker when it is available.

                if (typeof Tracker !== 'undefined') {
                  this.reactive = options.reactive === undefined ? true : options.reactive;
                }
              }
              /**
               * @summary Returns the number of documents that match a query.
               * @memberOf Mongo.Cursor
               * @method  count
               * @param {boolean} [applySkipLimit=true] If set to `false`, the value
               *                                         returned will reflect the total
               *                                         number of matching documents,
               *                                         ignoring any value supplied for
               *                                         limit
               * @instance
               * @locus Anywhere
               * @returns {Number}
               */

              var _proto = Cursor.prototype;

              _proto.count = function () {
                function count() {
                  var applySkipLimit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

                  if (this.reactive) {
                    // allow the observe to be unordered
                    this._depend({
                      added: true,
                      removed: true
                    }, true);
                  }

                  return this._getRawObjects({
                    ordered: true,
                    applySkipLimit: applySkipLimit
                  }).length;
                }

                return count;
              }();
              /**
               * @summary Return all matching documents as an Array.
               * @memberOf Mongo.Cursor
               * @method  fetch
               * @instance
               * @locus Anywhere
               * @returns {Object[]}
               */

              _proto.fetch = function () {
                function fetch() {
                  var result = [];
                  this.forEach(function (doc) {
                    result.push(doc);
                  });
                  return result;
                }

                return fetch;
              }();

              _proto[Symbol.iterator] = function () {
                var _this = this;

                if (this.reactive) {
                  this._depend({
                    addedBefore: true,
                    removed: true,
                    changed: true,
                    movedBefore: true
                  });
                }

                var index = 0;

                var objects = this._getRawObjects({
                  ordered: true
                });

                return {
                  next: function () {
                    if (index < objects.length) {
                      // This doubles as a clone operation.
                      var element = _this._projectionFn(objects[index++]);

                      if (_this._transform) element = _this._transform(element);
                      return {
                        value: element
                      };
                    }

                    return {
                      done: true
                    };
                  }
                };
              };
              /**
               * @callback IterationCallback
               * @param {Object} doc
               * @param {Number} index
               */

              /**
               * @summary Call `callback` once for each matching document, sequentially and
               *          synchronously.
               * @locus Anywhere
               * @method  forEach
               * @instance
               * @memberOf Mongo.Cursor
               * @param {IterationCallback} callback Function to call. It will be called
               *                                     with three arguments: the document, a
               *                                     0-based index, and <em>cursor</em>
               *                                     itself.
               * @param {Any} [thisArg] An object which will be the value of `this` inside
               *                        `callback`.
               */

              _proto.forEach = function () {
                function forEach(callback, thisArg) {
                  var _this2 = this;

                  if (this.reactive) {
                    this._depend({
                      addedBefore: true,
                      removed: true,
                      changed: true,
                      movedBefore: true
                    });
                  }

                  this._getRawObjects({
                    ordered: true
                  }).forEach(function (element, i) {
                    // This doubles as a clone operation.
                    element = _this2._projectionFn(element);

                    if (_this2._transform) {
                      element = _this2._transform(element);
                    }

                    callback.call(thisArg, element, i, _this2);
                  });
                }

                return forEach;
              }();

              _proto.getTransform = function () {
                function getTransform() {
                  return this._transform;
                }

                return getTransform;
              }();
              /**
               * @summary Map callback over all matching documents.  Returns an Array.
               * @locus Anywhere
               * @method map
               * @instance
               * @memberOf Mongo.Cursor
               * @param {IterationCallback} callback Function to call. It will be called
               *                                     with three arguments: the document, a
               *                                     0-based index, and <em>cursor</em>
               *                                     itself.
               * @param {Any} [thisArg] An object which will be the value of `this` inside
               *                        `callback`.
               */

              _proto.map = function () {
                function map(callback, thisArg) {
                  var _this3 = this;

                  var result = [];
                  this.forEach(function (doc, i) {
                    result.push(callback.call(thisArg, doc, i, _this3));
                  });
                  return result;
                }

                return map;
              }(); // options to contain:
              //  * callbacks for observe():
              //    - addedAt (document, atIndex)
              //    - added (document)
              //    - changedAt (newDocument, oldDocument, atIndex)
              //    - changed (newDocument, oldDocument)
              //    - removedAt (document, atIndex)
              //    - removed (document)
              //    - movedTo (document, oldIndex, newIndex)
              //
              // attributes available on returned query handle:
              //  * stop(): end updates
              //  * collection: the collection this query is querying
              //
              // iff x is a returned query handle, (x instanceof
              // LocalCollection.ObserveHandle) is true
              //
              // initial results delivered through added callback
              // XXX maybe callbacks should take a list of objects, to expose transactions?
              // XXX maybe support field limiting (to limit what you're notified on)

              /**
               * @summary Watch a query.  Receive callbacks as the result set changes.
               * @locus Anywhere
               * @memberOf Mongo.Cursor
               * @instance
               * @param {Object} callbacks Functions to call to deliver the result set as it
               *                           changes
               */

              _proto.observe = function () {
                function observe(options) {
                  return LocalCollection._observeFromObserveChanges(this, options);
                }

                return observe;
              }();
              /**
               * @summary Watch a query. Receive callbacks as the result set changes. Only
               *          the differences between the old and new documents are passed to
               *          the callbacks.
               * @locus Anywhere
               * @memberOf Mongo.Cursor
               * @instance
               * @param {Object} callbacks Functions to call to deliver the result set as it
               *                           changes
               */

              _proto.observeChanges = function () {
                function observeChanges(options) {
                  var _this4 = this;

                  var ordered = LocalCollection._observeChangesCallbacksAreOrdered(options); // there are several places that assume you aren't combining skip/limit with
                  // unordered observe.  eg, update's EJSON.clone, and the "there are several"
                  // comment in _modifyAndNotify
                  // XXX allow skip/limit with unordered observe


                  if (!options._allow_unordered && !ordered && (this.skip || this.limit)) {
                    throw new Error("Must use an ordered observe with skip or limit (i.e. 'addedBefore' " + "for observeChanges or 'addedAt' for observe, instead of 'added').");
                  }

                  if (this.fields && (this.fields._id === 0 || this.fields._id === false)) {
                    throw Error('You may not observe a cursor with {fields: {_id: 0}}');
                  }

                  var distances = this.matcher.hasGeoQuery() && ordered && new LocalCollection._IdMap();
                  var query = {
                    cursor: this,
                    dirty: false,
                    distances: distances,
                    matcher: this.matcher,
                    // not fast pathed
                    ordered: ordered,
                    projectionFn: this._projectionFn,
                    resultsSnapshot: null,
                    sorter: ordered && this.sorter
                  };
                  var qid; // Non-reactive queries call added[Before] and then never call anything
                  // else.

                  if (this.reactive) {
                    qid = this.collection.next_qid++;
                    this.collection.queries[qid] = query;
                  }

                  query.results = this._getRawObjects({
                    ordered: ordered,
                    distances: query.distances
                  });

                  if (this.collection.paused) {
                    query.resultsSnapshot = ordered ? [] : new LocalCollection._IdMap();
                  } // wrap callbacks we were passed. callbacks only fire when not paused and
                  // are never undefined
                  // Filters out blacklisted fields according to cursor's projection.
                  // XXX wrong place for this?
                  // furthermore, callbacks enqueue until the operation we're working on is
                  // done.


                  var wrapCallback = function (fn) {
                    if (!fn) {
                      return function () {};
                    }

                    var self = _this4;
                    return function ()
                    /* args*/
                    {
                      var _this5 = this;

                      if (self.collection.paused) {
                        return;
                      }

                      var args = arguments;

                      self.collection._observeQueue.queueTask(function () {
                        fn.apply(_this5, args);
                      });
                    };
                  };

                  query.added = wrapCallback(options.added);
                  query.changed = wrapCallback(options.changed);
                  query.removed = wrapCallback(options.removed);

                  if (ordered) {
                    query.addedBefore = wrapCallback(options.addedBefore);
                    query.movedBefore = wrapCallback(options.movedBefore);
                  }

                  if (!options._suppress_initial && !this.collection.paused) {
                    query.results.forEach(function (doc) {
                      var fields = EJSON.clone(doc);
                      delete fields._id;

                      if (ordered) {
                        query.addedBefore(doc._id, _this4._projectionFn(fields), null);
                      }

                      query.added(doc._id, _this4._projectionFn(fields));
                    });
                  }

                  var handle = Object.assign(new LocalCollection.ObserveHandle(), {
                    collection: this.collection,
                    stop: function () {
                      if (_this4.reactive) {
                        delete _this4.collection.queries[qid];
                      }
                    }
                  });

                  if (this.reactive && Tracker.active) {
                    // XXX in many cases, the same observe will be recreated when
                    // the current autorun is rerun.  we could save work by
                    // letting it linger across rerun and potentially get
                    // repurposed if the same observe is performed, using logic
                    // similar to that of Meteor.subscribe.
                    Tracker.onInvalidate(function () {
                      handle.stop();
                    });
                  } // run the observe callbacks resulting from the initial contents
                  // before we leave the observe.


                  this.collection._observeQueue.drain();

                  return handle;
                }

                return observeChanges;
              }(); // Since we don't actually have a "nextObject" interface, there's really no
              // reason to have a "rewind" interface.  All it did was make multiple calls
              // to fetch/map/forEach return nothing the second time.
              // XXX COMPAT WITH 0.8.1


              _proto.rewind = function () {
                function rewind() {}

                return rewind;
              }(); // XXX Maybe we need a version of observe that just calls a callback if
              // anything changed.


              _proto._depend = function () {
                function _depend(changers, _allow_unordered) {
                  if (Tracker.active) {
                    var dependency = new Tracker.Dependency();
                    var notify = dependency.changed.bind(dependency);
                    dependency.depend();
                    var options = {
                      _allow_unordered: _allow_unordered,
                      _suppress_initial: true
                    };
                    ['added', 'addedBefore', 'changed', 'movedBefore', 'removed'].forEach(function (fn) {
                      if (changers[fn]) {
                        options[fn] = notify;
                      }
                    }); // observeChanges will stop() when this computation is invalidated

                    this.observeChanges(options);
                  }
                }

                return _depend;
              }();

              _proto._getCollectionName = function () {
                function _getCollectionName() {
                  return this.collection.name;
                }

                return _getCollectionName;
              }(); // Returns a collection of matching objects, but doesn't deep copy them.
              //
              // If ordered is set, returns a sorted array, respecting sorter, skip, and
              // limit properties of the query provided that options.applySkipLimit is
              // not set to false (#1201). If sorter is falsey, no sort -- you get the
              // natural order.
              //
              // If ordered is not set, returns an object mapping from ID to doc (sorter,
              // skip and limit should not be set).
              //
              // If ordered is set and this cursor is a $near geoquery, then this function
              // will use an _IdMap to track each distance from the $near argument point in
              // order to use it as a sort key. If an _IdMap is passed in the 'distances'
              // argument, this function will clear it and use it for this purpose
              // (otherwise it will just create its own _IdMap). The observeChanges
              // implementation uses this to remember the distances after this function
              // returns.


              _proto._getRawObjects = function () {
                function _getRawObjects() {
                  var _this6 = this;

                  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                  // By default this method will respect skip and limit because .fetch(),
                  // .forEach() etc... expect this behaviour. It can be forced to ignore
                  // skip and limit by setting applySkipLimit to false (.count() does this,
                  // for example)
                  var applySkipLimit = options.applySkipLimit !== false; // XXX use OrderedDict instead of array, and make IdMap and OrderedDict
                  // compatible

                  var results = options.ordered ? [] : new LocalCollection._IdMap(); // fast path for single ID value

                  if (this._selectorId !== undefined) {
                    // If you have non-zero skip and ask for a single id, you get nothing.
                    // This is so it matches the behavior of the '{_id: foo}' path.
                    if (applySkipLimit && this.skip) {
                      return results;
                    }

                    var selectedDoc = this.collection._docs.get(this._selectorId);

                    if (selectedDoc) {
                      if (options.ordered) {
                        results.push(selectedDoc);
                      } else {
                        results.set(this._selectorId, selectedDoc);
                      }
                    }

                    return results;
                  } // slow path for arbitrary selector, sort, skip, limit
                  // in the observeChanges case, distances is actually part of the "query"
                  // (ie, live results set) object.  in other cases, distances is only used
                  // inside this function.


                  var distances;

                  if (this.matcher.hasGeoQuery() && options.ordered) {
                    if (options.distances) {
                      distances = options.distances;
                      distances.clear();
                    } else {
                      distances = new LocalCollection._IdMap();
                    }
                  }

                  this.collection._docs.forEach(function (doc, id) {
                    var matchResult = _this6.matcher.documentMatches(doc);

                    if (matchResult.result) {
                      if (options.ordered) {
                        results.push(doc);

                        if (distances && matchResult.distance !== undefined) {
                          distances.set(id, matchResult.distance);
                        }
                      } else {
                        results.set(id, doc);
                      }
                    } // Override to ensure all docs are matched if ignoring skip & limit


                    if (!applySkipLimit) {
                      return true;
                    } // Fast path for limited unsorted queries.
                    // XXX 'length' check here seems wrong for ordered


                    return !_this6.limit || _this6.skip || _this6.sorter || results.length !== _this6.limit;
                  });

                  if (!options.ordered) {
                    return results;
                  }

                  if (this.sorter) {
                    results.sort(this.sorter.getComparator({
                      distances: distances
                    }));
                  } // Return the full set of results if there is no skip or limit or if we're
                  // ignoring them


                  if (!applySkipLimit || !this.limit && !this.skip) {
                    return results;
                  }

                  return results.slice(this.skip, this.limit ? this.limit + this.skip : results.length);
                }

                return _getRawObjects;
              }();

              _proto._publishCursor = function () {
                function _publishCursor(subscription) {
                  // XXX minimongo should not depend on mongo-livedata!
                  if (!Package.mongo) {
                    throw new Error('Can\'t publish from Minimongo without the `mongo` package.');
                  }

                  if (!this.collection.name) {
                    throw new Error('Can\'t publish a cursor from a collection without a name.');
                  }

                  return Package.mongo.Mongo.Collection._publishCursor(this, subscription, this.collection.name);
                }

                return _publishCursor;
              }();

              return Cursor;
            }();
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "local_collection.js": function (_require5, _exports5, _module4) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/minimongo/local_collection.js                                                                              //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require5("@babel/runtime/helpers/interopRequireDefault");

            var _toConsumableArray2 = _interopRequireDefault(_require5("@babel/runtime/helpers/toConsumableArray"));

            var _typeof2 = _interopRequireDefault(_require5("@babel/runtime/helpers/typeof"));

            var _inheritsLoose2 = _interopRequireDefault(_require5("@babel/runtime/helpers/inheritsLoose"));

            _module4.export({
              "default": function () {
                return LocalCollection;
              }
            });
            var Cursor;
            _module4.watch(_require5("./cursor.js"), {
              "default": function (v) {
                Cursor = v;
              }
            }, 0);
            var ObserveHandle;
            _module4.watch(_require5("./observe_handle.js"), {
              "default": function (v) {
                ObserveHandle = v;
              }
            }, 1);
            var hasOwn, isIndexable, isNumericKey, isOperatorObject, populateDocumentWithQueryFields, projectionDetails;
            _module4.watch(_require5("./common.js"), {
              hasOwn: function (v) {
                hasOwn = v;
              },
              isIndexable: function (v) {
                isIndexable = v;
              },
              isNumericKey: function (v) {
                isNumericKey = v;
              },
              isOperatorObject: function (v) {
                isOperatorObject = v;
              },
              populateDocumentWithQueryFields: function (v) {
                populateDocumentWithQueryFields = v;
              },
              projectionDetails: function (v) {
                projectionDetails = v;
              }
            }, 2);

            var LocalCollection =
            /*#__PURE__*/
            function () {
              function LocalCollection(name) {
                this.name = name; // _id -> document (also containing id)

                this._docs = new LocalCollection._IdMap();
                this._observeQueue = new Meteor._SynchronousQueue();
                this.next_qid = 1; // live query id generator
                // qid -> live query object. keys:
                //  ordered: bool. ordered queries have addedBefore/movedBefore callbacks.
                //  results: array (ordered) or object (unordered) of current results
                //    (aliased with this._docs!)
                //  resultsSnapshot: snapshot of results. null if not paused.
                //  cursor: Cursor object for the query.
                //  selector, sorter, (callbacks): functions

                this.queries = Object.create(null); // null if not saving originals; an IdMap from id to original document value
                // if saving originals. See comments before saveOriginals().

                this._savedOriginals = null; // True when observers are paused and we should not send callbacks.

                this.paused = false;
              } // options may include sort, skip, limit, reactive
              // sort may be any of these forms:
              //     {a: 1, b: -1}
              //     [["a", "asc"], ["b", "desc"]]
              //     ["a", ["b", "desc"]]
              //   (in the first form you're beholden to key enumeration order in
              //   your javascript VM)
              //
              // reactive: if given, and false, don't register with Tracker (default
              // is true)
              //
              // XXX possibly should support retrieving a subset of fields? and
              // have it be a hint (ignored on the client, when not copying the
              // doc?)
              //
              // XXX sort does not yet support subkeys ('a.b') .. fix that!
              // XXX add one more sort form: "key"
              // XXX tests


              var _proto = LocalCollection.prototype;

              _proto.find = function () {
                function find(selector, options) {
                  // default syntax for everything is to omit the selector argument.
                  // but if selector is explicitly passed in as false or undefined, we
                  // want a selector that matches nothing.
                  if (arguments.length === 0) {
                    selector = {};
                  }

                  return new LocalCollection.Cursor(this, selector, options);
                }

                return find;
              }();

              _proto.findOne = function () {
                function findOne(selector) {
                  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                  if (arguments.length === 0) {
                    selector = {};
                  } // NOTE: by setting limit 1 here, we end up using very inefficient
                  // code that recomputes the whole query on each update. The upside is
                  // that when you reactively depend on a findOne you only get
                  // invalidated when the found object changes, not any object in the
                  // collection. Most findOne will be by id, which has a fast path, so
                  // this might not be a big deal. In most cases, invalidation causes
                  // the called to re-query anyway, so this should be a net performance
                  // improvement.


                  options.limit = 1;
                  return this.find(selector, options).fetch()[0];
                }

                return findOne;
              }(); // XXX possibly enforce that 'undefined' does not appear (we assume
              // this in our handling of null and $exists)


              _proto.insert = function () {
                function insert(doc, callback) {
                  var _this = this;

                  doc = EJSON.clone(doc);
                  assertHasValidFieldNames(doc); // if you really want to use ObjectIDs, set this global.
                  // Mongo.Collection specifies its own ids and does not use this code.

                  if (!hasOwn.call(doc, '_id')) {
                    doc._id = LocalCollection._useOID ? new MongoID.ObjectID() : Random.id();
                  }

                  var id = doc._id;

                  if (this._docs.has(id)) {
                    throw MinimongoError("Duplicate _id '" + id + "'");
                  }

                  this._saveOriginal(id, undefined);

                  this._docs.set(id, doc);

                  var queriesToRecompute = []; // trigger live queries that match

                  Object.keys(this.queries).forEach(function (qid) {
                    var query = _this.queries[qid];

                    if (query.dirty) {
                      return;
                    }

                    var matchResult = query.matcher.documentMatches(doc);

                    if (matchResult.result) {
                      if (query.distances && matchResult.distance !== undefined) {
                        query.distances.set(id, matchResult.distance);
                      }

                      if (query.cursor.skip || query.cursor.limit) {
                        queriesToRecompute.push(qid);
                      } else {
                        LocalCollection._insertInResults(query, doc);
                      }
                    }
                  });
                  queriesToRecompute.forEach(function (qid) {
                    if (_this.queries[qid]) {
                      _this._recomputeResults(_this.queries[qid]);
                    }
                  });

                  this._observeQueue.drain(); // Defer because the caller likely doesn't expect the callback to be run
                  // immediately.


                  if (callback) {
                    Meteor.defer(function () {
                      callback(null, id);
                    });
                  }

                  return id;
                }

                return insert;
              }(); // Pause the observers. No callbacks from observers will fire until
              // 'resumeObservers' is called.


              _proto.pauseObservers = function () {
                function pauseObservers() {
                  var _this2 = this;

                  // No-op if already paused.
                  if (this.paused) {
                    return;
                  } // Set the 'paused' flag such that new observer messages don't fire.


                  this.paused = true; // Take a snapshot of the query results for each query.

                  Object.keys(this.queries).forEach(function (qid) {
                    var query = _this2.queries[qid];
                    query.resultsSnapshot = EJSON.clone(query.results);
                  });
                }

                return pauseObservers;
              }();

              _proto.remove = function () {
                function remove(selector, callback) {
                  var _this3 = this;

                  // Easy special case: if we're not calling observeChanges callbacks and
                  // we're not saving originals and we got asked to remove everything, then
                  // just empty everything directly.
                  if (this.paused && !this._savedOriginals && EJSON.equals(selector, {})) {
                    var _result = this._docs.size();

                    this._docs.clear();

                    Object.keys(this.queries).forEach(function (qid) {
                      var query = _this3.queries[qid];

                      if (query.ordered) {
                        query.results = [];
                      } else {
                        query.results.clear();
                      }
                    });

                    if (callback) {
                      Meteor.defer(function () {
                        callback(null, _result);
                      });
                    }

                    return _result;
                  }

                  var matcher = new Minimongo.Matcher(selector);
                  var remove = [];

                  this._eachPossiblyMatchingDoc(selector, function (doc, id) {
                    if (matcher.documentMatches(doc).result) {
                      remove.push(id);
                    }
                  });

                  var queriesToRecompute = [];
                  var queryRemove = [];

                  var _loop = function (i) {
                    var removeId = remove[i];

                    var removeDoc = _this3._docs.get(removeId);

                    Object.keys(_this3.queries).forEach(function (qid) {
                      var query = _this3.queries[qid];

                      if (query.dirty) {
                        return;
                      }

                      if (query.matcher.documentMatches(removeDoc).result) {
                        if (query.cursor.skip || query.cursor.limit) {
                          queriesToRecompute.push(qid);
                        } else {
                          queryRemove.push({
                            qid: qid,
                            doc: removeDoc
                          });
                        }
                      }
                    });

                    _this3._saveOriginal(removeId, removeDoc);

                    _this3._docs.remove(removeId);
                  };

                  for (var i = 0; i < remove.length; i++) {
                    _loop(i);
                  } // run live query callbacks _after_ we've removed the documents.


                  queryRemove.forEach(function (remove) {
                    var query = _this3.queries[remove.qid];

                    if (query) {
                      query.distances && query.distances.remove(remove.doc._id);

                      LocalCollection._removeFromResults(query, remove.doc);
                    }
                  });
                  queriesToRecompute.forEach(function (qid) {
                    var query = _this3.queries[qid];

                    if (query) {
                      _this3._recomputeResults(query);
                    }
                  });

                  this._observeQueue.drain();

                  var result = remove.length;

                  if (callback) {
                    Meteor.defer(function () {
                      callback(null, result);
                    });
                  }

                  return result;
                }

                return remove;
              }(); // Resume the observers. Observers immediately receive change
              // notifications to bring them to the current state of the
              // database. Note that this is not just replaying all the changes that
              // happened during the pause, it is a smarter 'coalesced' diff.


              _proto.resumeObservers = function () {
                function resumeObservers() {
                  var _this4 = this;

                  // No-op if not paused.
                  if (!this.paused) {
                    return;
                  } // Unset the 'paused' flag. Make sure to do this first, otherwise
                  // observer methods won't actually fire when we trigger them.


                  this.paused = false;
                  Object.keys(this.queries).forEach(function (qid) {
                    var query = _this4.queries[qid];

                    if (query.dirty) {
                      query.dirty = false; // re-compute results will perform `LocalCollection._diffQueryChanges`
                      // automatically.

                      _this4._recomputeResults(query, query.resultsSnapshot);
                    } else {
                      // Diff the current results against the snapshot and send to observers.
                      // pass the query object for its observer callbacks.
                      LocalCollection._diffQueryChanges(query.ordered, query.resultsSnapshot, query.results, query, {
                        projectionFn: query.projectionFn
                      });
                    }

                    query.resultsSnapshot = null;
                  });

                  this._observeQueue.drain();
                }

                return resumeObservers;
              }();

              _proto.retrieveOriginals = function () {
                function retrieveOriginals() {
                  if (!this._savedOriginals) {
                    throw new Error('Called retrieveOriginals without saveOriginals');
                  }

                  var originals = this._savedOriginals;
                  this._savedOriginals = null;
                  return originals;
                }

                return retrieveOriginals;
              }(); // To track what documents are affected by a piece of code, call
              // saveOriginals() before it and retrieveOriginals() after it.
              // retrieveOriginals returns an object whose keys are the ids of the documents
              // that were affected since the call to saveOriginals(), and the values are
              // equal to the document's contents at the time of saveOriginals. (In the case
              // of an inserted document, undefined is the value.) You must alternate
              // between calls to saveOriginals() and retrieveOriginals().


              _proto.saveOriginals = function () {
                function saveOriginals() {
                  if (this._savedOriginals) {
                    throw new Error('Called saveOriginals twice without retrieveOriginals');
                  }

                  this._savedOriginals = new LocalCollection._IdMap();
                }

                return saveOriginals;
              }(); // XXX atomicity: if multi is true, and one modification fails, do
              // we rollback the whole operation, or what?


              _proto.update = function () {
                function update(selector, mod, options, callback) {
                  var _this5 = this;

                  if (!callback && options instanceof Function) {
                    callback = options;
                    options = null;
                  }

                  if (!options) {
                    options = {};
                  }

                  var matcher = new Minimongo.Matcher(selector, true); // Save the original results of any query that we might need to
                  // _recomputeResults on, because _modifyAndNotify will mutate the objects in
                  // it. (We don't need to save the original results of paused queries because
                  // they already have a resultsSnapshot and we won't be diffing in
                  // _recomputeResults.)

                  var qidToOriginalResults = {}; // We should only clone each document once, even if it appears in multiple
                  // queries

                  var docMap = new LocalCollection._IdMap();

                  var idsMatched = LocalCollection._idsMatchedBySelector(selector);

                  Object.keys(this.queries).forEach(function (qid) {
                    var query = _this5.queries[qid];

                    if ((query.cursor.skip || query.cursor.limit) && !_this5.paused) {
                      // Catch the case of a reactive `count()` on a cursor with skip
                      // or limit, which registers an unordered observe. This is a
                      // pretty rare case, so we just clone the entire result set with
                      // no optimizations for documents that appear in these result
                      // sets and other queries.
                      if (query.results instanceof LocalCollection._IdMap) {
                        qidToOriginalResults[qid] = query.results.clone();
                        return;
                      }

                      if (!(query.results instanceof Array)) {
                        throw new Error('Assertion failed: query.results not an array');
                      } // Clones a document to be stored in `qidToOriginalResults`
                      // because it may be modified before the new and old result sets
                      // are diffed. But if we know exactly which document IDs we're
                      // going to modify, then we only need to clone those.


                      var memoizedCloneIfNeeded = function (doc) {
                        if (docMap.has(doc._id)) {
                          return docMap.get(doc._id);
                        }

                        var docToMemoize = idsMatched && !idsMatched.some(function (id) {
                          return EJSON.equals(id, doc._id);
                        }) ? doc : EJSON.clone(doc);
                        docMap.set(doc._id, docToMemoize);
                        return docToMemoize;
                      };

                      qidToOriginalResults[qid] = query.results.map(memoizedCloneIfNeeded);
                    }
                  });
                  var recomputeQids = {};
                  var updateCount = 0;

                  this._eachPossiblyMatchingDoc(selector, function (doc, id) {
                    var queryResult = matcher.documentMatches(doc);

                    if (queryResult.result) {
                      // XXX Should we save the original even if mod ends up being a no-op?
                      _this5._saveOriginal(id, doc);

                      _this5._modifyAndNotify(doc, mod, recomputeQids, queryResult.arrayIndices);

                      ++updateCount;

                      if (!options.multi) {
                        return false; // break
                      }
                    }

                    return true;
                  });

                  Object.keys(recomputeQids).forEach(function (qid) {
                    var query = _this5.queries[qid];

                    if (query) {
                      _this5._recomputeResults(query, qidToOriginalResults[qid]);
                    }
                  });

                  this._observeQueue.drain(); // If we are doing an upsert, and we didn't modify any documents yet, then
                  // it's time to do an insert. Figure out what document we are inserting, and
                  // generate an id for it.


                  var insertedId;

                  if (updateCount === 0 && options.upsert) {
                    var doc = LocalCollection._createUpsertDocument(selector, mod);

                    if (!doc._id && options.insertedId) {
                      doc._id = options.insertedId;
                    }

                    insertedId = this.insert(doc);
                    updateCount = 1;
                  } // Return the number of affected documents, or in the upsert case, an object
                  // containing the number of affected docs and the id of the doc that was
                  // inserted, if any.


                  var result;

                  if (options._returnObject) {
                    result = {
                      numberAffected: updateCount
                    };

                    if (insertedId !== undefined) {
                      result.insertedId = insertedId;
                    }
                  } else {
                    result = updateCount;
                  }

                  if (callback) {
                    Meteor.defer(function () {
                      callback(null, result);
                    });
                  }

                  return result;
                }

                return update;
              }(); // A convenience wrapper on update. LocalCollection.upsert(sel, mod) is
              // equivalent to LocalCollection.update(sel, mod, {upsert: true,
              // _returnObject: true}).


              _proto.upsert = function () {
                function upsert(selector, mod, options, callback) {
                  if (!callback && typeof options === 'function') {
                    callback = options;
                    options = {};
                  }

                  return this.update(selector, mod, Object.assign({}, options, {
                    upsert: true,
                    _returnObject: true
                  }), callback);
                }

                return upsert;
              }(); // Iterates over a subset of documents that could match selector; calls
              // fn(doc, id) on each of them.  Specifically, if selector specifies
              // specific _id's, it only looks at those.  doc is *not* cloned: it is the
              // same object that is in _docs.


              _proto._eachPossiblyMatchingDoc = function () {
                function _eachPossiblyMatchingDoc(selector, fn) {
                  var _this6 = this;

                  var specificIds = LocalCollection._idsMatchedBySelector(selector);

                  if (specificIds) {
                    specificIds.some(function (id) {
                      var doc = _this6._docs.get(id);

                      if (doc) {
                        return fn(doc, id) === false;
                      }
                    });
                  } else {
                    this._docs.forEach(fn);
                  }
                }

                return _eachPossiblyMatchingDoc;
              }();

              _proto._modifyAndNotify = function () {
                function _modifyAndNotify(doc, mod, recomputeQids, arrayIndices) {
                  var _this7 = this;

                  var matched_before = {};
                  Object.keys(this.queries).forEach(function (qid) {
                    var query = _this7.queries[qid];

                    if (query.dirty) {
                      return;
                    }

                    if (query.ordered) {
                      matched_before[qid] = query.matcher.documentMatches(doc).result;
                    } else {
                      // Because we don't support skip or limit (yet) in unordered queries, we
                      // can just do a direct lookup.
                      matched_before[qid] = query.results.has(doc._id);
                    }
                  });
                  var old_doc = EJSON.clone(doc);

                  LocalCollection._modify(doc, mod, {
                    arrayIndices: arrayIndices
                  });

                  Object.keys(this.queries).forEach(function (qid) {
                    var query = _this7.queries[qid];

                    if (query.dirty) {
                      return;
                    }

                    var afterMatch = query.matcher.documentMatches(doc);
                    var after = afterMatch.result;
                    var before = matched_before[qid];

                    if (after && query.distances && afterMatch.distance !== undefined) {
                      query.distances.set(doc._id, afterMatch.distance);
                    }

                    if (query.cursor.skip || query.cursor.limit) {
                      // We need to recompute any query where the doc may have been in the
                      // cursor's window either before or after the update. (Note that if skip
                      // or limit is set, "before" and "after" being true do not necessarily
                      // mean that the document is in the cursor's output after skip/limit is
                      // applied... but if they are false, then the document definitely is NOT
                      // in the output. So it's safe to skip recompute if neither before or
                      // after are true.)
                      if (before || after) {
                        recomputeQids[qid] = true;
                      }
                    } else if (before && !after) {
                      LocalCollection._removeFromResults(query, doc);
                    } else if (!before && after) {
                      LocalCollection._insertInResults(query, doc);
                    } else if (before && after) {
                      LocalCollection._updateInResults(query, doc, old_doc);
                    }
                  });
                }

                return _modifyAndNotify;
              }(); // Recomputes the results of a query and runs observe callbacks for the
              // difference between the previous results and the current results (unless
              // paused). Used for skip/limit queries.
              //
              // When this is used by insert or remove, it can just use query.results for
              // the old results (and there's no need to pass in oldResults), because these
              // operations don't mutate the documents in the collection. Update needs to
              // pass in an oldResults which was deep-copied before the modifier was
              // applied.
              //
              // oldResults is guaranteed to be ignored if the query is not paused.


              _proto._recomputeResults = function () {
                function _recomputeResults(query, oldResults) {
                  if (this.paused) {
                    // There's no reason to recompute the results now as we're still paused.
                    // By flagging the query as "dirty", the recompute will be performed
                    // when resumeObservers is called.
                    query.dirty = true;
                    return;
                  }

                  if (!this.paused && !oldResults) {
                    oldResults = query.results;
                  }

                  if (query.distances) {
                    query.distances.clear();
                  }

                  query.results = query.cursor._getRawObjects({
                    distances: query.distances,
                    ordered: query.ordered
                  });

                  if (!this.paused) {
                    LocalCollection._diffQueryChanges(query.ordered, oldResults, query.results, query, {
                      projectionFn: query.projectionFn
                    });
                  }
                }

                return _recomputeResults;
              }();

              _proto._saveOriginal = function () {
                function _saveOriginal(id, doc) {
                  // Are we even trying to save originals?
                  if (!this._savedOriginals) {
                    return;
                  } // Have we previously mutated the original (and so 'doc' is not actually
                  // original)?  (Note the 'has' check rather than truth: we store undefined
                  // here for inserted docs!)


                  if (this._savedOriginals.has(id)) {
                    return;
                  }

                  this._savedOriginals.set(id, EJSON.clone(doc));
                }

                return _saveOriginal;
              }();

              return LocalCollection;
            }();

            LocalCollection.Cursor = Cursor;
            LocalCollection.ObserveHandle = ObserveHandle; // XXX maybe move these into another ObserveHelpers package or something
            // _CachingChangeObserver is an object which receives observeChanges callbacks
            // and keeps a cache of the current cursor state up to date in this.docs. Users
            // of this class should read the docs field but not modify it. You should pass
            // the "applyChange" field as the callbacks to the underlying observeChanges
            // call. Optionally, you can specify your own observeChanges callbacks which are
            // invoked immediately before the docs field is updated; this object is made
            // available as `this` to those callbacks.

            LocalCollection._CachingChangeObserver = function () {
              function _CachingChangeObserver() {
                var _this8 = this;

                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                var orderedFromCallbacks = options.callbacks && LocalCollection._observeChangesCallbacksAreOrdered(options.callbacks);

                if (hasOwn.call(options, 'ordered')) {
                  this.ordered = options.ordered;

                  if (options.callbacks && options.ordered !== orderedFromCallbacks) {
                    throw Error('ordered option doesn\'t match callbacks');
                  }
                } else if (options.callbacks) {
                  this.ordered = orderedFromCallbacks;
                } else {
                  throw Error('must provide ordered or callbacks');
                }

                var callbacks = options.callbacks || {};

                if (this.ordered) {
                  this.docs = new OrderedDict(MongoID.idStringify);
                  this.applyChange = {
                    addedBefore: function (id, fields, before) {
                      var doc = EJSON.clone(fields);
                      doc._id = id;

                      if (callbacks.addedBefore) {
                        callbacks.addedBefore.call(_this8, id, fields, before);
                      } // This line triggers if we provide added with movedBefore.


                      if (callbacks.added) {
                        callbacks.added.call(_this8, id, fields);
                      } // XXX could `before` be a falsy ID?  Technically
                      // idStringify seems to allow for them -- though
                      // OrderedDict won't call stringify on a falsy arg.


                      _this8.docs.putBefore(id, doc, before || null);
                    },
                    movedBefore: function (id, before) {
                      var doc = _this8.docs.get(id);

                      if (callbacks.movedBefore) {
                        callbacks.movedBefore.call(_this8, id, before);
                      }

                      _this8.docs.moveBefore(id, before || null);
                    }
                  };
                } else {
                  this.docs = new LocalCollection._IdMap();
                  this.applyChange = {
                    added: function (id, fields) {
                      var doc = EJSON.clone(fields);

                      if (callbacks.added) {
                        callbacks.added.call(_this8, id, fields);
                      }

                      doc._id = id;

                      _this8.docs.set(id, doc);
                    }
                  };
                } // The methods in _IdMap and OrderedDict used by these callbacks are
                // identical.


                this.applyChange.changed = function (id, fields) {
                  var doc = _this8.docs.get(id);

                  if (!doc) {
                    throw new Error("Unknown id for changed: " + id);
                  }

                  if (callbacks.changed) {
                    callbacks.changed.call(_this8, id, EJSON.clone(fields));
                  }

                  DiffSequence.applyChanges(doc, fields);
                };

                this.applyChange.removed = function (id) {
                  if (callbacks.removed) {
                    callbacks.removed.call(_this8, id);
                  }

                  _this8.docs.remove(id);
                };
              }

              return _CachingChangeObserver;
            }();

            LocalCollection._IdMap =
            /*#__PURE__*/
            function (_IdMap2) {
              (0, _inheritsLoose2.default)(_IdMap, _IdMap2);

              function _IdMap() {
                return _IdMap2.call(this, MongoID.idStringify, MongoID.idParse) || this;
              }

              return _IdMap;
            }(IdMap); // Wrap a transform function to return objects that have the _id field
            // of the untransformed document. This ensures that subsystems such as
            // the observe-sequence package that call `observe` can keep track of
            // the documents identities.
            //
            // - Require that it returns objects
            // - If the return value has an _id field, verify that it matches the
            //   original _id field
            // - If the return value doesn't have an _id field, add it back.


            LocalCollection.wrapTransform = function (transform) {
              if (!transform) {
                return null;
              } // No need to doubly-wrap transforms.


              if (transform.__wrappedTransform__) {
                return transform;
              }

              var wrapped = function (doc) {
                if (!hasOwn.call(doc, '_id')) {
                  // XXX do we ever have a transform on the oplog's collection? because that
                  // collection has no _id.
                  throw new Error('can only transform documents with _id');
                }

                var id = doc._id; // XXX consider making tracker a weak dependency and checking
                // Package.tracker here

                var transformed = Tracker.nonreactive(function () {
                  return transform(doc);
                });

                if (!LocalCollection._isPlainObject(transformed)) {
                  throw new Error('transform must return object');
                }

                if (hasOwn.call(transformed, '_id')) {
                  if (!EJSON.equals(transformed._id, id)) {
                    throw new Error('transformed document can\'t have different _id');
                  }
                } else {
                  transformed._id = id;
                }

                return transformed;
              };

              wrapped.__wrappedTransform__ = true;
              return wrapped;
            }; // XXX the sorted-query logic below is laughably inefficient. we'll
            // need to come up with a better datastructure for this.
            //
            // XXX the logic for observing with a skip or a limit is even more
            // laughably inefficient. we recompute the whole results every time!
            // This binary search puts a value between any equal values, and the first
            // lesser value.


            LocalCollection._binarySearch = function (cmp, array, value) {
              var first = 0;
              var range = array.length;

              while (range > 0) {
                var halfRange = Math.floor(range / 2);

                if (cmp(value, array[first + halfRange]) >= 0) {
                  first += halfRange + 1;
                  range -= halfRange + 1;
                } else {
                  range = halfRange;
                }
              }

              return first;
            };

            LocalCollection._checkSupportedProjection = function (fields) {
              if (fields !== Object(fields) || Array.isArray(fields)) {
                throw MinimongoError('fields option must be an object');
              }

              Object.keys(fields).forEach(function (keyPath) {
                if (keyPath.split('.').includes('$')) {
                  throw MinimongoError('Minimongo doesn\'t support $ operator in projections yet.');
                }

                var value = fields[keyPath];

                if ((0, _typeof2.default)(value) === 'object' && ['$elemMatch', '$meta', '$slice'].some(function (key) {
                  return hasOwn.call(value, key);
                })) {
                  throw MinimongoError('Minimongo doesn\'t support operators in projections yet.');
                }

                if (![1, 0, true, false].includes(value)) {
                  throw MinimongoError('Projection values should be one of 1, 0, true, or false');
                }
              });
            }; // Knows how to compile a fields projection to a predicate function.
            // @returns - Function: a closure that filters out an object according to the
            //            fields projection rules:
            //            @param obj - Object: MongoDB-styled document
            //            @returns - Object: a document with the fields filtered out
            //                       according to projection rules. Doesn't retain subfields
            //                       of passed argument.


            LocalCollection._compileProjection = function (fields) {
              LocalCollection._checkSupportedProjection(fields);

              var _idProjection = fields._id === undefined ? true : fields._id;

              var details = projectionDetails(fields); // returns transformed doc according to ruleTree

              var transform = function (doc, ruleTree) {
                // Special case for "sets"
                if (Array.isArray(doc)) {
                  return doc.map(function (subdoc) {
                    return transform(subdoc, ruleTree);
                  });
                }

                var result = details.including ? {} : EJSON.clone(doc);
                Object.keys(ruleTree).forEach(function (key) {
                  if (!hasOwn.call(doc, key)) {
                    return;
                  }

                  var rule = ruleTree[key];

                  if (rule === Object(rule)) {
                    // For sub-objects/subsets we branch
                    if (doc[key] === Object(doc[key])) {
                      result[key] = transform(doc[key], rule);
                    }
                  } else if (details.including) {
                    // Otherwise we don't even touch this subfield
                    result[key] = EJSON.clone(doc[key]);
                  } else {
                    delete result[key];
                  }
                });
                return result;
              };

              return function (doc) {
                var result = transform(doc, details.tree);

                if (_idProjection && hasOwn.call(doc, '_id')) {
                  result._id = doc._id;
                }

                if (!_idProjection && hasOwn.call(result, '_id')) {
                  delete result._id;
                }

                return result;
              };
            }; // Calculates the document to insert in case we're doing an upsert and the
            // selector does not match any elements


            LocalCollection._createUpsertDocument = function (selector, modifier) {
              var selectorDocument = populateDocumentWithQueryFields(selector);

              var isModify = LocalCollection._isModificationMod(modifier);

              var newDoc = {};

              if (selectorDocument._id) {
                newDoc._id = selectorDocument._id;
                delete selectorDocument._id;
              } // This double _modify call is made to help with nested properties (see issue
              // #8631). We do this even if it's a replacement for validation purposes (e.g.
              // ambiguous id's)


              LocalCollection._modify(newDoc, {
                $set: selectorDocument
              });

              LocalCollection._modify(newDoc, modifier, {
                isInsert: true
              });

              if (isModify) {
                return newDoc;
              } // Replacement can take _id from query document


              var replacement = Object.assign({}, modifier);

              if (newDoc._id) {
                replacement._id = newDoc._id;
              }

              return replacement;
            };

            LocalCollection._diffObjects = function (left, right, callbacks) {
              return DiffSequence.diffObjects(left, right, callbacks);
            }; // ordered: bool.
            // old_results and new_results: collections of documents.
            //    if ordered, they are arrays.
            //    if unordered, they are IdMaps


            LocalCollection._diffQueryChanges = function (ordered, oldResults, newResults, observer, options) {
              return DiffSequence.diffQueryChanges(ordered, oldResults, newResults, observer, options);
            };

            LocalCollection._diffQueryOrderedChanges = function (oldResults, newResults, observer, options) {
              return DiffSequence.diffQueryOrderedChanges(oldResults, newResults, observer, options);
            };

            LocalCollection._diffQueryUnorderedChanges = function (oldResults, newResults, observer, options) {
              return DiffSequence.diffQueryUnorderedChanges(oldResults, newResults, observer, options);
            };

            LocalCollection._findInOrderedResults = function (query, doc) {
              if (!query.ordered) {
                throw new Error('Can\'t call _findInOrderedResults on unordered query');
              }

              for (var i = 0; i < query.results.length; i++) {
                if (query.results[i] === doc) {
                  return i;
                }
              }

              throw Error('object missing from query');
            }; // If this is a selector which explicitly constrains the match by ID to a finite
            // number of documents, returns a list of their IDs.  Otherwise returns
            // null. Note that the selector may have other restrictions so it may not even
            // match those document!  We care about $in and $and since those are generated
            // access-controlled update and remove.


            LocalCollection._idsMatchedBySelector = function (selector) {
              // Is the selector just an ID?
              if (LocalCollection._selectorIsId(selector)) {
                return [selector];
              }

              if (!selector) {
                return null;
              } // Do we have an _id clause?


              if (hasOwn.call(selector, '_id')) {
                // Is the _id clause just an ID?
                if (LocalCollection._selectorIsId(selector._id)) {
                  return [selector._id];
                } // Is the _id clause {_id: {$in: ["x", "y", "z"]}}?


                if (selector._id && Array.isArray(selector._id.$in) && selector._id.$in.length && selector._id.$in.every(LocalCollection._selectorIsId)) {
                  return selector._id.$in;
                }

                return null;
              } // If this is a top-level $and, and any of the clauses constrain their
              // documents, then the whole selector is constrained by any one clause's
              // constraint. (Well, by their intersection, but that seems unlikely.)


              if (Array.isArray(selector.$and)) {
                for (var i = 0; i < selector.$and.length; ++i) {
                  var subIds = LocalCollection._idsMatchedBySelector(selector.$and[i]);

                  if (subIds) {
                    return subIds;
                  }
                }
              }

              return null;
            };

            LocalCollection._insertInResults = function (query, doc) {
              var fields = EJSON.clone(doc);
              delete fields._id;

              if (query.ordered) {
                if (!query.sorter) {
                  query.addedBefore(doc._id, query.projectionFn(fields), null);
                  query.results.push(doc);
                } else {
                  var i = LocalCollection._insertInSortedList(query.sorter.getComparator({
                    distances: query.distances
                  }), query.results, doc);

                  var next = query.results[i + 1];

                  if (next) {
                    next = next._id;
                  } else {
                    next = null;
                  }

                  query.addedBefore(doc._id, query.projectionFn(fields), next);
                }

                query.added(doc._id, query.projectionFn(fields));
              } else {
                query.added(doc._id, query.projectionFn(fields));
                query.results.set(doc._id, doc);
              }
            };

            LocalCollection._insertInSortedList = function (cmp, array, value) {
              if (array.length === 0) {
                array.push(value);
                return 0;
              }

              var i = LocalCollection._binarySearch(cmp, array, value);

              array.splice(i, 0, value);
              return i;
            };

            LocalCollection._isModificationMod = function (mod) {
              var isModify = false;
              var isReplace = false;
              Object.keys(mod).forEach(function (key) {
                if (key.substr(0, 1) === '$') {
                  isModify = true;
                } else {
                  isReplace = true;
                }
              });

              if (isModify && isReplace) {
                throw new Error('Update parameter cannot have both modifier and non-modifier fields.');
              }

              return isModify;
            }; // XXX maybe this should be EJSON.isObject, though EJSON doesn't know about
            // RegExp
            // XXX note that _type(undefined) === 3!!!!


            LocalCollection._isPlainObject = function (x) {
              return x && LocalCollection._f._type(x) === 3;
            }; // XXX need a strategy for passing the binding of $ into this
            // function, from the compiled selector
            //
            // maybe just {key.up.to.just.before.dollarsign: array_index}
            //
            // XXX atomicity: if one modification fails, do we roll back the whole
            // change?
            //
            // options:
            //   - isInsert is set when _modify is being called to compute the document to
            //     insert as part of an upsert operation. We use this primarily to figure
            //     out when to set the fields in $setOnInsert, if present.


            LocalCollection._modify = function (doc, modifier) {
              var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

              if (!LocalCollection._isPlainObject(modifier)) {
                throw MinimongoError('Modifier must be an object');
              } // Make sure the caller can't mutate our data structures.


              modifier = EJSON.clone(modifier);
              var isModifier = isOperatorObject(modifier);
              var newDoc = isModifier ? EJSON.clone(doc) : modifier;

              if (isModifier) {
                // apply modifiers to the doc.
                Object.keys(modifier).forEach(function (operator) {
                  // Treat $setOnInsert as $set if this is an insert.
                  var setOnInsert = options.isInsert && operator === '$setOnInsert';
                  var modFunc = MODIFIERS[setOnInsert ? '$set' : operator];
                  var operand = modifier[operator];

                  if (!modFunc) {
                    throw MinimongoError("Invalid modifier specified " + operator);
                  }

                  Object.keys(operand).forEach(function (keypath) {
                    var arg = operand[keypath];

                    if (keypath === '') {
                      throw MinimongoError('An empty update path is not valid.');
                    }

                    var keyparts = keypath.split('.');

                    if (!keyparts.every(Boolean)) {
                      throw MinimongoError("The update path '" + keypath + "' contains an empty field name, " + 'which is not allowed.');
                    }

                    var target = findModTarget(newDoc, keyparts, {
                      arrayIndices: options.arrayIndices,
                      forbidArray: operator === '$rename',
                      noCreate: NO_CREATE_MODIFIERS[operator]
                    });
                    modFunc(target, keyparts.pop(), arg, keypath, newDoc);
                  });
                });

                if (doc._id && !EJSON.equals(doc._id, newDoc._id)) {
                  throw MinimongoError("After applying the update to the document {_id: \"" + doc._id + "\", ...}," + ' the (immutable) field \'_id\' was found to have been altered to ' + ("_id: \"" + newDoc._id + "\""));
                }
              } else {
                if (doc._id && modifier._id && !EJSON.equals(doc._id, modifier._id)) {
                  throw MinimongoError("The _id field cannot be changed from {_id: \"" + doc._id + "\"} to " + ("{_id: \"" + modifier._id + "\"}"));
                } // replace the whole document


                assertHasValidFieldNames(modifier);
              } // move new document into place.


              Object.keys(doc).forEach(function (key) {
                // Note: this used to be for (var key in doc) however, this does not
                // work right in Opera. Deleting from a doc while iterating over it
                // would sometimes cause opera to skip some keys.
                if (key !== '_id') {
                  delete doc[key];
                }
              });
              Object.keys(newDoc).forEach(function (key) {
                doc[key] = newDoc[key];
              });
            };

            LocalCollection._observeFromObserveChanges = function (cursor, observeCallbacks) {
              var transform = cursor.getTransform() || function (doc) {
                return doc;
              };

              var suppressed = !!observeCallbacks._suppress_initial;
              var observeChangesCallbacks;

              if (LocalCollection._observeCallbacksAreOrdered(observeCallbacks)) {
                // The "_no_indices" option sets all index arguments to -1 and skips the
                // linear scans required to generate them.  This lets observers that don't
                // need absolute indices benefit from the other features of this API --
                // relative order, transforms, and applyChanges -- without the speed hit.
                var indices = !observeCallbacks._no_indices;
                observeChangesCallbacks = {
                  addedBefore: function (id, fields, before) {
                    if (suppressed || !(observeCallbacks.addedAt || observeCallbacks.added)) {
                      return;
                    }

                    var doc = transform(Object.assign(fields, {
                      _id: id
                    }));

                    if (observeCallbacks.addedAt) {
                      observeCallbacks.addedAt(doc, indices ? before ? this.docs.indexOf(before) : this.docs.size() : -1, before);
                    } else {
                      observeCallbacks.added(doc);
                    }
                  },
                  changed: function (id, fields) {
                    if (!(observeCallbacks.changedAt || observeCallbacks.changed)) {
                      return;
                    }

                    var doc = EJSON.clone(this.docs.get(id));

                    if (!doc) {
                      throw new Error("Unknown id for changed: " + id);
                    }

                    var oldDoc = transform(EJSON.clone(doc));
                    DiffSequence.applyChanges(doc, fields);

                    if (observeCallbacks.changedAt) {
                      observeCallbacks.changedAt(transform(doc), oldDoc, indices ? this.docs.indexOf(id) : -1);
                    } else {
                      observeCallbacks.changed(transform(doc), oldDoc);
                    }
                  },
                  movedBefore: function (id, before) {
                    if (!observeCallbacks.movedTo) {
                      return;
                    }

                    var from = indices ? this.docs.indexOf(id) : -1;
                    var to = indices ? before ? this.docs.indexOf(before) : this.docs.size() : -1; // When not moving backwards, adjust for the fact that removing the
                    // document slides everything back one slot.

                    if (to > from) {
                      --to;
                    }

                    observeCallbacks.movedTo(transform(EJSON.clone(this.docs.get(id))), from, to, before || null);
                  },
                  removed: function (id) {
                    if (!(observeCallbacks.removedAt || observeCallbacks.removed)) {
                      return;
                    } // technically maybe there should be an EJSON.clone here, but it's about
                    // to be removed from this.docs!


                    var doc = transform(this.docs.get(id));

                    if (observeCallbacks.removedAt) {
                      observeCallbacks.removedAt(doc, indices ? this.docs.indexOf(id) : -1);
                    } else {
                      observeCallbacks.removed(doc);
                    }
                  }
                };
              } else {
                observeChangesCallbacks = {
                  added: function (id, fields) {
                    if (!suppressed && observeCallbacks.added) {
                      observeCallbacks.added(transform(Object.assign(fields, {
                        _id: id
                      })));
                    }
                  },
                  changed: function (id, fields) {
                    if (observeCallbacks.changed) {
                      var oldDoc = this.docs.get(id);
                      var doc = EJSON.clone(oldDoc);
                      DiffSequence.applyChanges(doc, fields);
                      observeCallbacks.changed(transform(doc), transform(EJSON.clone(oldDoc)));
                    }
                  },
                  removed: function (id) {
                    if (observeCallbacks.removed) {
                      observeCallbacks.removed(transform(this.docs.get(id)));
                    }
                  }
                };
              }

              var changeObserver = new LocalCollection._CachingChangeObserver({
                callbacks: observeChangesCallbacks
              });
              var handle = cursor.observeChanges(changeObserver.applyChange);
              suppressed = false;
              return handle;
            };

            LocalCollection._observeCallbacksAreOrdered = function (callbacks) {
              if (callbacks.added && callbacks.addedAt) {
                throw new Error('Please specify only one of added() and addedAt()');
              }

              if (callbacks.changed && callbacks.changedAt) {
                throw new Error('Please specify only one of changed() and changedAt()');
              }

              if (callbacks.removed && callbacks.removedAt) {
                throw new Error('Please specify only one of removed() and removedAt()');
              }

              return !!(callbacks.addedAt || callbacks.changedAt || callbacks.movedTo || callbacks.removedAt);
            };

            LocalCollection._observeChangesCallbacksAreOrdered = function (callbacks) {
              if (callbacks.added && callbacks.addedBefore) {
                throw new Error('Please specify only one of added() and addedBefore()');
              }

              return !!(callbacks.addedBefore || callbacks.movedBefore);
            };

            LocalCollection._removeFromResults = function (query, doc) {
              if (query.ordered) {
                var i = LocalCollection._findInOrderedResults(query, doc);

                query.removed(doc._id);
                query.results.splice(i, 1);
              } else {
                var id = doc._id; // in case callback mutates doc

                query.removed(doc._id);
                query.results.remove(id);
              }
            }; // Is this selector just shorthand for lookup by _id?


            LocalCollection._selectorIsId = function (selector) {
              return typeof selector === 'number' || typeof selector === 'string' || selector instanceof MongoID.ObjectID;
            }; // Is the selector just lookup by _id (shorthand or not)?


            LocalCollection._selectorIsIdPerhapsAsObject = function (selector) {
              return LocalCollection._selectorIsId(selector) || LocalCollection._selectorIsId(selector && selector._id) && Object.keys(selector).length === 1;
            };

            LocalCollection._updateInResults = function (query, doc, old_doc) {
              if (!EJSON.equals(doc._id, old_doc._id)) {
                throw new Error('Can\'t change a doc\'s _id while updating');
              }

              var projectionFn = query.projectionFn;
              var changedFields = DiffSequence.makeChangedFields(projectionFn(doc), projectionFn(old_doc));

              if (!query.ordered) {
                if (Object.keys(changedFields).length) {
                  query.changed(doc._id, changedFields);
                  query.results.set(doc._id, doc);
                }

                return;
              }

              var old_idx = LocalCollection._findInOrderedResults(query, doc);

              if (Object.keys(changedFields).length) {
                query.changed(doc._id, changedFields);
              }

              if (!query.sorter) {
                return;
              } // just take it out and put it back in again, and see if the index changes


              query.results.splice(old_idx, 1);

              var new_idx = LocalCollection._insertInSortedList(query.sorter.getComparator({
                distances: query.distances
              }), query.results, doc);

              if (old_idx !== new_idx) {
                var next = query.results[new_idx + 1];

                if (next) {
                  next = next._id;
                } else {
                  next = null;
                }

                query.movedBefore && query.movedBefore(doc._id, next);
              }
            };

            var MODIFIERS = {
              $currentDate: function (target, field, arg) {
                if ((0, _typeof2.default)(arg) === 'object' && hasOwn.call(arg, '$type')) {
                  if (arg.$type !== 'date') {
                    throw MinimongoError('Minimongo does currently only support the date type in ' + '$currentDate modifiers', {
                      field: field
                    });
                  }
                } else if (arg !== true) {
                  throw MinimongoError('Invalid $currentDate modifier', {
                    field: field
                  });
                }

                target[field] = new Date();
              },
              $min: function (target, field, arg) {
                if (typeof arg !== 'number') {
                  throw MinimongoError('Modifier $min allowed for numbers only', {
                    field: field
                  });
                }

                if (field in target) {
                  if (typeof target[field] !== 'number') {
                    throw MinimongoError('Cannot apply $min modifier to non-number', {
                      field: field
                    });
                  }

                  if (target[field] > arg) {
                    target[field] = arg;
                  }
                } else {
                  target[field] = arg;
                }
              },
              $max: function (target, field, arg) {
                if (typeof arg !== 'number') {
                  throw MinimongoError('Modifier $max allowed for numbers only', {
                    field: field
                  });
                }

                if (field in target) {
                  if (typeof target[field] !== 'number') {
                    throw MinimongoError('Cannot apply $max modifier to non-number', {
                      field: field
                    });
                  }

                  if (target[field] < arg) {
                    target[field] = arg;
                  }
                } else {
                  target[field] = arg;
                }
              },
              $inc: function (target, field, arg) {
                if (typeof arg !== 'number') {
                  throw MinimongoError('Modifier $inc allowed for numbers only', {
                    field: field
                  });
                }

                if (field in target) {
                  if (typeof target[field] !== 'number') {
                    throw MinimongoError('Cannot apply $inc modifier to non-number', {
                      field: field
                    });
                  }

                  target[field] += arg;
                } else {
                  target[field] = arg;
                }
              },
              $set: function (target, field, arg) {
                if (target !== Object(target)) {
                  // not an array or an object
                  var error = MinimongoError('Cannot set property on non-object field', {
                    field: field
                  });
                  error.setPropertyError = true;
                  throw error;
                }

                if (target === null) {
                  var _error = MinimongoError('Cannot set property on null', {
                    field: field
                  });

                  _error.setPropertyError = true;
                  throw _error;
                }

                assertHasValidFieldNames(arg);
                target[field] = arg;
              },
              $setOnInsert: function (target, field, arg) {// converted to `$set` in `_modify`
              },
              $unset: function (target, field, arg) {
                if (target !== undefined) {
                  if (target instanceof Array) {
                    if (field in target) {
                      target[field] = null;
                    }
                  } else {
                    delete target[field];
                  }
                }
              },
              $push: function (target, field, arg) {
                if (target[field] === undefined) {
                  target[field] = [];
                }

                if (!(target[field] instanceof Array)) {
                  throw MinimongoError('Cannot apply $push modifier to non-array', {
                    field: field
                  });
                }

                if (!(arg && arg.$each)) {
                  // Simple mode: not $each
                  assertHasValidFieldNames(arg);
                  target[field].push(arg);
                  return;
                } // Fancy mode: $each (and maybe $slice and $sort and $position)


                var toPush = arg.$each;

                if (!(toPush instanceof Array)) {
                  throw MinimongoError('$each must be an array', {
                    field: field
                  });
                }

                assertHasValidFieldNames(toPush); // Parse $position

                var position = undefined;

                if ('$position' in arg) {
                  if (typeof arg.$position !== 'number') {
                    throw MinimongoError('$position must be a numeric value', {
                      field: field
                    });
                  } // XXX should check to make sure integer


                  if (arg.$position < 0) {
                    throw MinimongoError('$position in $push must be zero or positive', {
                      field: field
                    });
                  }

                  position = arg.$position;
                } // Parse $slice.


                var slice = undefined;

                if ('$slice' in arg) {
                  if (typeof arg.$slice !== 'number') {
                    throw MinimongoError('$slice must be a numeric value', {
                      field: field
                    });
                  } // XXX should check to make sure integer


                  slice = arg.$slice;
                } // Parse $sort.


                var sortFunction = undefined;

                if (arg.$sort) {
                  if (slice === undefined) {
                    throw MinimongoError('$sort requires $slice to be present', {
                      field: field
                    });
                  } // XXX this allows us to use a $sort whose value is an array, but that's
                  // actually an extension of the Node driver, so it won't work
                  // server-side. Could be confusing!
                  // XXX is it correct that we don't do geo-stuff here?


                  sortFunction = new Minimongo.Sorter(arg.$sort).getComparator();
                  toPush.forEach(function (element) {
                    if (LocalCollection._f._type(element) !== 3) {
                      throw MinimongoError('$push like modifiers using $sort require all elements to be ' + 'objects', {
                        field: field
                      });
                    }
                  });
                } // Actually push.


                if (position === undefined) {
                  toPush.forEach(function (element) {
                    target[field].push(element);
                  });
                } else {
                  var _target$field;

                  var spliceArguments = [position, 0];
                  toPush.forEach(function (element) {
                    spliceArguments.push(element);
                  });

                  (_target$field = target[field]).splice.apply(_target$field, spliceArguments);
                } // Actually sort.


                if (sortFunction) {
                  target[field].sort(sortFunction);
                } // Actually slice.


                if (slice !== undefined) {
                  if (slice === 0) {
                    target[field] = []; // differs from Array.slice!
                  } else if (slice < 0) {
                    target[field] = target[field].slice(slice);
                  } else {
                    target[field] = target[field].slice(0, slice);
                  }
                }
              },
              $pushAll: function (target, field, arg) {
                if (!((0, _typeof2.default)(arg) === 'object' && arg instanceof Array)) {
                  throw MinimongoError('Modifier $pushAll/pullAll allowed for arrays only');
                }

                assertHasValidFieldNames(arg);
                var toPush = target[field];

                if (toPush === undefined) {
                  target[field] = arg;
                } else if (!(toPush instanceof Array)) {
                  throw MinimongoError('Cannot apply $pushAll modifier to non-array', {
                    field: field
                  });
                } else {
                  toPush.push.apply(toPush, (0, _toConsumableArray2.default)(arg));
                }
              },
              $addToSet: function (target, field, arg) {
                var isEach = false;

                if ((0, _typeof2.default)(arg) === 'object') {
                  // check if first key is '$each'
                  var keys = Object.keys(arg);

                  if (keys[0] === '$each') {
                    isEach = true;
                  }
                }

                var values = isEach ? arg.$each : [arg];
                assertHasValidFieldNames(values);
                var toAdd = target[field];

                if (toAdd === undefined) {
                  target[field] = values;
                } else if (!(toAdd instanceof Array)) {
                  throw MinimongoError('Cannot apply $addToSet modifier to non-array', {
                    field: field
                  });
                } else {
                  values.forEach(function (value) {
                    if (toAdd.some(function (element) {
                      return LocalCollection._f._equal(value, element);
                    })) {
                      return;
                    }

                    toAdd.push(value);
                  });
                }
              },
              $pop: function (target, field, arg) {
                if (target === undefined) {
                  return;
                }

                var toPop = target[field];

                if (toPop === undefined) {
                  return;
                }

                if (!(toPop instanceof Array)) {
                  throw MinimongoError('Cannot apply $pop modifier to non-array', {
                    field: field
                  });
                }

                if (typeof arg === 'number' && arg < 0) {
                  toPop.splice(0, 1);
                } else {
                  toPop.pop();
                }
              },
              $pull: function (target, field, arg) {
                if (target === undefined) {
                  return;
                }

                var toPull = target[field];

                if (toPull === undefined) {
                  return;
                }

                if (!(toPull instanceof Array)) {
                  throw MinimongoError('Cannot apply $pull/pullAll modifier to non-array', {
                    field: field
                  });
                }

                var out;

                if (arg != null && (0, _typeof2.default)(arg) === 'object' && !(arg instanceof Array)) {
                  // XXX would be much nicer to compile this once, rather than
                  // for each document we modify.. but usually we're not
                  // modifying that many documents, so we'll let it slide for
                  // now
                  // XXX Minimongo.Matcher isn't up for the job, because we need
                  // to permit stuff like {$pull: {a: {$gt: 4}}}.. something
                  // like {$gt: 4} is not normally a complete selector.
                  // same issue as $elemMatch possibly?
                  var matcher = new Minimongo.Matcher(arg);
                  out = toPull.filter(function (element) {
                    return !matcher.documentMatches(element).result;
                  });
                } else {
                  out = toPull.filter(function (element) {
                    return !LocalCollection._f._equal(element, arg);
                  });
                }

                target[field] = out;
              },
              $pullAll: function (target, field, arg) {
                if (!((0, _typeof2.default)(arg) === 'object' && arg instanceof Array)) {
                  throw MinimongoError('Modifier $pushAll/pullAll allowed for arrays only', {
                    field: field
                  });
                }

                if (target === undefined) {
                  return;
                }

                var toPull = target[field];

                if (toPull === undefined) {
                  return;
                }

                if (!(toPull instanceof Array)) {
                  throw MinimongoError('Cannot apply $pull/pullAll modifier to non-array', {
                    field: field
                  });
                }

                target[field] = toPull.filter(function (object) {
                  return !arg.some(function (element) {
                    return LocalCollection._f._equal(object, element);
                  });
                });
              },
              $rename: function (target, field, arg, keypath, doc) {
                // no idea why mongo has this restriction..
                if (keypath === arg) {
                  throw MinimongoError('$rename source must differ from target', {
                    field: field
                  });
                }

                if (target === null) {
                  throw MinimongoError('$rename source field invalid', {
                    field: field
                  });
                }

                if (typeof arg !== 'string') {
                  throw MinimongoError('$rename target must be a string', {
                    field: field
                  });
                }

                if (arg.includes('\0')) {
                  // Null bytes are not allowed in Mongo field names
                  // https://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names
                  throw MinimongoError('The \'to\' field for $rename cannot contain an embedded null byte', {
                    field: field
                  });
                }

                if (target === undefined) {
                  return;
                }

                var object = target[field];
                delete target[field];
                var keyparts = arg.split('.');
                var target2 = findModTarget(doc, keyparts, {
                  forbidArray: true
                });

                if (target2 === null) {
                  throw MinimongoError('$rename target field invalid', {
                    field: field
                  });
                }

                target2[keyparts.pop()] = object;
              },
              $bit: function (target, field, arg) {
                // XXX mongo only supports $bit on integers, and we only support
                // native javascript numbers (doubles) so far, so we can't support $bit
                throw MinimongoError('$bit is not supported', {
                  field: field
                });
              },
              $v: function () {// As discussed in https://github.com/meteor/meteor/issues/9623,
                // the `$v` operator is not needed by Meteor, but problems can occur if
                // it's not at least callable (as of Mongo >= 3.6). It's defined here as
                // a no-op to work around these problems.
              }
            };
            var NO_CREATE_MODIFIERS = {
              $pop: true,
              $pull: true,
              $pullAll: true,
              $rename: true,
              $unset: true
            }; // Make sure field names do not contain Mongo restricted
            // characters ('.', '$', '\0').
            // https://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names

            var invalidCharMsg = {
              $: 'start with \'$\'',
              '.': 'contain \'.\'',
              '\0': 'contain null bytes'
            }; // checks if all field names in an object are valid

            function assertHasValidFieldNames(doc) {
              if (doc && (0, _typeof2.default)(doc) === 'object') {
                JSON.stringify(doc, function (key, value) {
                  assertIsValidFieldName(key);
                  return value;
                });
              }
            }

            function assertIsValidFieldName(key) {
              var match;

              if (typeof key === 'string' && (match = key.match(/^\$|\.|\0/))) {
                throw MinimongoError("Key " + key + " must not " + invalidCharMsg[match[0]]);
              }
            } // for a.b.c.2.d.e, keyparts should be ['a', 'b', 'c', '2', 'd', 'e'],
            // and then you would operate on the 'e' property of the returned
            // object.
            //
            // if options.noCreate is falsey, creates intermediate levels of
            // structure as necessary, like mkdir -p (and raises an exception if
            // that would mean giving a non-numeric property to an array.) if
            // options.noCreate is true, return undefined instead.
            //
            // may modify the last element of keyparts to signal to the caller that it needs
            // to use a different value to index into the returned object (for example,
            // ['a', '01'] -> ['a', 1]).
            //
            // if forbidArray is true, return null if the keypath goes through an array.
            //
            // if options.arrayIndices is set, use its first element for the (first) '$' in
            // the path.


            function findModTarget(doc, keyparts) {
              var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
              var usedArrayIndex = false;

              for (var i = 0; i < keyparts.length; i++) {
                var last = i === keyparts.length - 1;
                var keypart = keyparts[i];

                if (!isIndexable(doc)) {
                  if (options.noCreate) {
                    return undefined;
                  }

                  var error = MinimongoError("cannot use the part '" + keypart + "' to traverse " + doc);
                  error.setPropertyError = true;
                  throw error;
                }

                if (doc instanceof Array) {
                  if (options.forbidArray) {
                    return null;
                  }

                  if (keypart === '$') {
                    if (usedArrayIndex) {
                      throw MinimongoError('Too many positional (i.e. \'$\') elements');
                    }

                    if (!options.arrayIndices || !options.arrayIndices.length) {
                      throw MinimongoError('The positional operator did not find the match needed from the ' + 'query');
                    }

                    keypart = options.arrayIndices[0];
                    usedArrayIndex = true;
                  } else if (isNumericKey(keypart)) {
                    keypart = parseInt(keypart);
                  } else {
                    if (options.noCreate) {
                      return undefined;
                    }

                    throw MinimongoError("can't append to array using string field name [" + keypart + "]");
                  }

                  if (last) {
                    keyparts[i] = keypart; // handle 'a.01'
                  }

                  if (options.noCreate && keypart >= doc.length) {
                    return undefined;
                  }

                  while (doc.length < keypart) {
                    doc.push(null);
                  }

                  if (!last) {
                    if (doc.length === keypart) {
                      doc.push({});
                    } else if ((0, _typeof2.default)(doc[keypart]) !== 'object') {
                      throw MinimongoError("can't modify field '" + keyparts[i + 1] + "' of list value " + JSON.stringify(doc[keypart]));
                    }
                  }
                } else {
                  assertIsValidFieldName(keypart);

                  if (!(keypart in doc)) {
                    if (options.noCreate) {
                      return undefined;
                    }

                    if (!last) {
                      doc[keypart] = {};
                    }
                  }
                }

                if (last) {
                  return doc;
                }

                doc = doc[keypart];
              } // notreached
            }
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "matcher.js": function (_require6, _exports6, _module5) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/minimongo/matcher.js                                                                                       //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module5.export({
              "default": function () {
                return Matcher;
              }
            });
            var LocalCollection;
            _module5.watch(_require6("./local_collection.js"), {
              "default": function (v) {
                LocalCollection = v;
              }
            }, 0);
            var compileDocumentSelector, hasOwn, nothingMatcher;
            _module5.watch(_require6("./common.js"), {
              compileDocumentSelector: function (v) {
                compileDocumentSelector = v;
              },
              hasOwn: function (v) {
                hasOwn = v;
              },
              nothingMatcher: function (v) {
                nothingMatcher = v;
              }
            }, 1);

            var Matcher =
            /*#__PURE__*/
            function () {
              function Matcher(selector, isUpdate) {
                // A set (object mapping string -> *) of all of the document paths looked
                // at by the selector. Also includes the empty string if it may look at any
                // path (eg, $where).
                this._paths = {}; // Set to true if compilation finds a $near.

                this._hasGeoQuery = false; // Set to true if compilation finds a $where.

                this._hasWhere = false; // Set to false if compilation finds anything other than a simple equality
                // or one or more of '$gt', '$gte', '$lt', '$lte', '$ne', '$in', '$nin' used
                // with scalars as operands.

                this._isSimple = true; // Set to a dummy document which always matches this Matcher. Or set to null
                // if such document is too hard to find.

                this._matchingDocument = undefined; // A clone of the original selector. It may just be a function if the user
                // passed in a function; otherwise is definitely an object (eg, IDs are
                // translated into {_id: ID} first. Used by canBecomeTrueByModifier and
                // Sorter._useWithMatcher.

                this._selector = null;
                this._docMatcher = this._compileSelector(selector); // Set to true if selection is done for an update operation
                // Default is false
                // Used for $near array update (issue #3599)

                this._isUpdate = isUpdate;
              }

              var _proto = Matcher.prototype;

              _proto.documentMatches = function () {
                function documentMatches(doc) {
                  if (doc !== Object(doc)) {
                    throw Error('documentMatches needs a document');
                  }

                  return this._docMatcher(doc);
                }

                return documentMatches;
              }();

              _proto.hasGeoQuery = function () {
                function hasGeoQuery() {
                  return this._hasGeoQuery;
                }

                return hasGeoQuery;
              }();

              _proto.hasWhere = function () {
                function hasWhere() {
                  return this._hasWhere;
                }

                return hasWhere;
              }();

              _proto.isSimple = function () {
                function isSimple() {
                  return this._isSimple;
                }

                return isSimple;
              }(); // Given a selector, return a function that takes one argument, a
              // document. It returns a result object.


              _proto._compileSelector = function () {
                function _compileSelector(selector) {
                  // you can pass a literal function instead of a selector
                  if (selector instanceof Function) {
                    this._isSimple = false;
                    this._selector = selector;

                    this._recordPathUsed('');

                    return function (doc) {
                      return {
                        result: !!selector.call(doc)
                      };
                    };
                  } // shorthand -- scalar _id


                  if (LocalCollection._selectorIsId(selector)) {
                    this._selector = {
                      _id: selector
                    };

                    this._recordPathUsed('_id');

                    return function (doc) {
                      return {
                        result: EJSON.equals(doc._id, selector)
                      };
                    };
                  } // protect against dangerous selectors.  falsey and {_id: falsey} are both
                  // likely programmer error, and not what you want, particularly for
                  // destructive operations.


                  if (!selector || hasOwn.call(selector, '_id') && !selector._id) {
                    this._isSimple = false;
                    return nothingMatcher;
                  } // Top level can't be an array or true or binary.


                  if (Array.isArray(selector) || EJSON.isBinary(selector) || typeof selector === 'boolean') {
                    throw new Error("Invalid selector: " + selector);
                  }

                  this._selector = EJSON.clone(selector);
                  return compileDocumentSelector(selector, this, {
                    isRoot: true
                  });
                }

                return _compileSelector;
              }(); // Returns a list of key paths the given selector is looking for. It includes
              // the empty string if there is a $where.


              _proto._getPaths = function () {
                function _getPaths() {
                  return Object.keys(this._paths);
                }

                return _getPaths;
              }();

              _proto._recordPathUsed = function () {
                function _recordPathUsed(path) {
                  this._paths[path] = true;
                }

                return _recordPathUsed;
              }();

              return Matcher;
            }();

            // helpers used by compiled selector code
            LocalCollection._f = {
              // XXX for _all and _in, consider building 'inquery' at compile time..
              _type: function (v) {
                if (typeof v === 'number') {
                  return 1;
                }

                if (typeof v === 'string') {
                  return 2;
                }

                if (typeof v === 'boolean') {
                  return 8;
                }

                if (Array.isArray(v)) {
                  return 4;
                }

                if (v === null) {
                  return 10;
                } // note that typeof(/x/) === "object"


                if (v instanceof RegExp) {
                  return 11;
                }

                if (typeof v === 'function') {
                  return 13;
                }

                if (v instanceof Date) {
                  return 9;
                }

                if (EJSON.isBinary(v)) {
                  return 5;
                }

                if (v instanceof MongoID.ObjectID) {
                  return 7;
                } // object


                return 3; // XXX support some/all of these:
                // 14, symbol
                // 15, javascript code with scope
                // 16, 18: 32-bit/64-bit integer
                // 17, timestamp
                // 255, minkey
                // 127, maxkey
              },
              // deep equality test: use for literal document and array matches
              _equal: function (a, b) {
                return EJSON.equals(a, b, {
                  keyOrderSensitive: true
                });
              },
              // maps a type code to a value that can be used to sort values of different
              // types
              _typeorder: function (t) {
                // http://www.mongodb.org/display/DOCS/What+is+the+Compare+Order+for+BSON+Types
                // XXX what is the correct sort position for Javascript code?
                // ('100' in the matrix below)
                // XXX minkey/maxkey
                return [-1, // (not a type)
                1, // number
                2, // string
                3, // object
                4, // array
                5, // binary
                -1, // deprecated
                6, // ObjectID
                7, // bool
                8, // Date
                0, // null
                9, // RegExp
                -1, // deprecated
                100, // JS code
                2, // deprecated (symbol)
                100, // JS code
                1, // 32-bit int
                8, // Mongo timestamp
                1 // 64-bit int
                ][t];
              },
              // compare two values of unknown type according to BSON ordering
              // semantics. (as an extension, consider 'undefined' to be less than
              // any other value.) return negative if a is less, positive if b is
              // less, or 0 if equal
              _cmp: function (a, b) {
                if (a === undefined) {
                  return b === undefined ? 0 : -1;
                }

                if (b === undefined) {
                  return 1;
                }

                var ta = LocalCollection._f._type(a);

                var tb = LocalCollection._f._type(b);

                var oa = LocalCollection._f._typeorder(ta);

                var ob = LocalCollection._f._typeorder(tb);

                if (oa !== ob) {
                  return oa < ob ? -1 : 1;
                } // XXX need to implement this if we implement Symbol or integers, or
                // Timestamp


                if (ta !== tb) {
                  throw Error('Missing type coercion logic in _cmp');
                }

                if (ta === 7) {
                  // ObjectID
                  // Convert to string.
                  ta = tb = 2;
                  a = a.toHexString();
                  b = b.toHexString();
                }

                if (ta === 9) {
                  // Date
                  // Convert to millis.
                  ta = tb = 1;
                  a = a.getTime();
                  b = b.getTime();
                }

                if (ta === 1) // double
                  return a - b;
                if (tb === 2) // string
                  return a < b ? -1 : a === b ? 0 : 1;

                if (ta === 3) {
                  // Object
                  // this could be much more efficient in the expected case ...
                  var toArray = function (object) {
                    var result = [];
                    Object.keys(object).forEach(function (key) {
                      result.push(key, object[key]);
                    });
                    return result;
                  };

                  return LocalCollection._f._cmp(toArray(a), toArray(b));
                }

                if (ta === 4) {
                  // Array
                  for (var i = 0;; i++) {
                    if (i === a.length) {
                      return i === b.length ? 0 : -1;
                    }

                    if (i === b.length) {
                      return 1;
                    }

                    var s = LocalCollection._f._cmp(a[i], b[i]);

                    if (s !== 0) {
                      return s;
                    }
                  }
                }

                if (ta === 5) {
                  // binary
                  // Surprisingly, a small binary blob is always less than a large one in
                  // Mongo.
                  if (a.length !== b.length) {
                    return a.length - b.length;
                  }

                  for (var _i = 0; _i < a.length; _i++) {
                    if (a[_i] < b[_i]) {
                      return -1;
                    }

                    if (a[_i] > b[_i]) {
                      return 1;
                    }
                  }

                  return 0;
                }

                if (ta === 8) {
                  // boolean
                  if (a) {
                    return b ? 0 : 1;
                  }

                  return b ? -1 : 0;
                }

                if (ta === 10) // null
                  return 0;
                if (ta === 11) // regexp
                  throw Error('Sorting not supported on regular expression'); // XXX
                // 13: javascript code
                // 14: symbol
                // 15: javascript code with scope
                // 16: 32-bit integer
                // 17: timestamp
                // 18: 64-bit integer
                // 255: minkey
                // 127: maxkey

                if (ta === 13) // javascript code
                  throw Error('Sorting not supported on Javascript code'); // XXX

                throw Error('Unknown type to sort');
              }
            };
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "minimongo_common.js": function (_require7, _exports7, _module6) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/minimongo/minimongo_common.js                                                                              //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var LocalCollection_;
            _module6.watch(_require7("./local_collection.js"), {
              "default": function (v) {
                LocalCollection_ = v;
              }
            }, 0);
            var Matcher;
            _module6.watch(_require7("./matcher.js"), {
              "default": function (v) {
                Matcher = v;
              }
            }, 1);
            var Sorter;
            _module6.watch(_require7("./sorter.js"), {
              "default": function (v) {
                Sorter = v;
              }
            }, 2);
            LocalCollection = LocalCollection_;
            Minimongo = {
              LocalCollection: LocalCollection_,
              Matcher: Matcher,
              Sorter: Sorter
            };
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "observe_handle.js": function (_require8, _exports8, _module7) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/minimongo/observe_handle.js                                                                                //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module7.export({
              "default": function () {
                return ObserveHandle;
              }
            });

            var ObserveHandle = function () {
              function ObserveHandle() {}

              return ObserveHandle;
            }();
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "sorter.js": function (_require9, _exports9, _module8) {

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                     //
            // packages/minimongo/sorter.js                                                                                        //
            //                                                                                                                     //
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require9("@babel/runtime/helpers/interopRequireDefault");

            var _typeof2 = _interopRequireDefault(_require9("@babel/runtime/helpers/typeof"));

            _module8.export({
              "default": function () {
                return Sorter;
              }
            });
            var ELEMENT_OPERATORS, equalityElementMatcher, expandArraysInBranches, hasOwn, isOperatorObject, makeLookupFunction, regexpElementMatcher;
            _module8.watch(_require9("./common.js"), {
              ELEMENT_OPERATORS: function (v) {
                ELEMENT_OPERATORS = v;
              },
              equalityElementMatcher: function (v) {
                equalityElementMatcher = v;
              },
              expandArraysInBranches: function (v) {
                expandArraysInBranches = v;
              },
              hasOwn: function (v) {
                hasOwn = v;
              },
              isOperatorObject: function (v) {
                isOperatorObject = v;
              },
              makeLookupFunction: function (v) {
                makeLookupFunction = v;
              },
              regexpElementMatcher: function (v) {
                regexpElementMatcher = v;
              }
            }, 0);

            var Sorter =
            /*#__PURE__*/
            function () {
              function Sorter(spec) {
                var _this = this;

                this._sortSpecParts = [];
                this._sortFunction = null;

                var addSpecPart = function (path, ascending) {
                  if (!path) {
                    throw Error('sort keys must be non-empty');
                  }

                  if (path.charAt(0) === '$') {
                    throw Error("unsupported sort key: " + path);
                  }

                  _this._sortSpecParts.push({
                    ascending: ascending,
                    lookup: makeLookupFunction(path, {
                      forSort: true
                    }),
                    path: path
                  });
                };

                if (spec instanceof Array) {
                  spec.forEach(function (element) {
                    if (typeof element === 'string') {
                      addSpecPart(element, true);
                    } else {
                      addSpecPart(element[0], element[1] !== 'desc');
                    }
                  });
                } else if ((0, _typeof2.default)(spec) === 'object') {
                  Object.keys(spec).forEach(function (key) {
                    addSpecPart(key, spec[key] >= 0);
                  });
                } else if (typeof spec === 'function') {
                  this._sortFunction = spec;
                } else {
                  throw Error("Bad sort specification: " + JSON.stringify(spec));
                } // If a function is specified for sorting, we skip the rest.


                if (this._sortFunction) {
                  return;
                } // To implement affectedByModifier, we piggy-back on top of Matcher's
                // affectedByModifier code; we create a selector that is affected by the
                // same modifiers as this sort order. This is only implemented on the
                // server.


                if (this.affectedByModifier) {
                  var selector = {};

                  this._sortSpecParts.forEach(function (spec) {
                    selector[spec.path] = 1;
                  });

                  this._selectorForAffectedByModifier = new Minimongo.Matcher(selector);
                }

                this._keyComparator = composeComparators(this._sortSpecParts.map(function (spec, i) {
                  return _this._keyFieldComparator(i);
                }));
              }

              var _proto = Sorter.prototype;

              _proto.getComparator = function () {
                function getComparator(options) {
                  // If sort is specified or have no distances, just use the comparator from
                  // the source specification (which defaults to "everything is equal".
                  // issue #3599
                  // https://docs.mongodb.com/manual/reference/operator/query/near/#sort-operation
                  // sort effectively overrides $near
                  if (this._sortSpecParts.length || !options || !options.distances) {
                    return this._getBaseComparator();
                  }

                  var distances = options.distances; // Return a comparator which compares using $near distances.

                  return function (a, b) {
                    if (!distances.has(a._id)) {
                      throw Error("Missing distance for " + a._id);
                    }

                    if (!distances.has(b._id)) {
                      throw Error("Missing distance for " + b._id);
                    }

                    return distances.get(a._id) - distances.get(b._id);
                  };
                }

                return getComparator;
              }(); // Takes in two keys: arrays whose lengths match the number of spec
              // parts. Returns negative, 0, or positive based on using the sort spec to
              // compare fields.


              _proto._compareKeys = function () {
                function _compareKeys(key1, key2) {
                  if (key1.length !== this._sortSpecParts.length || key2.length !== this._sortSpecParts.length) {
                    throw Error('Key has wrong length');
                  }

                  return this._keyComparator(key1, key2);
                }

                return _compareKeys;
              }(); // Iterates over each possible "key" from doc (ie, over each branch), calling
              // 'cb' with the key.


              _proto._generateKeysFromDoc = function () {
                function _generateKeysFromDoc(doc, cb) {
                  if (this._sortSpecParts.length === 0) {
                    throw new Error('can\'t generate keys without a spec');
                  }

                  var pathFromIndices = function (indices) {
                    return indices.join(',') + ",";
                  };

                  var knownPaths = null; // maps index -> ({'' -> value} or {path -> value})

                  var valuesByIndexAndPath = this._sortSpecParts.map(function (spec) {
                    // Expand any leaf arrays that we find, and ignore those arrays
                    // themselves.  (We never sort based on an array itself.)
                    var branches = expandArraysInBranches(spec.lookup(doc), true); // If there are no values for a key (eg, key goes to an empty array),
                    // pretend we found one undefined value.

                    if (!branches.length) {
                      branches = [{
                        value: void 0
                      }];
                    }

                    var element = Object.create(null);
                    var usedPaths = false;
                    branches.forEach(function (branch) {
                      if (!branch.arrayIndices) {
                        // If there are no array indices for a branch, then it must be the
                        // only branch, because the only thing that produces multiple branches
                        // is the use of arrays.
                        if (branches.length > 1) {
                          throw Error('multiple branches but no array used?');
                        }

                        element[''] = branch.value;
                        return;
                      }

                      usedPaths = true;
                      var path = pathFromIndices(branch.arrayIndices);

                      if (hasOwn.call(element, path)) {
                        throw Error("duplicate path: " + path);
                      }

                      element[path] = branch.value; // If two sort fields both go into arrays, they have to go into the
                      // exact same arrays and we have to find the same paths.  This is
                      // roughly the same condition that makes MongoDB throw this strange
                      // error message.  eg, the main thing is that if sort spec is {a: 1,
                      // b:1} then a and b cannot both be arrays.
                      //
                      // (In MongoDB it seems to be OK to have {a: 1, 'a.x.y': 1} where 'a'
                      // and 'a.x.y' are both arrays, but we don't allow this for now.
                      // #NestedArraySort
                      // XXX achieve full compatibility here

                      if (knownPaths && !hasOwn.call(knownPaths, path)) {
                        throw Error('cannot index parallel arrays');
                      }
                    });

                    if (knownPaths) {
                      // Similarly to above, paths must match everywhere, unless this is a
                      // non-array field.
                      if (!hasOwn.call(element, '') && Object.keys(knownPaths).length !== Object.keys(element).length) {
                        throw Error('cannot index parallel arrays!');
                      }
                    } else if (usedPaths) {
                      knownPaths = {};
                      Object.keys(element).forEach(function (path) {
                        knownPaths[path] = true;
                      });
                    }

                    return element;
                  });

                  if (!knownPaths) {
                    // Easy case: no use of arrays.
                    var soleKey = valuesByIndexAndPath.map(function (values) {
                      if (!hasOwn.call(values, '')) {
                        throw Error('no value in sole key case?');
                      }

                      return values[''];
                    });
                    cb(soleKey);
                    return;
                  }

                  Object.keys(knownPaths).forEach(function (path) {
                    var key = valuesByIndexAndPath.map(function (values) {
                      if (hasOwn.call(values, '')) {
                        return values[''];
                      }

                      if (!hasOwn.call(values, path)) {
                        throw Error('missing path?');
                      }

                      return values[path];
                    });
                    cb(key);
                  });
                }

                return _generateKeysFromDoc;
              }(); // Returns a comparator that represents the sort specification (but not
              // including a possible geoquery distance tie-breaker).


              _proto._getBaseComparator = function () {
                function _getBaseComparator() {
                  var _this2 = this;

                  if (this._sortFunction) {
                    return this._sortFunction;
                  } // If we're only sorting on geoquery distance and no specs, just say
                  // everything is equal.


                  if (!this._sortSpecParts.length) {
                    return function (doc1, doc2) {
                      return 0;
                    };
                  }

                  return function (doc1, doc2) {
                    var key1 = _this2._getMinKeyFromDoc(doc1);

                    var key2 = _this2._getMinKeyFromDoc(doc2);

                    return _this2._compareKeys(key1, key2);
                  };
                }

                return _getBaseComparator;
              }(); // Finds the minimum key from the doc, according to the sort specs.  (We say
              // "minimum" here but this is with respect to the sort spec, so "descending"
              // sort fields mean we're finding the max for that field.)
              //
              // Note that this is NOT "find the minimum value of the first field, the
              // minimum value of the second field, etc"... it's "choose the
              // lexicographically minimum value of the key vector, allowing only keys which
              // you can find along the same paths".  ie, for a doc {a: [{x: 0, y: 5}, {x:
              // 1, y: 3}]} with sort spec {'a.x': 1, 'a.y': 1}, the only keys are [0,5] and
              // [1,3], and the minimum key is [0,5]; notably, [0,3] is NOT a key.


              _proto._getMinKeyFromDoc = function () {
                function _getMinKeyFromDoc(doc) {
                  var _this3 = this;

                  var minKey = null;

                  this._generateKeysFromDoc(doc, function (key) {
                    if (minKey === null) {
                      minKey = key;
                      return;
                    }

                    if (_this3._compareKeys(key, minKey) < 0) {
                      minKey = key;
                    }
                  });

                  return minKey;
                }

                return _getMinKeyFromDoc;
              }();

              _proto._getPaths = function () {
                function _getPaths() {
                  return this._sortSpecParts.map(function (part) {
                    return part.path;
                  });
                }

                return _getPaths;
              }(); // Given an index 'i', returns a comparator that compares two key arrays based
              // on field 'i'.


              _proto._keyFieldComparator = function () {
                function _keyFieldComparator(i) {
                  var invert = !this._sortSpecParts[i].ascending;
                  return function (key1, key2) {
                    var compare = LocalCollection._f._cmp(key1[i], key2[i]);

                    return invert ? -compare : compare;
                  };
                }

                return _keyFieldComparator;
              }();

              return Sorter;
            }();

            // Given an array of comparators
            // (functions (a,b)->(negative or positive or zero)), returns a single
            // comparator which uses each comparator in order and returns the first
            // non-zero value.
            function composeComparators(comparatorArray) {
              return function (a, b) {
                for (var i = 0; i < comparatorArray.length; ++i) {
                  var compare = comparatorArray[i](a, b);

                  if (compare !== 0) {
                    return compare;
                  }
                }

                return 0;
              };
            }
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports3 = _require3("/node_modules/meteor/minimongo/minimongo_client.js");

  /* Exports */
  Package._define("minimongo", _exports3, {
    LocalCollection: LocalCollection,
    Minimongo: Minimongo,
    MinimongoTest: MinimongoTest,
    MinimongoError: MinimongoError
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Exports */
  Package._define("ddp-server");
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var LocalCollection = Package.minimongo.LocalCollection;
  var Minimongo = Package.minimongo.Minimongo;
  var check = Package.check.check;
  var Match = Package.check.Match;
  var EJSON = Package.ejson.EJSON;
  var DDP = Package['ddp-client'].DDP;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var AllowDeny;

  var _require = meteorInstall({ "node_modules": { "meteor": { "allow-deny": { "allow-deny.js": function () {

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                    //
            // packages/allow-deny/allow-deny.js                                                                                  //
            //                                                                                                                    //
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            ///
            /// Remote methods and access control.
            ///
            var hasOwn = Object.prototype.hasOwnProperty; // Restrict default mutators on collection. allow() and deny() take the
            // same options:
            //
            // options.insert {Function(userId, doc)}
            //   return true to allow/deny adding this document
            //
            // options.update {Function(userId, docs, fields, modifier)}
            //   return true to allow/deny updating these documents.
            //   `fields` is passed as an array of fields that are to be modified
            //
            // options.remove {Function(userId, docs)}
            //   return true to allow/deny removing these documents
            //
            // options.fetch {Array}
            //   Fields to fetch for these validators. If any call to allow or deny
            //   does not have this option then all fields are loaded.
            //
            // allow and deny can be called multiple times. The validators are
            // evaluated as follows:
            // - If neither deny() nor allow() has been called on the collection,
            //   then the request is allowed if and only if the "insecure" smart
            //   package is in use.
            // - Otherwise, if any deny() function returns true, the request is denied.
            // - Otherwise, if any allow() function returns true, the request is allowed.
            // - Otherwise, the request is denied.
            //
            // Meteor may call your deny() and allow() functions in any order, and may not
            // call all of them if it is able to make a decision without calling them all
            // (so don't include side effects).

            AllowDeny = {
              CollectionPrototype: {}
            }; // In the `mongo` package, we will extend Mongo.Collection.prototype with these
            // methods

            var CollectionPrototype = AllowDeny.CollectionPrototype;
            /**
             * @summary Allow users to write directly to this collection from client code, subject to limitations you define.
             * @locus Server
             * @method allow
             * @memberOf Mongo.Collection
             * @instance
             * @param {Object} options
             * @param {Function} options.insert,update,remove Functions that look at a proposed modification to the database and return true if it should be allowed.
             * @param {String[]} options.fetch Optional performance enhancement. Limits the fields that will be fetched from the database for inspection by your `update` and `remove` functions.
             * @param {Function} options.transform Overrides `transform` on the  [`Collection`](#collections).  Pass `null` to disable transformation.
             */

            CollectionPrototype.allow = function (options) {
              addValidator(this, 'allow', options);
            };
            /**
             * @summary Override `allow` rules.
             * @locus Server
             * @method deny
             * @memberOf Mongo.Collection
             * @instance
             * @param {Object} options
             * @param {Function} options.insert,update,remove Functions that look at a proposed modification to the database and return true if it should be denied, even if an [allow](#allow) rule says otherwise.
             * @param {String[]} options.fetch Optional performance enhancement. Limits the fields that will be fetched from the database for inspection by your `update` and `remove` functions.
             * @param {Function} options.transform Overrides `transform` on the  [`Collection`](#collections).  Pass `null` to disable transformation.
             */

            CollectionPrototype.deny = function (options) {
              addValidator(this, 'deny', options);
            };

            CollectionPrototype._defineMutationMethods = function (options) {
              var self = this;
              options = options || {}; // set to true once we call any allow or deny methods. If true, use
              // allow/deny semantics. If false, use insecure mode semantics.

              self._restricted = false; // Insecure mode (default to allowing writes). Defaults to 'undefined' which
              // means insecure iff the insecure package is loaded. This property can be
              // overriden by tests or packages wishing to change insecure mode behavior of
              // their collections.

              self._insecure = undefined;
              self._validators = {
                insert: {
                  allow: [],
                  deny: []
                },
                update: {
                  allow: [],
                  deny: []
                },
                remove: {
                  allow: [],
                  deny: []
                },
                upsert: {
                  allow: [],
                  deny: []
                },
                // dummy arrays; can't set these!
                fetch: [],
                fetchAllFields: false
              };
              if (!self._name) return; // anonymous collection
              // XXX Think about method namespacing. Maybe methods should be
              // "Meteor:Mongo:insert/NAME"?

              self._prefix = '/' + self._name + '/'; // Mutation Methods
              // Minimongo on the server gets no stubs; instead, by default
              // it wait()s until its result is ready, yielding.
              // This matches the behavior of macromongo on the server better.
              // XXX see #MeteorServerNull

              if (self._connection && (self._connection === Meteor.server || Meteor.isClient)) {
                var m = {};
                ['insert', 'update', 'remove'].forEach(function (method) {
                  var methodName = self._prefix + method;

                  if (options.useExisting) {
                    var handlerPropName = Meteor.isClient ? '_methodHandlers' : 'method_handlers'; // Do not try to create additional methods if this has already been called.
                    // (Otherwise the .methods() call below will throw an error.)

                    if (self._connection[handlerPropName] && typeof self._connection[handlerPropName][methodName] === 'function') return;
                  }

                  m[methodName] = function ()
                  /* ... */
                  {
                    // All the methods do their own validation, instead of using check().
                    check(arguments, [Match.Any]);
                    var args = Array.from(arguments);

                    try {
                      // For an insert, if the client didn't specify an _id, generate one
                      // now; because this uses DDP.randomStream, it will be consistent with
                      // what the client generated. We generate it now rather than later so
                      // that if (eg) an allow/deny rule does an insert to the same
                      // collection (not that it really should), the generated _id will
                      // still be the first use of the stream and will be consistent.
                      //
                      // However, we don't actually stick the _id onto the document yet,
                      // because we want allow/deny rules to be able to differentiate
                      // between arbitrary client-specified _id fields and merely
                      // client-controlled-via-randomSeed fields.
                      var generatedId = null;

                      if (method === "insert" && !hasOwn.call(args[0], '_id')) {
                        generatedId = self._makeNewID();
                      }

                      if (this.isSimulation) {
                        // In a client simulation, you can do any mutation (even with a
                        // complex selector).
                        if (generatedId !== null) args[0]._id = generatedId;
                        return self._collection[method].apply(self._collection, args);
                      } // This is the server receiving a method call from the client.
                      // We don't allow arbitrary selectors in mutations from the client: only
                      // single-ID selectors.


                      if (method !== 'insert') throwIfSelectorIsNotId(args[0], method);

                      if (self._restricted) {
                        // short circuit if there is no way it will pass.
                        if (self._validators[method].allow.length === 0) {
                          throw new Meteor.Error(403, "Access denied. No allow validators set on restricted " + "collection for method '" + method + "'.");
                        }

                        var validatedMethodName = '_validated' + method.charAt(0).toUpperCase() + method.slice(1);
                        args.unshift(this.userId);
                        method === 'insert' && args.push(generatedId);
                        return self[validatedMethodName].apply(self, args);
                      } else if (self._isInsecure()) {
                        if (generatedId !== null) args[0]._id = generatedId; // In insecure mode, allow any mutation (with a simple selector).
                        // XXX This is kind of bogus.  Instead of blindly passing whatever
                        //     we get from the network to this function, we should actually
                        //     know the correct arguments for the function and pass just
                        //     them.  For example, if you have an extraneous extra null
                        //     argument and this is Mongo on the server, the .wrapAsync'd
                        //     functions like update will get confused and pass the
                        //     "fut.resolver()" in the wrong slot, where _update will never
                        //     invoke it. Bam, broken DDP connection.  Probably should just
                        //     take this whole method and write it three times, invoking
                        //     helpers for the common code.

                        return self._collection[method].apply(self._collection, args);
                      } else {
                        // In secure mode, if we haven't called allow or deny, then nothing
                        // is permitted.
                        throw new Meteor.Error(403, "Access denied");
                      }
                    } catch (e) {
                      if (e.name === 'MongoError' || e.name === 'MinimongoError') {
                        throw new Meteor.Error(409, e.toString());
                      } else {
                        throw e;
                      }
                    }
                  };
                });

                self._connection.methods(m);
              }
            };

            CollectionPrototype._updateFetch = function (fields) {
              var self = this;

              if (!self._validators.fetchAllFields) {
                if (fields) {
                  var union = Object.create(null);

                  var add = function (names) {
                    return names && names.forEach(function (name) {
                      return union[name] = 1;
                    });
                  };

                  add(self._validators.fetch);
                  add(fields);
                  self._validators.fetch = Object.keys(union);
                } else {
                  self._validators.fetchAllFields = true; // clear fetch just to make sure we don't accidentally read it

                  self._validators.fetch = null;
                }
              }
            };

            CollectionPrototype._isInsecure = function () {
              var self = this;
              if (self._insecure === undefined) return !!Package.insecure;
              return self._insecure;
            };

            CollectionPrototype._validatedInsert = function (userId, doc, generatedId) {
              var self = this; // call user validators.
              // Any deny returns true means denied.

              if (self._validators.insert.deny.some(function (validator) {
                return validator(userId, docToValidate(validator, doc, generatedId));
              })) {
                throw new Meteor.Error(403, "Access denied");
              } // Any allow returns true means proceed. Throw error if they all fail.


              if (self._validators.insert.allow.every(function (validator) {
                return !validator(userId, docToValidate(validator, doc, generatedId));
              })) {
                throw new Meteor.Error(403, "Access denied");
              } // If we generated an ID above, insert it now: after the validation, but
              // before actually inserting.


              if (generatedId !== null) doc._id = generatedId;

              self._collection.insert.call(self._collection, doc);
            }; // Simulate a mongo `update` operation while validating that the access
            // control rules set by calls to `allow/deny` are satisfied. If all
            // pass, rewrite the mongo operation to use $in to set the list of
            // document ids to change ##ValidatedChange


            CollectionPrototype._validatedUpdate = function (userId, selector, mutator, options) {
              var self = this;
              check(mutator, Object);
              options = Object.assign(Object.create(null), options);
              if (!LocalCollection._selectorIsIdPerhapsAsObject(selector)) throw new Error("validated update should be of a single ID"); // We don't support upserts because they don't fit nicely into allow/deny
              // rules.

              if (options.upsert) throw new Meteor.Error(403, "Access denied. Upserts not " + "allowed in a restricted collection.");
              var noReplaceError = "Access denied. In a restricted collection you can only" + " update documents, not replace them. Use a Mongo update operator, such " + "as '$set'.";
              var mutatorKeys = Object.keys(mutator); // compute modified fields

              var modifiedFields = {};

              if (mutatorKeys.length === 0) {
                throw new Meteor.Error(403, noReplaceError);
              }

              mutatorKeys.forEach(function (op) {
                var params = mutator[op];

                if (op.charAt(0) !== '$') {
                  throw new Meteor.Error(403, noReplaceError);
                } else if (!hasOwn.call(ALLOWED_UPDATE_OPERATIONS, op)) {
                  throw new Meteor.Error(403, "Access denied. Operator " + op + " not allowed in a restricted collection.");
                } else {
                  Object.keys(params).forEach(function (field) {
                    // treat dotted fields as if they are replacing their
                    // top-level part
                    if (field.indexOf('.') !== -1) field = field.substring(0, field.indexOf('.')); // record the field we are trying to change

                    modifiedFields[field] = true;
                  });
                }
              });
              var fields = Object.keys(modifiedFields);
              var findOptions = {
                transform: null
              };

              if (!self._validators.fetchAllFields) {
                findOptions.fields = {};

                self._validators.fetch.forEach(function (fieldName) {
                  findOptions.fields[fieldName] = 1;
                });
              }

              var doc = self._collection.findOne(selector, findOptions);

              if (!doc) // none satisfied!
                return 0; // call user validators.
              // Any deny returns true means denied.

              if (self._validators.update.deny.some(function (validator) {
                var factoriedDoc = transformDoc(validator, doc);
                return validator(userId, factoriedDoc, fields, mutator);
              })) {
                throw new Meteor.Error(403, "Access denied");
              } // Any allow returns true means proceed. Throw error if they all fail.


              if (self._validators.update.allow.every(function (validator) {
                var factoriedDoc = transformDoc(validator, doc);
                return !validator(userId, factoriedDoc, fields, mutator);
              })) {
                throw new Meteor.Error(403, "Access denied");
              }

              options._forbidReplace = true; // Back when we supported arbitrary client-provided selectors, we actually
              // rewrote the selector to include an _id clause before passing to Mongo to
              // avoid races, but since selector is guaranteed to already just be an ID, we
              // don't have to any more.

              return self._collection.update.call(self._collection, selector, mutator, options);
            }; // Only allow these operations in validated updates. Specifically
            // whitelist operations, rather than blacklist, so new complex
            // operations that are added aren't automatically allowed. A complex
            // operation is one that does more than just modify its target
            // field. For now this contains all update operations except '$rename'.
            // http://docs.mongodb.org/manual/reference/operators/#update


            var ALLOWED_UPDATE_OPERATIONS = {
              $inc: 1,
              $set: 1,
              $unset: 1,
              $addToSet: 1,
              $pop: 1,
              $pullAll: 1,
              $pull: 1,
              $pushAll: 1,
              $push: 1,
              $bit: 1
            }; // Simulate a mongo `remove` operation while validating access control
            // rules. See #ValidatedChange

            CollectionPrototype._validatedRemove = function (userId, selector) {
              var self = this;
              var findOptions = {
                transform: null
              };

              if (!self._validators.fetchAllFields) {
                findOptions.fields = {};

                self._validators.fetch.forEach(function (fieldName) {
                  findOptions.fields[fieldName] = 1;
                });
              }

              var doc = self._collection.findOne(selector, findOptions);

              if (!doc) return 0; // call user validators.
              // Any deny returns true means denied.

              if (self._validators.remove.deny.some(function (validator) {
                return validator(userId, transformDoc(validator, doc));
              })) {
                throw new Meteor.Error(403, "Access denied");
              } // Any allow returns true means proceed. Throw error if they all fail.


              if (self._validators.remove.allow.every(function (validator) {
                return !validator(userId, transformDoc(validator, doc));
              })) {
                throw new Meteor.Error(403, "Access denied");
              } // Back when we supported arbitrary client-provided selectors, we actually
              // rewrote the selector to {_id: {$in: [ids that we found]}} before passing to
              // Mongo to avoid races, but since selector is guaranteed to already just be
              // an ID, we don't have to any more.


              return self._collection.remove.call(self._collection, selector);
            };

            CollectionPrototype._callMutatorMethod = function () {
              function _callMutatorMethod(name, args, callback) {
                if (Meteor.isClient && !callback && !alreadyInSimulation()) {
                  // Client can't block, so it can't report errors by exception,
                  // only by callback. If they forget the callback, give them a
                  // default one that logs the error, so they aren't totally
                  // baffled if their writes don't work because their database is
                  // down.
                  // Don't give a default callback in simulation, because inside stubs we
                  // want to return the results from the local collection immediately and
                  // not force a callback.
                  callback = function (err) {
                    if (err) Meteor._debug(name + " failed: " + (err.reason || err.stack));
                  };
                } // For two out of three mutator methods, the first argument is a selector


                var firstArgIsSelector = name === "update" || name === "remove";

                if (firstArgIsSelector && !alreadyInSimulation()) {
                  // If we're about to actually send an RPC, we should throw an error if
                  // this is a non-ID selector, because the mutation methods only allow
                  // single-ID selectors. (If we don't throw here, we'll see flicker.)
                  throwIfSelectorIsNotId(args[0], name);
                }

                var mutatorMethodName = this._prefix + name;
                return this._connection.apply(mutatorMethodName, args, {
                  returnStubValue: true
                }, callback);
              }

              return _callMutatorMethod;
            }();

            function transformDoc(validator, doc) {
              if (validator.transform) return validator.transform(doc);
              return doc;
            }

            function docToValidate(validator, doc, generatedId) {
              var ret = doc;

              if (validator.transform) {
                ret = EJSON.clone(doc); // If you set a server-side transform on your collection, then you don't get
                // to tell the difference between "client specified the ID" and "server
                // generated the ID", because transforms expect to get _id.  If you want to
                // do that check, you can do it with a specific
                // `C.allow({insert: f, transform: null})` validator.

                if (generatedId !== null) {
                  ret._id = generatedId;
                }

                ret = validator.transform(ret);
              }

              return ret;
            }

            function addValidator(collection, allowOrDeny, options) {
              // validate keys
              var validKeysRegEx = /^(?:insert|update|remove|fetch|transform)$/;
              Object.keys(options).forEach(function (key) {
                if (!validKeysRegEx.test(key)) throw new Error(allowOrDeny + ": Invalid key: " + key);
              });
              collection._restricted = true;
              ['insert', 'update', 'remove'].forEach(function (name) {
                if (hasOwn.call(options, name)) {
                  if (!(options[name] instanceof Function)) {
                    throw new Error(allowOrDeny + ": Value for `" + name + "` must be a function");
                  } // If the transform is specified at all (including as 'null') in this
                  // call, then take that; otherwise, take the transform from the
                  // collection.


                  if (options.transform === undefined) {
                    options[name].transform = collection._transform; // already wrapped
                  } else {
                    options[name].transform = LocalCollection.wrapTransform(options.transform);
                  }

                  collection._validators[name][allowOrDeny].push(options[name]);
                }
              }); // Only update the fetch fields if we're passed things that affect
              // fetching. This way allow({}) and allow({insert: f}) don't result in
              // setting fetchAllFields

              if (options.update || options.remove || options.fetch) {
                if (options.fetch && !(options.fetch instanceof Array)) {
                  throw new Error(allowOrDeny + ": Value for `fetch` must be an array");
                }

                collection._updateFetch(options.fetch);
              }
            }

            function throwIfSelectorIsNotId(selector, methodName) {
              if (!LocalCollection._selectorIsIdPerhapsAsObject(selector)) {
                throw new Meteor.Error(403, "Not permitted. Untrusted code may only " + methodName + " documents by ID.");
              }
            }

            ; // Determine if we are in a DDP method simulation

            function alreadyInSimulation() {
              var CurrentInvocation = DDP._CurrentMethodInvocation || // For backwards compatibility, as explained in this issue:
              // https://github.com/meteor/meteor/issues/8947
              DDP._CurrentInvocation;
              var enclosing = CurrentInvocation.get();
              return enclosing && enclosing.isSimulation;
            }
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  _require("/node_modules/meteor/allow-deny/allow-deny.js");

  /* Exports */
  Package._define("allow-deny", {
    AllowDeny: AllowDeny
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Exports */
  Package._define("mongo-dev-server");
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var AllowDeny = Package['allow-deny'].AllowDeny;
  var Random = Package.random.Random;
  var EJSON = Package.ejson.EJSON;
  var LocalCollection = Package.minimongo.LocalCollection;
  var Minimongo = Package.minimongo.Minimongo;
  var DDP = Package['ddp-client'].DDP;
  var Tracker = Package.tracker.Tracker;
  var Deps = Package.tracker.Deps;
  var DiffSequence = Package['diff-sequence'].DiffSequence;
  var MongoID = Package['mongo-id'].MongoID;
  var check = Package.check.check;
  var Match = Package.check.Match;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var Mongo;

  var _require3 = meteorInstall({ "node_modules": { "meteor": { "mongo": { "local_collection_driver.js": function (_require2, _exports, _module) {

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                    //
            // packages/mongo/local_collection_driver.js                                                                          //
            //                                                                                                                    //
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module.export({
              LocalCollectionDriver: function () {
                return LocalCollectionDriver;
              }
            });
            var LocalCollectionDriver = new (
            /*#__PURE__*/
            function () {
              function LocalCollectionDriver() {
                this.noConnCollections = Object.create(null);
              }

              var _proto = LocalCollectionDriver.prototype;

              _proto.open = function () {
                function open(name, conn) {
                  if (!name) {
                    return new LocalCollection();
                  }

                  if (!conn) {
                    return ensureCollection(name, this.noConnCollections);
                  }

                  if (!conn._mongo_livedata_collections) {
                    conn._mongo_livedata_collections = Object.create(null);
                  } // XXX is there a way to keep track of a connection's collections without
                  // dangling it off the connection object?


                  return ensureCollection(name, conn._mongo_livedata_collections);
                }

                return open;
              }();

              return LocalCollectionDriver;
            }())();

            function ensureCollection(name, collections) {
              return name in collections ? collections[name] : collections[name] = new LocalCollection(name);
            }
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "collection.js": function (_require4, _exports2, _module2) {

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                    //
            // packages/mongo/collection.js                                                                                       //
            //                                                                                                                    //
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require4("@babel/runtime/helpers/interopRequireDefault");

            var _objectSpread2 = _interopRequireDefault(_require4("@babel/runtime/helpers/objectSpread"));

            // options.connection, if given, is a LivedataClient or LivedataServer
            // XXX presently there is no way to destroy/clean up a Collection

            /**
             * @summary Namespace for MongoDB-related items
             * @namespace
             */
            Mongo = {};
            /**
             * @summary Constructor for a Collection
             * @locus Anywhere
             * @instancename collection
             * @class
             * @param {String} name The name of the collection.  If null, creates an unmanaged (unsynchronized) local collection.
             * @param {Object} [options]
             * @param {Object} options.connection The server connection that will manage this collection. Uses the default connection if not specified.  Pass the return value of calling [`DDP.connect`](#ddp_connect) to specify a different server. Pass `null` to specify no connection. Unmanaged (`name` is null) collections cannot specify a connection.
             * @param {String} options.idGeneration The method of generating the `_id` fields of new documents in this collection.  Possible values:
            
             - **`'STRING'`**: random strings
             - **`'MONGO'`**:  random [`Mongo.ObjectID`](#mongo_object_id) values
            
            The default id generation technique is `'STRING'`.
             * @param {Function} options.transform An optional transformation function. Documents will be passed through this function before being returned from `fetch` or `findOne`, and before being passed to callbacks of `observe`, `map`, `forEach`, `allow`, and `deny`. Transforms are *not* applied for the callbacks of `observeChanges` or to cursors returned from publish functions.
             * @param {Boolean} options.defineMutationMethods Set to `false` to skip setting up the mutation methods that enable insert/update/remove from client code. Default `true`.
             */

            Mongo.Collection = function () {
              function Collection(name, options) {
                var _this = this;

                if (!name && name !== null) {
                  Meteor._debug("Warning: creating anonymous collection. It will not be " + "saved or synchronized over the network. (Pass null for " + "the collection name to turn off this warning.)");

                  name = null;
                }

                if (name !== null && typeof name !== "string") {
                  throw new Error("First argument to new Mongo.Collection must be a string or null");
                }

                if (options && options.methods) {
                  // Backwards compatibility hack with original signature (which passed
                  // "connection" directly instead of in options. (Connections must have a "methods"
                  // method.)
                  // XXX remove before 1.0
                  options = {
                    connection: options
                  };
                } // Backwards compatibility: "connection" used to be called "manager".


                if (options && options.manager && !options.connection) {
                  options.connection = options.manager;
                }

                options = (0, _objectSpread2.default)({
                  connection: undefined,
                  idGeneration: 'STRING',
                  transform: null,
                  _driver: undefined,
                  _preventAutopublish: false
                }, options);

                switch (options.idGeneration) {
                  case 'MONGO':
                    this._makeNewID = function () {
                      var src = name ? DDP.randomStream('/collection/' + name) : Random.insecure;
                      return new Mongo.ObjectID(src.hexString(24));
                    };

                    break;

                  case 'STRING':
                  default:
                    this._makeNewID = function () {
                      var src = name ? DDP.randomStream('/collection/' + name) : Random.insecure;
                      return src.id();
                    };

                    break;
                }

                this._transform = LocalCollection.wrapTransform(options.transform);
                if (!name || options.connection === null) // note: nameless collections never have a connection
                  this._connection = null;else if (options.connection) this._connection = options.connection;else if (Meteor.isClient) this._connection = Meteor.connection;else this._connection = Meteor.server;

                if (!options._driver) {
                  // XXX This check assumes that webapp is loaded so that Meteor.server !==
                  // null. We should fully support the case of "want to use a Mongo-backed
                  // collection from Node code without webapp", but we don't yet.
                  // #MeteorServerNull
                  if (name && this._connection === Meteor.server && typeof MongoInternals !== "undefined" && MongoInternals.defaultRemoteCollectionDriver) {
                    options._driver = MongoInternals.defaultRemoteCollectionDriver();
                  } else {
                    var _require = _require4("./local_collection_driver.js"),
                        LocalCollectionDriver = _require.LocalCollectionDriver;

                    options._driver = LocalCollectionDriver;
                  }
                }

                this._collection = options._driver.open(name, this._connection);
                this._name = name;
                this._driver = options._driver;

                this._maybeSetUpReplication(name, options); // XXX don't define these until allow or deny is actually used for this
                // collection. Could be hard if the security rules are only defined on the
                // server.


                if (options.defineMutationMethods !== false) {
                  try {
                    this._defineMutationMethods({
                      useExisting: options._suppressSameNameError === true
                    });
                  } catch (error) {
                    // Throw a more understandable error on the server for same collection name
                    if (error.message === "A method named '/" + name + "/insert' is already defined") throw new Error("There is already a collection named \"" + name + "\"");
                    throw error;
                  }
                } // autopublish


                if (Package.autopublish && !options._preventAutopublish && this._connection && this._connection.publish) {
                  this._connection.publish(null, function () {
                    return _this.find();
                  }, {
                    is_auto: true
                  });
                }
              }

              return Collection;
            }();

            Object.assign(Mongo.Collection.prototype, {
              _maybeSetUpReplication: function (name, _ref) {
                var _ref$_suppressSameNam = _ref._suppressSameNameError,
                    _suppressSameNameError = _ref$_suppressSameNam === void 0 ? false : _ref$_suppressSameNam;

                var self = this;

                if (!(self._connection && self._connection.registerStore)) {
                  return;
                } // OK, we're going to be a slave, replicating some remote
                // database, except possibly with some temporary divergence while
                // we have unacknowledged RPC's.


                var ok = self._connection.registerStore(name, {
                  // Called at the beginning of a batch of updates. batchSize is the number
                  // of update calls to expect.
                  //
                  // XXX This interface is pretty janky. reset probably ought to go back to
                  // being its own function, and callers shouldn't have to calculate
                  // batchSize. The optimization of not calling pause/remove should be
                  // delayed until later: the first call to update() should buffer its
                  // message, and then we can either directly apply it at endUpdate time if
                  // it was the only update, or do pauseObservers/apply/apply at the next
                  // update() if there's another one.
                  beginUpdate: function (batchSize, reset) {
                    // pause observers so users don't see flicker when updating several
                    // objects at once (including the post-reconnect reset-and-reapply
                    // stage), and so that a re-sorting of a query can take advantage of the
                    // full _diffQuery moved calculation instead of applying change one at a
                    // time.
                    if (batchSize > 1 || reset) self._collection.pauseObservers();
                    if (reset) self._collection.remove({});
                  },
                  // Apply an update.
                  // XXX better specify this interface (not in terms of a wire message)?
                  update: function (msg) {
                    var mongoId = MongoID.idParse(msg.id);

                    var doc = self._collection.findOne(mongoId); // Is this a "replace the whole doc" message coming from the quiescence
                    // of method writes to an object? (Note that 'undefined' is a valid
                    // value meaning "remove it".)


                    if (msg.msg === 'replace') {
                      var replace = msg.replace;

                      if (!replace) {
                        if (doc) self._collection.remove(mongoId);
                      } else if (!doc) {
                        self._collection.insert(replace);
                      } else {
                        // XXX check that replace has no $ ops
                        self._collection.update(mongoId, replace);
                      }

                      return;
                    } else if (msg.msg === 'added') {
                      if (doc) {
                        throw new Error("Expected not to find a document already present for an add");
                      }

                      self._collection.insert((0, _objectSpread2.default)({
                        _id: mongoId
                      }, msg.fields));
                    } else if (msg.msg === 'removed') {
                      if (!doc) throw new Error("Expected to find a document already present for removed");

                      self._collection.remove(mongoId);
                    } else if (msg.msg === 'changed') {
                      if (!doc) throw new Error("Expected to find a document to change");
                      var keys = Object.keys(msg.fields);

                      if (keys.length > 0) {
                        var modifier = {};
                        keys.forEach(function (key) {
                          var value = msg.fields[key];

                          if (EJSON.equals(doc[key], value)) {
                            return;
                          }

                          if (typeof value === "undefined") {
                            if (!modifier.$unset) {
                              modifier.$unset = {};
                            }

                            modifier.$unset[key] = 1;
                          } else {
                            if (!modifier.$set) {
                              modifier.$set = {};
                            }

                            modifier.$set[key] = value;
                          }
                        });

                        if (Object.keys(modifier).length > 0) {
                          self._collection.update(mongoId, modifier);
                        }
                      }
                    } else {
                      throw new Error("I don't know how to deal with this message");
                    }
                  },
                  // Called at the end of a batch of updates.
                  endUpdate: function () {
                    self._collection.resumeObservers();
                  },
                  // Called around method stub invocations to capture the original versions
                  // of modified documents.
                  saveOriginals: function () {
                    self._collection.saveOriginals();
                  },
                  retrieveOriginals: function () {
                    return self._collection.retrieveOriginals();
                  },
                  // Used to preserve current versions of documents across a store reset.
                  getDoc: function (id) {
                    return self.findOne(id);
                  },
                  // To be able to get back to the collection from the store.
                  _getCollection: function () {
                    return self;
                  }
                });

                if (!ok) {
                  var message = "There is already a collection named \"" + name + "\"";

                  if (_suppressSameNameError === true) {
                    // XXX In theory we do not have to throw when `ok` is falsy. The
                    // store is already defined for this collection name, but this
                    // will simply be another reference to it and everything should
                    // work. However, we have historically thrown an error here, so
                    // for now we will skip the error only when _suppressSameNameError
                    // is `true`, allowing people to opt in and give this some real
                    // world testing.
                    console.warn ? console.warn(message) : console.log(message);
                  } else {
                    throw new Error(message);
                  }
                }
              },
              ///
              /// Main collection API
              ///
              _getFindSelector: function (args) {
                if (args.length == 0) return {};else return args[0];
              },
              _getFindOptions: function (args) {
                var self = this;

                if (args.length < 2) {
                  return {
                    transform: self._transform
                  };
                } else {
                  check(args[1], Match.Optional(Match.ObjectIncluding({
                    fields: Match.Optional(Match.OneOf(Object, undefined)),
                    sort: Match.Optional(Match.OneOf(Object, Array, Function, undefined)),
                    limit: Match.Optional(Match.OneOf(Number, undefined)),
                    skip: Match.Optional(Match.OneOf(Number, undefined))
                  })));
                  return (0, _objectSpread2.default)({
                    transform: self._transform
                  }, args[1]);
                }
              },

              /**
               * @summary Find the documents in a collection that match the selector.
               * @locus Anywhere
               * @method find
               * @memberof Mongo.Collection
               * @instance
               * @param {MongoSelector} [selector] A query describing the documents to find
               * @param {Object} [options]
               * @param {MongoSortSpecifier} options.sort Sort order (default: natural order)
               * @param {Number} options.skip Number of results to skip at the beginning
               * @param {Number} options.limit Maximum number of results to return
               * @param {MongoFieldSpecifier} options.fields Dictionary of fields to return or exclude.
               * @param {Boolean} options.reactive (Client only) Default `true`; pass `false` to disable reactivity
               * @param {Function} options.transform Overrides `transform` on the  [`Collection`](#collections) for this cursor.  Pass `null` to disable transformation.
               * @param {Boolean} options.disableOplog (Server only) Pass true to disable oplog-tailing on this query. This affects the way server processes calls to `observe` on this query. Disabling the oplog can be useful when working with data that updates in large batches.
               * @param {Number} options.pollingIntervalMs (Server only) When oplog is disabled (through the use of `disableOplog` or when otherwise not available), the frequency (in milliseconds) of how often to poll this query when observing on the server. Defaults to 10000ms (10 seconds).
               * @param {Number} options.pollingThrottleMs (Server only) When oplog is disabled (through the use of `disableOplog` or when otherwise not available), the minimum time (in milliseconds) to allow between re-polling when observing on the server. Increasing this will save CPU and mongo load at the expense of slower updates to users. Decreasing this is not recommended. Defaults to 50ms.
               * @param {Number} options.maxTimeMs (Server only) If set, instructs MongoDB to set a time limit for this cursor's operations. If the operation reaches the specified time limit (in milliseconds) without the having been completed, an exception will be thrown. Useful to prevent an (accidental or malicious) unoptimized query from causing a full collection scan that would disrupt other database users, at the expense of needing to handle the resulting error.
               * @param {String|Object} options.hint (Server only) Overrides MongoDB's default index selection and query optimization process. Specify an index to force its use, either by its name or index specification. You can also specify `{ $natural : 1 }` to force a forwards collection scan, or `{ $natural : -1 }` for a reverse collection scan. Setting this is only recommended for advanced users.
               * @returns {Mongo.Cursor}
               */
              find: function () {
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                  args[_key] = arguments[_key];
                }

                // Collection.find() (return all docs) behaves differently
                // from Collection.find(undefined) (return 0 docs).  so be
                // careful about the length of arguments.
                return this._collection.find(this._getFindSelector(args), this._getFindOptions(args));
              },

              /**
               * @summary Finds the first document that matches the selector, as ordered by sort and skip options. Returns `undefined` if no matching document is found.
               * @locus Anywhere
               * @method findOne
               * @memberof Mongo.Collection
               * @instance
               * @param {MongoSelector} [selector] A query describing the documents to find
               * @param {Object} [options]
               * @param {MongoSortSpecifier} options.sort Sort order (default: natural order)
               * @param {Number} options.skip Number of results to skip at the beginning
               * @param {MongoFieldSpecifier} options.fields Dictionary of fields to return or exclude.
               * @param {Boolean} options.reactive (Client only) Default true; pass false to disable reactivity
               * @param {Function} options.transform Overrides `transform` on the [`Collection`](#collections) for this cursor.  Pass `null` to disable transformation.
               * @returns {Object}
               */
              findOne: function () {
                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                  args[_key2] = arguments[_key2];
                }

                return this._collection.findOne(this._getFindSelector(args), this._getFindOptions(args));
              }
            });
            Object.assign(Mongo.Collection, {
              _publishCursor: function (cursor, sub, collection) {
                var observeHandle = cursor.observeChanges({
                  added: function (id, fields) {
                    sub.added(collection, id, fields);
                  },
                  changed: function (id, fields) {
                    sub.changed(collection, id, fields);
                  },
                  removed: function (id) {
                    sub.removed(collection, id);
                  }
                }); // We don't call sub.ready() here: it gets called in livedata_server, after
                // possibly calling _publishCursor on multiple returned cursors.
                // register stop callback (expects lambda w/ no args).

                sub.onStop(function () {
                  observeHandle.stop();
                }); // return the observeHandle in case it needs to be stopped early

                return observeHandle;
              },
              // protect against dangerous selectors.  falsey and {_id: falsey} are both
              // likely programmer error, and not what you want, particularly for destructive
              // operations. If a falsey _id is sent in, a new string _id will be
              // generated and returned; if a fallbackId is provided, it will be returned
              // instead.
              _rewriteSelector: function (selector) {
                var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                    fallbackId = _ref2.fallbackId;

                // shorthand -- scalars match _id
                if (LocalCollection._selectorIsId(selector)) selector = {
                  _id: selector
                };

                if (Array.isArray(selector)) {
                  // This is consistent with the Mongo console itself; if we don't do this
                  // check passing an empty array ends up selecting all items
                  throw new Error("Mongo selector can't be an array.");
                }

                if (!selector || '_id' in selector && !selector._id) {
                  // can't match anything
                  return {
                    _id: fallbackId || Random.id()
                  };
                }

                return selector;
              }
            });
            Object.assign(Mongo.Collection.prototype, {
              // 'insert' immediately returns the inserted document's new _id.
              // The others return values immediately if you are in a stub, an in-memory
              // unmanaged collection, or a mongo-backed collection and you don't pass a
              // callback. 'update' and 'remove' return the number of affected
              // documents. 'upsert' returns an object with keys 'numberAffected' and, if an
              // insert happened, 'insertedId'.
              //
              // Otherwise, the semantics are exactly like other methods: they take
              // a callback as an optional last argument; if no callback is
              // provided, they block until the operation is complete, and throw an
              // exception if it fails; if a callback is provided, then they don't
              // necessarily block, and they call the callback when they finish with error and
              // result arguments.  (The insert method provides the document ID as its result;
              // update and remove provide the number of affected docs as the result; upsert
              // provides an object with numberAffected and maybe insertedId.)
              //
              // On the client, blocking is impossible, so if a callback
              // isn't provided, they just return immediately and any error
              // information is lost.
              //
              // There's one more tweak. On the client, if you don't provide a
              // callback, then if there is an error, a message will be logged with
              // Meteor._debug.
              //
              // The intent (though this is actually determined by the underlying
              // drivers) is that the operations should be done synchronously, not
              // generating their result until the database has acknowledged
              // them. In the future maybe we should provide a flag to turn this
              // off.

              /**
               * @summary Insert a document in the collection.  Returns its unique _id.
               * @locus Anywhere
               * @method  insert
               * @memberof Mongo.Collection
               * @instance
               * @param {Object} doc The document to insert. May not yet have an _id attribute, in which case Meteor will generate one for you.
               * @param {Function} [callback] Optional.  If present, called with an error object as the first argument and, if no error, the _id as the second.
               */
              insert: function (doc, callback) {
                // Make sure we were passed a document to insert
                if (!doc) {
                  throw new Error("insert requires an argument");
                } // Make a shallow clone of the document, preserving its prototype.


                doc = Object.create(Object.getPrototypeOf(doc), Object.getOwnPropertyDescriptors(doc));

                if ('_id' in doc) {
                  if (!doc._id || !(typeof doc._id === 'string' || doc._id instanceof Mongo.ObjectID)) {
                    throw new Error("Meteor requires document _id fields to be non-empty strings or ObjectIDs");
                  }
                } else {
                  var generateId = true; // Don't generate the id if we're the client and the 'outermost' call
                  // This optimization saves us passing both the randomSeed and the id
                  // Passing both is redundant.

                  if (this._isRemoteCollection()) {
                    var enclosing = DDP._CurrentMethodInvocation.get();

                    if (!enclosing) {
                      generateId = false;
                    }
                  }

                  if (generateId) {
                    doc._id = this._makeNewID();
                  }
                } // On inserts, always return the id that we generated; on all other
                // operations, just return the result from the collection.


                var chooseReturnValueFromCollectionResult = function (result) {
                  if (doc._id) {
                    return doc._id;
                  } // XXX what is this for??
                  // It's some iteraction between the callback to _callMutatorMethod and
                  // the return value conversion


                  doc._id = result;
                  return result;
                };

                var wrappedCallback = wrapCallback(callback, chooseReturnValueFromCollectionResult);

                if (this._isRemoteCollection()) {
                  var result = this._callMutatorMethod("insert", [doc], wrappedCallback);

                  return chooseReturnValueFromCollectionResult(result);
                } // it's my collection.  descend into the collection object
                // and propagate any exception.


                try {
                  // If the user provided a callback and the collection implements this
                  // operation asynchronously, then queryRet will be undefined, and the
                  // result will be returned through the callback instead.
                  var _result = this._collection.insert(doc, wrappedCallback);

                  return chooseReturnValueFromCollectionResult(_result);
                } catch (e) {
                  if (callback) {
                    callback(e);
                    return null;
                  }

                  throw e;
                }
              },

              /**
               * @summary Modify one or more documents in the collection. Returns the number of matched documents.
               * @locus Anywhere
               * @method update
               * @memberof Mongo.Collection
               * @instance
               * @param {MongoSelector} selector Specifies which documents to modify
               * @param {MongoModifier} modifier Specifies how to modify the documents
               * @param {Object} [options]
               * @param {Boolean} options.multi True to modify all matching documents; false to only modify one of the matching documents (the default).
               * @param {Boolean} options.upsert True to insert a document if no matching documents are found.
               * @param {Function} [callback] Optional.  If present, called with an error object as the first argument and, if no error, the number of affected documents as the second.
               */
              update: function (selector, modifier) {
                for (var _len3 = arguments.length, optionsAndCallback = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
                  optionsAndCallback[_key3 - 2] = arguments[_key3];
                }

                var callback = popCallbackFromArgs(optionsAndCallback); // We've already popped off the callback, so we are left with an array
                // of one or zero items

                var options = (0, _objectSpread2.default)({}, optionsAndCallback[0] || null);
                var insertedId;

                if (options && options.upsert) {
                  // set `insertedId` if absent.  `insertedId` is a Meteor extension.
                  if (options.insertedId) {
                    if (!(typeof options.insertedId === 'string' || options.insertedId instanceof Mongo.ObjectID)) throw new Error("insertedId must be string or ObjectID");
                    insertedId = options.insertedId;
                  } else if (!selector || !selector._id) {
                    insertedId = this._makeNewID();
                    options.generatedId = true;
                    options.insertedId = insertedId;
                  }
                }

                selector = Mongo.Collection._rewriteSelector(selector, {
                  fallbackId: insertedId
                });
                var wrappedCallback = wrapCallback(callback);

                if (this._isRemoteCollection()) {
                  var args = [selector, modifier, options];
                  return this._callMutatorMethod("update", args, wrappedCallback);
                } // it's my collection.  descend into the collection object
                // and propagate any exception.


                try {
                  // If the user provided a callback and the collection implements this
                  // operation asynchronously, then queryRet will be undefined, and the
                  // result will be returned through the callback instead.
                  return this._collection.update(selector, modifier, options, wrappedCallback);
                } catch (e) {
                  if (callback) {
                    callback(e);
                    return null;
                  }

                  throw e;
                }
              },

              /**
               * @summary Remove documents from the collection
               * @locus Anywhere
               * @method remove
               * @memberof Mongo.Collection
               * @instance
               * @param {MongoSelector} selector Specifies which documents to remove
               * @param {Function} [callback] Optional.  If present, called with an error object as its argument.
               */
              remove: function (selector, callback) {
                selector = Mongo.Collection._rewriteSelector(selector);
                var wrappedCallback = wrapCallback(callback);

                if (this._isRemoteCollection()) {
                  return this._callMutatorMethod("remove", [selector], wrappedCallback);
                } // it's my collection.  descend into the collection object
                // and propagate any exception.


                try {
                  // If the user provided a callback and the collection implements this
                  // operation asynchronously, then queryRet will be undefined, and the
                  // result will be returned through the callback instead.
                  return this._collection.remove(selector, wrappedCallback);
                } catch (e) {
                  if (callback) {
                    callback(e);
                    return null;
                  }

                  throw e;
                }
              },
              // Determine if this collection is simply a minimongo representation of a real
              // database on another server
              _isRemoteCollection: function () {
                // XXX see #MeteorServerNull
                return this._connection && this._connection !== Meteor.server;
              },

              /**
               * @summary Modify one or more documents in the collection, or insert one if no matching documents were found. Returns an object with keys `numberAffected` (the number of documents modified)  and `insertedId` (the unique _id of the document that was inserted, if any).
               * @locus Anywhere
               * @method upsert
               * @memberof Mongo.Collection
               * @instance
               * @param {MongoSelector} selector Specifies which documents to modify
               * @param {MongoModifier} modifier Specifies how to modify the documents
               * @param {Object} [options]
               * @param {Boolean} options.multi True to modify all matching documents; false to only modify one of the matching documents (the default).
               * @param {Function} [callback] Optional.  If present, called with an error object as the first argument and, if no error, the number of affected documents as the second.
               */
              upsert: function (selector, modifier, options, callback) {
                if (!callback && typeof options === "function") {
                  callback = options;
                  options = {};
                }

                return this.update(selector, modifier, (0, _objectSpread2.default)({}, options, {
                  _returnObject: true,
                  upsert: true
                }), callback);
              },
              // We'll actually design an index API later. For now, we just pass through to
              // Mongo's, but make it synchronous.
              _ensureIndex: function (index, options) {
                var self = this;
                if (!self._collection._ensureIndex) throw new Error("Can only call _ensureIndex on server collections");

                self._collection._ensureIndex(index, options);
              },
              _dropIndex: function (index) {
                var self = this;
                if (!self._collection._dropIndex) throw new Error("Can only call _dropIndex on server collections");

                self._collection._dropIndex(index);
              },
              _dropCollection: function () {
                var self = this;
                if (!self._collection.dropCollection) throw new Error("Can only call _dropCollection on server collections");

                self._collection.dropCollection();
              },
              _createCappedCollection: function (byteSize, maxDocuments) {
                var self = this;
                if (!self._collection._createCappedCollection) throw new Error("Can only call _createCappedCollection on server collections");

                self._collection._createCappedCollection(byteSize, maxDocuments);
              },

              /**
               * @summary Returns the [`Collection`](http://mongodb.github.io/node-mongodb-native/3.0/api/Collection.html) object corresponding to this collection from the [npm `mongodb` driver module](https://www.npmjs.com/package/mongodb) which is wrapped by `Mongo.Collection`.
               * @locus Server
               * @memberof Mongo.Collection
               * @instance
               */
              rawCollection: function () {
                var self = this;

                if (!self._collection.rawCollection) {
                  throw new Error("Can only call rawCollection on server collections");
                }

                return self._collection.rawCollection();
              },

              /**
               * @summary Returns the [`Db`](http://mongodb.github.io/node-mongodb-native/3.0/api/Db.html) object corresponding to this collection's database connection from the [npm `mongodb` driver module](https://www.npmjs.com/package/mongodb) which is wrapped by `Mongo.Collection`.
               * @locus Server
               * @memberof Mongo.Collection
               * @instance
               */
              rawDatabase: function () {
                var self = this;

                if (!(self._driver.mongo && self._driver.mongo.db)) {
                  throw new Error("Can only call rawDatabase on server collections");
                }

                return self._driver.mongo.db;
              }
            }); // Convert the callback to not return a result if there is an error

            function wrapCallback(callback, convertResult) {
              return callback && function (error, result) {
                if (error) {
                  callback(error);
                } else if (typeof convertResult === "function") {
                  callback(null, convertResult(result));
                } else {
                  callback(null, result);
                }
              };
            }
            /**
             * @summary Create a Mongo-style `ObjectID`.  If you don't specify a `hexString`, the `ObjectID` will generated randomly (not using MongoDB's ID construction rules).
             * @locus Anywhere
             * @class
             * @param {String} [hexString] Optional.  The 24-character hexadecimal contents of the ObjectID to create
             */

            Mongo.ObjectID = MongoID.ObjectID;
            /**
             * @summary To create a cursor, use find. To access the documents in a cursor, use forEach, map, or fetch.
             * @class
             * @instanceName cursor
             */

            Mongo.Cursor = LocalCollection.Cursor;
            /**
             * @deprecated in 0.9.1
             */

            Mongo.Collection.Cursor = Mongo.Cursor;
            /**
             * @deprecated in 0.9.1
             */

            Mongo.Collection.ObjectID = Mongo.ObjectID;
            /**
             * @deprecated in 0.9.1
             */

            Meteor.Collection = Mongo.Collection; // Allow deny stuff is now in the allow-deny package

            Object.assign(Meteor.Collection.prototype, AllowDeny.CollectionPrototype);

            function popCallbackFromArgs(args) {
              // Pull off any callback (or perhaps a 'callback' variable that was passed
              // in undefined, like how 'upsert' does it).
              if (args.length && (args[args.length - 1] === undefined || args[args.length - 1] instanceof Function)) {
                return args.pop();
              }
            }
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  _require3("/node_modules/meteor/mongo/local_collection_driver.js");
  _require3("/node_modules/meteor/mongo/collection.js");

  /* Exports */
  Package._define("mongo", {
    Mongo: Mongo
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var _ = Package.underscore._;
  var Tracker = Package.tracker.Tracker;
  var Deps = Package.tracker.Deps;
  var Random = Package.random.Random;
  var Hook = Package['callback-hook'].Hook;
  var ReactiveVar = Package['reactive-var'].ReactiveVar;
  var DDP = Package['ddp-client'].DDP;
  var Mongo = Package.mongo.Mongo;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var Accounts, EXPIRE_TOKENS_INTERVAL_MS, CONNECTION_CLOSE_DELAY_MS;

  var _require2 = meteorInstall({ "node_modules": { "meteor": { "accounts-base": { "client_main.js": function (_require, _exports, _module) {

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                   //
            // packages/accounts-base/client_main.js                                                                             //
            //                                                                                                                   //
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var module1 = _module;
            module1.export({
              AccountsClient: function () {
                return AccountsClient;
              },
              AccountsTest: function () {
                return AccountsTest;
              }
            });
            var AccountsClient;
            module1.watch(_require("./accounts_client.js"), {
              AccountsClient: function (v) {
                AccountsClient = v;
              }
            }, 0);
            var AccountsTest;
            module1.watch(_require("./url_client.js"), {
              AccountsTest: function (v) {
                AccountsTest = v;
              }
            }, 1);
            module1.watch(_require("./localstorage_token.js"));

            /**
             * @namespace Accounts
             * @summary The namespace for all client-side accounts-related methods.
             */
            Accounts = new AccountsClient();
            /**
             * @summary A [Mongo.Collection](#collections) containing user documents.
             * @locus Anywhere
             * @type {Mongo.Collection}
             * @importFromPackage meteor
             */

            Meteor.users = Accounts.users;
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "accounts_client.js": function (_require3, _exports3, _module2) {

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                   //
            // packages/accounts-base/accounts_client.js                                                                         //
            //                                                                                                                   //
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require3("@babel/runtime/helpers/interopRequireDefault");

            var _inheritsLoose2 = _interopRequireDefault(_require3("@babel/runtime/helpers/inheritsLoose"));

            _module2.export({
              AccountsClient: function () {
                return AccountsClient;
              }
            });
            var AccountsCommon;
            _module2.watch(_require3("./accounts_common.js"), {
              AccountsCommon: function (v) {
                AccountsCommon = v;
              }
            }, 0);

            var AccountsClient =
            /*#__PURE__*/
            function (_AccountsCommon) {
              (0, _inheritsLoose2.default)(AccountsClient, _AccountsCommon);

              function AccountsClient(options) {
                var _this;

                _this = _AccountsCommon.call(this, options) || this;
                _this._loggingIn = new ReactiveVar(false);
                _this._loggingOut = new ReactiveVar(false);
                _this._loginServicesHandle = _this.connection.subscribe("meteor.loginServiceConfiguration");
                _this._pageLoadLoginCallbacks = [];
                _this._pageLoadLoginAttemptInfo = null; // Defined in url_client.js.

                _this._initUrlMatching(); // Defined in localstorage_token.js.


                _this._initLocalStorage(); // This is for .registerClientLoginFunction & .callLoginFunction.


                _this._loginFuncs = {};
                return _this;
              } ///
              /// CURRENT USER
              ///
              // @override


              var _proto = AccountsClient.prototype;

              _proto.userId = function () {
                function userId() {
                  return this.connection.userId();
                }

                return userId;
              }(); // This is mostly just called within this file, but Meteor.loginWithPassword
              // also uses it to make loggingIn() be true during the beginPasswordExchange
              // method call too.


              _proto._setLoggingIn = function () {
                function _setLoggingIn(x) {
                  this._loggingIn.set(x);
                }

                return _setLoggingIn;
              }();
              /**
               * @summary True if a login method (such as `Meteor.loginWithPassword`, `Meteor.loginWithFacebook`, or `Accounts.createUser`) is currently in progress. A reactive data source.
               * @locus Client
               */

              _proto.loggingIn = function () {
                function loggingIn() {
                  return this._loggingIn.get();
                }

                return loggingIn;
              }();
              /**
               * @summary True if a logout method (such as `Meteor.logout`) is currently in progress. A reactive data source.
               * @locus Client
               */

              _proto.loggingOut = function () {
                function loggingOut() {
                  return this._loggingOut.get();
                }

                return loggingOut;
              }();
              /**
               * @summary Register a new login function on the client. Intended for OAuth package authors. You can call the login function by using
               `Accounts.callLoginFunction` or `Accounts.callLoginFunction`.
               * @locus Client
               * @param {String} funcName The name of your login function. Used by `Accounts.callLoginFunction` and `Accounts.applyLoginFunction`.
               Should be the OAuth provider name accordingly.
               * @param {Function} func The actual function you want to call. Just write it in the manner of `loginWithFoo`.
               */

              _proto.registerClientLoginFunction = function () {
                function registerClientLoginFunction(funcName, func) {
                  if (this._loginFuncs[funcName]) {
                    throw new Error(funcName + " has been defined already");
                  }

                  this._loginFuncs[funcName] = func;
                }

                return registerClientLoginFunction;
              }();
              /**
               * @summary Call a login function defined using `Accounts.registerClientLoginFunction`. Excluding the first argument, all remaining
               arguments are passed to the login function accordingly. Use `applyLoginFunction` if you want to pass in an arguments array that contains
               all arguments for the login function.
               * @locus Client
               * @param {String} funcName The name of the login function you wanted to call.
               */

              _proto.callLoginFunction = function () {
                function callLoginFunction(funcName) {
                  if (!this._loginFuncs[funcName]) {
                    throw new Error(funcName + " was not defined");
                  }

                  for (var _len = arguments.length, funcArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    funcArgs[_key - 1] = arguments[_key];
                  }

                  return this._loginFuncs[funcName].apply(this, funcArgs);
                }

                return callLoginFunction;
              }();
              /**
               * @summary Same as ``callLoginFunction` but accept an `arguments` which contains all arguments for the login
               function.
               * @locus Client
               * @param {String} funcName The name of the login function you wanted to call.
               * @param {Array} funcArgs The `arguments` for the login function.
               */

              _proto.applyLoginFunction = function () {
                function applyLoginFunction(funcName, funcArgs) {
                  if (!this._loginFuncs[funcName]) {
                    throw new Error(funcName + " was not defined");
                  }

                  return this._loginFuncs[funcName].apply(this, funcArgs);
                }

                return applyLoginFunction;
              }();
              /**
               * @summary Log the user out.
               * @locus Client
               * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.
               */

              _proto.logout = function () {
                function logout(callback) {
                  var self = this;

                  self._loggingOut.set(true);

                  self.connection.apply('logout', [], {
                    wait: true
                  }, function (error, result) {
                    self._loggingOut.set(false);

                    if (error) {
                      callback && callback(error);
                    } else {
                      self.makeClientLoggedOut();
                      callback && callback();
                    }
                  });
                }

                return logout;
              }();
              /**
               * @summary Log out other clients logged in as the current user, but does not log out the client that calls this function.
               * @locus Client
               * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.
               */

              _proto.logoutOtherClients = function () {
                function logoutOtherClients(callback) {
                  var self = this; // We need to make two method calls: one to replace our current token,
                  // and another to remove all tokens except the current one. We want to
                  // call these two methods one after the other, without any other
                  // methods running between them. For example, we don't want `logout`
                  // to be called in between our two method calls (otherwise the second
                  // method call would return an error). Another example: we don't want
                  // logout to be called before the callback for `getNewToken`;
                  // otherwise we would momentarily log the user out and then write a
                  // new token to localStorage.
                  //
                  // To accomplish this, we make both calls as wait methods, and queue
                  // them one after the other, without spinning off the event loop in
                  // between. Even though we queue `removeOtherTokens` before
                  // `getNewToken`, we won't actually send the `removeOtherTokens` call
                  // until the `getNewToken` callback has finished running, because they
                  // are both wait methods.

                  self.connection.apply('getNewToken', [], {
                    wait: true
                  }, function (err, result) {
                    if (!err) {
                      self._storeLoginToken(self.userId(), result.token, result.tokenExpires);
                    }
                  });
                  self.connection.apply('removeOtherTokens', [], {
                    wait: true
                  }, function (err) {
                    callback && callback(err);
                  });
                }

                return logoutOtherClients;
              }();

              return AccountsClient;
            }(AccountsCommon);

            ;
            var Ap = AccountsClient.prototype;
            /**
             * @summary True if a login method (such as `Meteor.loginWithPassword`, `Meteor.loginWithFacebook`, or `Accounts.createUser`) is currently in progress. A reactive data source.
             * @locus Client
             * @importFromPackage meteor
             */

            Meteor.loggingIn = function () {
              return Accounts.loggingIn();
            };
            /**
             * @summary True if a logout method (such as `Meteor.logout`) is currently in progress. A reactive data source.
             * @locus Client
             * @importFromPackage meteor
             */

            Meteor.loggingOut = function () {
              return Accounts.loggingOut();
            }; ///
            /// LOGIN METHODS
            ///
            // Call a login method on the server.
            //
            // A login method is a method which on success calls `this.setUserId(id)` and
            // `Accounts._setLoginToken` on the server and returns an object with fields
            // 'id' (containing the user id), 'token' (containing a resume token), and
            // optionally `tokenExpires`.
            //
            // This function takes care of:
            //   - Updating the Meteor.loggingIn() reactive data source
            //   - Calling the method in 'wait' mode
            //   - On success, saving the resume token to localStorage
            //   - On success, calling Accounts.connection.setUserId()
            //   - Setting up an onReconnect handler which logs in with
            //     the resume token
            //
            // Options:
            // - methodName: The method to call (default 'login')
            // - methodArguments: The arguments for the method
            // - validateResult: If provided, will be called with the result of the
            //                 method. If it throws, the client will not be logged in (and
            //                 its error will be passed to the callback).
            // - userCallback: Will be called with no arguments once the user is fully
            //                 logged in, or with the error on error.
            //


            Ap.callLoginMethod = function (options) {
              var self = this;
              options = _.extend({
                methodName: 'login',
                methodArguments: [{}],
                _suppressLoggingIn: false
              }, options); // Set defaults for callback arguments to no-op functions; make sure we
              // override falsey values too.

              _.each(['validateResult', 'userCallback'], function (f) {
                if (!options[f]) options[f] = function () {};
              }); // Prepare callbacks: user provided and onLogin/onLoginFailure hooks.


              var loginCallbacks = _.once(function (_ref) {
                var error = _ref.error,
                    loginDetails = _ref.loginDetails;

                if (!error) {
                  self._onLoginHook.each(function (callback) {
                    callback(loginDetails);
                    return true;
                  });
                } else {
                  self._onLoginFailureHook.each(function (callback) {
                    callback({
                      error: error
                    });
                    return true;
                  });
                }

                options.userCallback(error, loginDetails);
              });

              var reconnected = false; // We want to set up onReconnect as soon as we get a result token back from
              // the server, without having to wait for subscriptions to rerun. This is
              // because if we disconnect and reconnect between getting the result and
              // getting the results of subscription rerun, we WILL NOT re-send this
              // method (because we never re-send methods whose results we've received)
              // but we WILL call loggedInAndDataReadyCallback at "reconnect quiesce"
              // time. This will lead to makeClientLoggedIn(result.id) even though we
              // haven't actually sent a login method!
              //
              // But by making sure that we send this "resume" login in that case (and
              // calling makeClientLoggedOut if it fails), we'll end up with an accurate
              // client-side userId. (It's important that livedata_connection guarantees
              // that the "reconnect quiesce"-time call to loggedInAndDataReadyCallback
              // will occur before the callback from the resume login call.)

              var onResultReceived = function (err, result) {
                if (err || !result || !result.token) {// Leave onReconnect alone if there was an error, so that if the user was
                  // already logged in they will still get logged in on reconnect.
                  // See issue #4970.
                } else {
                  // First clear out any previously set Acccounts login onReconnect
                  // callback (to make sure we don't keep piling up duplicate callbacks,
                  // which would then all be triggered when reconnecting).
                  if (self._reconnectStopper) {
                    self._reconnectStopper.stop();
                  }

                  self._reconnectStopper = DDP.onReconnect(function (conn) {
                    if (conn != self.connection) {
                      return;
                    }

                    reconnected = true; // If our token was updated in storage, use the latest one.

                    var storedToken = self._storedLoginToken();

                    if (storedToken) {
                      result = {
                        token: storedToken,
                        tokenExpires: self._storedLoginTokenExpires()
                      };
                    }

                    if (!result.tokenExpires) result.tokenExpires = self._tokenExpiration(new Date());

                    if (self._tokenExpiresSoon(result.tokenExpires)) {
                      self.makeClientLoggedOut();
                    } else {
                      self.callLoginMethod({
                        methodArguments: [{
                          resume: result.token
                        }],
                        // Reconnect quiescence ensures that the user doesn't see an
                        // intermediate state before the login method finishes. So we don't
                        // need to show a logging-in animation.
                        _suppressLoggingIn: true,
                        userCallback: function (error, loginDetails) {
                          var storedTokenNow = self._storedLoginToken();

                          if (error) {
                            // If we had a login error AND the current stored token is the
                            // one that we tried to log in with, then declare ourselves
                            // logged out. If there's a token in storage but it's not the
                            // token that we tried to log in with, we don't know anything
                            // about whether that token is valid or not, so do nothing. The
                            // periodic localStorage poll will decide if we are logged in or
                            // out with this token, if it hasn't already. Of course, even
                            // with this check, another tab could insert a new valid token
                            // immediately before we clear localStorage here, which would
                            // lead to both tabs being logged out, but by checking the token
                            // in storage right now we hope to make that unlikely to happen.
                            //
                            // If there is no token in storage right now, we don't have to
                            // do anything; whatever code removed the token from storage was
                            // responsible for calling `makeClientLoggedOut()`, or the
                            // periodic localStorage poll will call `makeClientLoggedOut`
                            // eventually if another tab wiped the token from storage.
                            if (storedTokenNow && storedTokenNow === result.token) {
                              self.makeClientLoggedOut();
                            }
                          } // Possibly a weird callback to call, but better than nothing if
                          // there is a reconnect between "login result received" and "data
                          // ready".


                          loginCallbacks({
                            error: error,
                            loginDetails: loginDetails
                          });
                        }
                      });
                    }
                  });
                }
              }; // This callback is called once the local cache of the current-user
              // subscription (and all subscriptions, in fact) are guaranteed to be up to
              // date.


              var loggedInAndDataReadyCallback = function (error, result) {
                // If the login method returns its result but the connection is lost
                // before the data is in the local cache, it'll set an onReconnect (see
                // above). The onReconnect will try to log in using the token, and *it*
                // will call userCallback via its own version of this
                // loggedInAndDataReadyCallback. So we don't have to do anything here.
                if (reconnected) return; // Note that we need to call this even if _suppressLoggingIn is true,
                // because it could be matching a _setLoggingIn(true) from a
                // half-completed pre-reconnect login method.

                self._setLoggingIn(false);

                if (error || !result) {
                  error = error || new Error("No result from call to " + options.methodName);
                  loginCallbacks({
                    error: error
                  });
                  return;
                }

                try {
                  options.validateResult(result);
                } catch (e) {
                  loginCallbacks({
                    error: e
                  });
                  return;
                } // Make the client logged in. (The user data should already be loaded!)


                self.makeClientLoggedIn(result.id, result.token, result.tokenExpires);
                loginCallbacks({
                  loginDetails: {
                    type: result.type
                  }
                });
              };

              if (!options._suppressLoggingIn) self._setLoggingIn(true);
              self.connection.apply(options.methodName, options.methodArguments, {
                wait: true,
                onResultReceived: onResultReceived
              }, loggedInAndDataReadyCallback);
            };

            Ap.makeClientLoggedOut = function () {
              // Ensure client was successfully logged in before running logout hooks.
              if (this.connection._userId) {
                this._onLogoutHook.each(function (callback) {
                  callback();
                  return true;
                });
              }

              this._unstoreLoginToken();

              this.connection.setUserId(null);
              this._reconnectStopper && this._reconnectStopper.stop();
            };

            Ap.makeClientLoggedIn = function (userId, token, tokenExpires) {
              this._storeLoginToken(userId, token, tokenExpires);

              this.connection.setUserId(userId);
            };
            /**
             * @summary Log the user out.
             * @locus Client
             * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.
             * @importFromPackage meteor
             */

            Meteor.logout = function (callback) {
              return Accounts.logout(callback);
            };
            /**
             * @summary Log out other clients logged in as the current user, but does not log out the client that calls this function.
             * @locus Client
             * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.
             * @importFromPackage meteor
             */

            Meteor.logoutOtherClients = function (callback) {
              return Accounts.logoutOtherClients(callback);
            }; ///
            /// LOGIN SERVICES
            ///
            // A reactive function returning whether the loginServiceConfiguration
            // subscription is ready. Used by accounts-ui to hide the login button
            // until we have all the configuration loaded
            //


            Ap.loginServicesConfigured = function () {
              return this._loginServicesHandle.ready();
            }; // Some login services such as the redirect login flow or the resume
            // login handler can log the user in at page load time.  The
            // Meteor.loginWithX functions have a callback argument, but the
            // callback function instance won't be in memory any longer if the
            // page was reloaded.  The `onPageLoadLogin` function allows a
            // callback to be registered for the case where the login was
            // initiated in a previous VM, and we now have the result of the login
            // attempt in a new VM.
            // Register a callback to be called if we have information about a
            // login attempt at page load time.  Call the callback immediately if
            // we already have the page load login attempt info, otherwise stash
            // the callback to be called if and when we do get the attempt info.
            //


            Ap.onPageLoadLogin = function (f) {
              if (this._pageLoadLoginAttemptInfo) {
                f(this._pageLoadLoginAttemptInfo);
              } else {
                this._pageLoadLoginCallbacks.push(f);
              }
            }; // Receive the information about the login attempt at page load time.
            // Call registered callbacks, and also record the info in case
            // someone's callback hasn't been registered yet.
            //


            Ap._pageLoadLogin = function (attemptInfo) {
              if (this._pageLoadLoginAttemptInfo) {
                Meteor._debug("Ignoring unexpected duplicate page load login attempt info");

                return;
              }

              _.each(this._pageLoadLoginCallbacks, function (callback) {
                callback(attemptInfo);
              });

              this._pageLoadLoginCallbacks = [];
              this._pageLoadLoginAttemptInfo = attemptInfo;
            }; ///
            /// HANDLEBARS HELPERS
            ///
            // If our app has a Blaze, register the {{currentUser}} and {{loggingIn}}
            // global helpers.


            if (Package.blaze) {
              /**
               * @global
               * @name  currentUser
               * @isHelper true
               * @summary Calls [Meteor.user()](#meteor_user). Use `{{#if currentUser}}` to check whether the user is logged in.
               */
              Package.blaze.Blaze.Template.registerHelper('currentUser', function () {
                return Meteor.user();
              });
              /**
               * @global
               * @name  loggingIn
               * @isHelper true
               * @summary Calls [Meteor.loggingIn()](#meteor_loggingin).
               */

              Package.blaze.Blaze.Template.registerHelper('loggingIn', function () {
                return Meteor.loggingIn();
              });
              /**
               * @global
               * @name  loggingOut
               * @isHelper true
               * @summary Calls [Meteor.loggingOut()](#meteor_loggingout).
               */

              Package.blaze.Blaze.Template.registerHelper('loggingOut', function () {
                return Meteor.loggingOut();
              });
              /**
               * @global
               * @name  loggingInOrOut
               * @isHelper true
               * @summary Calls [Meteor.loggingIn()](#meteor_loggingin) or [Meteor.loggingOut()](#meteor_loggingout).
               */

              Package.blaze.Blaze.Template.registerHelper('loggingInOrOut', function () {
                return Meteor.loggingIn() || Meteor.loggingOut();
              });
            }
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "accounts_common.js": function (_require4, _exports4, _module3) {

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                   //
            // packages/accounts-base/accounts_common.js                                                                         //
            //                                                                                                                   //
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module3.export({
              AccountsCommon: function () {
                return AccountsCommon;
              }
            });

            var AccountsCommon =
            /*#__PURE__*/
            function () {
              function AccountsCommon(options) {
                // Currently this is read directly by packages like accounts-password
                // and accounts-ui-unstyled.
                this._options = {}; // Note that setting this.connection = null causes this.users to be a
                // LocalCollection, which is not what we want.

                this.connection = undefined;

                this._initConnection(options || {}); // There is an allow call in accounts_server.js that restricts writes to
                // this collection.


                this.users = new Mongo.Collection("users", {
                  _preventAutopublish: true,
                  connection: this.connection
                }); // Callback exceptions are printed with Meteor._debug and ignored.

                this._onLoginHook = new Hook({
                  bindEnvironment: false,
                  debugPrintExceptions: "onLogin callback"
                });
                this._onLoginFailureHook = new Hook({
                  bindEnvironment: false,
                  debugPrintExceptions: "onLoginFailure callback"
                });
                this._onLogoutHook = new Hook({
                  bindEnvironment: false,
                  debugPrintExceptions: "onLogout callback"
                });
              }
              /**
               * @summary Get the current user id, or `null` if no user is logged in. A reactive data source.
               * @locus Anywhere
               */

              var _proto = AccountsCommon.prototype;

              _proto.userId = function () {
                function userId() {
                  throw new Error("userId method not implemented");
                }

                return userId;
              }();
              /**
               * @summary Get the current user record, or `null` if no user is logged in. A reactive data source.
               * @locus Anywhere
               */

              _proto.user = function () {
                function user() {
                  var userId = this.userId();
                  return userId ? this.users.findOne(userId) : null;
                }

                return user;
              }(); // Set up config for the accounts system. Call this on both the client
              // and the server.
              //
              // Note that this method gets overridden on AccountsServer.prototype, but
              // the overriding method calls the overridden method.
              //
              // XXX we should add some enforcement that this is called on both the
              // client and the server. Otherwise, a user can
              // 'forbidClientAccountCreation' only on the client and while it looks
              // like their app is secure, the server will still accept createUser
              // calls. https://github.com/meteor/meteor/issues/828
              //
              // @param options {Object} an object with fields:
              // - sendVerificationEmail {Boolean}
              //     Send email address verification emails to new users created from
              //     client signups.
              // - forbidClientAccountCreation {Boolean}
              //     Do not allow clients to create accounts directly.
              // - restrictCreationByEmailDomain {Function or String}
              //     Require created users to have an email matching the function or
              //     having the string as domain.
              // - loginExpirationInDays {Number}
              //     Number of days since login until a user is logged out (login token
              //     expires).
              // - passwordResetTokenExpirationInDays {Number}
              //     Number of days since password reset token creation until the
              //     token cannt be used any longer (password reset token expires).
              // - ambiguousErrorMessages {Boolean}
              //     Return ambiguous error messages from login failures to prevent
              //     user enumeration.
              // - bcryptRounds {Number}
              //     Allows override of number of bcrypt rounds (aka work factor) used
              //     to store passwords.

              /**
               * @summary Set global accounts options.
               * @locus Anywhere
               * @param {Object} options
               * @param {Boolean} options.sendVerificationEmail New users with an email address will receive an address verification email.
               * @param {Boolean} options.forbidClientAccountCreation Calls to [`createUser`](#accounts_createuser) from the client will be rejected. In addition, if you are using [accounts-ui](#accountsui), the "Create account" link will not be available.
               * @param {String | Function} options.restrictCreationByEmailDomain If set to a string, only allows new users if the domain part of their email address matches the string. If set to a function, only allows new users if the function returns true.  The function is passed the full email address of the proposed new user.  Works with password-based sign-in and external services that expose email addresses (Google, Facebook, GitHub). All existing users still can log in after enabling this option. Example: `Accounts.config({ restrictCreationByEmailDomain: 'school.edu' })`.
               * @param {Number} options.loginExpirationInDays The number of days from when a user logs in until their token expires and they are logged out. Defaults to 90. Set to `null` to disable login expiration.
               * @param {String} options.oauthSecretKey When using the `oauth-encryption` package, the 16 byte key using to encrypt sensitive account credentials in the database, encoded in base64.  This option may only be specifed on the server.  See packages/oauth-encryption/README.md for details.
               * @param {Number} options.passwordResetTokenExpirationInDays The number of days from when a link to reset password is sent until token expires and user can't reset password with the link anymore. Defaults to 3.
               * @param {Number} options.passwordEnrollTokenExpirationInDays The number of days from when a link to set inital password is sent until token expires and user can't set password with the link anymore. Defaults to 30.
               * @param {Boolean} options.ambiguousErrorMessages Return ambiguous error messages from login failures to prevent user enumeration. Defaults to false.
               */

              _proto.config = function () {
                function config(options) {
                  var self = this; // We don't want users to accidentally only call Accounts.config on the
                  // client, where some of the options will have partial effects (eg removing
                  // the "create account" button from accounts-ui if forbidClientAccountCreation
                  // is set, or redirecting Google login to a specific-domain page) without
                  // having their full effects.

                  if (Meteor.isServer) {
                    __meteor_runtime_config__.accountsConfigCalled = true;
                  } else if (!__meteor_runtime_config__.accountsConfigCalled) {
                    // XXX would be nice to "crash" the client and replace the UI with an error
                    // message, but there's no trivial way to do this.
                    Meteor._debug("Accounts.config was called on the client but not on the " + "server; some configuration options may not take effect.");
                  } // We need to validate the oauthSecretKey option at the time
                  // Accounts.config is called. We also deliberately don't store the
                  // oauthSecretKey in Accounts._options.


                  if (_.has(options, "oauthSecretKey")) {
                    if (Meteor.isClient) throw new Error("The oauthSecretKey option may only be specified on the server");
                    if (!Package["oauth-encryption"]) throw new Error("The oauth-encryption package must be loaded to set oauthSecretKey");
                    Package["oauth-encryption"].OAuthEncryption.loadKey(options.oauthSecretKey);
                    options = _.omit(options, "oauthSecretKey");
                  } // validate option keys


                  var VALID_KEYS = ["sendVerificationEmail", "forbidClientAccountCreation", "passwordEnrollTokenExpirationInDays", "restrictCreationByEmailDomain", "loginExpirationInDays", "passwordResetTokenExpirationInDays", "ambiguousErrorMessages", "bcryptRounds"];

                  _.each(_.keys(options), function (key) {
                    if (!_.contains(VALID_KEYS, key)) {
                      throw new Error("Accounts.config: Invalid key: " + key);
                    }
                  }); // set values in Accounts._options


                  _.each(VALID_KEYS, function (key) {
                    if (key in options) {
                      if (key in self._options) {
                        throw new Error("Can't set `" + key + "` more than once");
                      }

                      self._options[key] = options[key];
                    }
                  });
                }

                return config;
              }();
              /**
               * @summary Register a callback to be called after a login attempt succeeds.
               * @locus Anywhere
               * @param {Function} func The callback to be called when login is successful.
               *                        The callback receives a single object that
               *                        holds login details. This object contains the login
               *                        result type (password, resume, etc.) on both the
               *                        client and server. `onLogin` callbacks registered
               *                        on the server also receive extra data, such
               *                        as user details, connection information, etc.
               */

              _proto.onLogin = function () {
                function onLogin(func) {
                  return this._onLoginHook.register(func);
                }

                return onLogin;
              }();
              /**
               * @summary Register a callback to be called after a login attempt fails.
               * @locus Anywhere
               * @param {Function} func The callback to be called after the login has failed.
               */

              _proto.onLoginFailure = function () {
                function onLoginFailure(func) {
                  return this._onLoginFailureHook.register(func);
                }

                return onLoginFailure;
              }();
              /**
               * @summary Register a callback to be called after a logout attempt succeeds.
               * @locus Anywhere
               * @param {Function} func The callback to be called when logout is successful.
               */

              _proto.onLogout = function () {
                function onLogout(func) {
                  return this._onLogoutHook.register(func);
                }

                return onLogout;
              }();

              _proto._initConnection = function () {
                function _initConnection(options) {
                  if (!Meteor.isClient) {
                    return;
                  } // The connection used by the Accounts system. This is the connection
                  // that will get logged in by Meteor.login(), and this is the
                  // connection whose login state will be reflected by Meteor.userId().
                  //
                  // It would be much preferable for this to be in accounts_client.js,
                  // but it has to be here because it's needed to create the
                  // Meteor.users collection.


                  if (options.connection) {
                    this.connection = options.connection;
                  } else if (options.ddpUrl) {
                    this.connection = DDP.connect(options.ddpUrl);
                  } else if (typeof __meteor_runtime_config__ !== "undefined" && __meteor_runtime_config__.ACCOUNTS_CONNECTION_URL) {
                    // Temporary, internal hook to allow the server to point the client
                    // to a different authentication server. This is for a very
                    // particular use case that comes up when implementing a oauth
                    // server. Unsupported and may go away at any point in time.
                    //
                    // We will eventually provide a general way to use account-base
                    // against any DDP connection, not just one special one.
                    this.connection = DDP.connect(__meteor_runtime_config__.ACCOUNTS_CONNECTION_URL);
                  } else {
                    this.connection = Meteor.connection;
                  }
                }

                return _initConnection;
              }();

              _proto._getTokenLifetimeMs = function () {
                function _getTokenLifetimeMs() {
                  // When loginExpirationInDays is set to null, we'll use a really high
                  // number of days (LOGIN_UNEXPIRABLE_TOKEN_DAYS) to simulate an
                  // unexpiring token.
                  var loginExpirationInDays = this._options.loginExpirationInDays === null ? LOGIN_UNEXPIRING_TOKEN_DAYS : this._options.loginExpirationInDays;
                  return (loginExpirationInDays || DEFAULT_LOGIN_EXPIRATION_DAYS) * 24 * 60 * 60 * 1000;
                }

                return _getTokenLifetimeMs;
              }();

              _proto._getPasswordResetTokenLifetimeMs = function () {
                function _getPasswordResetTokenLifetimeMs() {
                  return (this._options.passwordResetTokenExpirationInDays || DEFAULT_PASSWORD_RESET_TOKEN_EXPIRATION_DAYS) * 24 * 60 * 60 * 1000;
                }

                return _getPasswordResetTokenLifetimeMs;
              }();

              _proto._getPasswordEnrollTokenLifetimeMs = function () {
                function _getPasswordEnrollTokenLifetimeMs() {
                  return (this._options.passwordEnrollTokenExpirationInDays || DEFAULT_PASSWORD_ENROLL_TOKEN_EXPIRATION_DAYS) * 24 * 60 * 60 * 1000;
                }

                return _getPasswordEnrollTokenLifetimeMs;
              }();

              _proto._tokenExpiration = function () {
                function _tokenExpiration(when) {
                  // We pass when through the Date constructor for backwards compatibility;
                  // `when` used to be a number.
                  return new Date(new Date(when).getTime() + this._getTokenLifetimeMs());
                }

                return _tokenExpiration;
              }();

              _proto._tokenExpiresSoon = function () {
                function _tokenExpiresSoon(when) {
                  var minLifetimeMs = .1 * this._getTokenLifetimeMs();

                  var minLifetimeCapMs = MIN_TOKEN_LIFETIME_CAP_SECS * 1000;
                  if (minLifetimeMs > minLifetimeCapMs) minLifetimeMs = minLifetimeCapMs;
                  return new Date() > new Date(when) - minLifetimeMs;
                }

                return _tokenExpiresSoon;
              }();

              return AccountsCommon;
            }();

            var Ap = AccountsCommon.prototype; // Note that Accounts is defined separately in accounts_client.js and
            // accounts_server.js.

            /**
             * @summary Get the current user id, or `null` if no user is logged in. A reactive data source.
             * @locus Anywhere but publish functions
             * @importFromPackage meteor
             */

            Meteor.userId = function () {
              return Accounts.userId();
            };
            /**
             * @summary Get the current user record, or `null` if no user is logged in. A reactive data source.
             * @locus Anywhere but publish functions
             * @importFromPackage meteor
             */

            Meteor.user = function () {
              return Accounts.user();
            }; // how long (in days) until a login token expires


            var DEFAULT_LOGIN_EXPIRATION_DAYS = 90; // Expose for testing.

            Ap.DEFAULT_LOGIN_EXPIRATION_DAYS = DEFAULT_LOGIN_EXPIRATION_DAYS; // how long (in days) until reset password token expires

            var DEFAULT_PASSWORD_RESET_TOKEN_EXPIRATION_DAYS = 3; // how long (in days) until enrol password token expires

            var DEFAULT_PASSWORD_ENROLL_TOKEN_EXPIRATION_DAYS = 30; // Clients don't try to auto-login with a token that is going to expire within
            // .1 * DEFAULT_LOGIN_EXPIRATION_DAYS, capped at MIN_TOKEN_LIFETIME_CAP_SECS.
            // Tries to avoid abrupt disconnects from expiring tokens.

            var MIN_TOKEN_LIFETIME_CAP_SECS = 3600; // one hour
            // how often (in milliseconds) we check for expired tokens

            EXPIRE_TOKENS_INTERVAL_MS = 600 * 1000; // 10 minutes
            // how long we wait before logging out clients when Meteor.logoutOtherClients is
            // called

            CONNECTION_CLOSE_DELAY_MS = 10 * 1000; // A large number of expiration days (approximately 100 years worth) that is
            // used when creating unexpiring tokens.

            var LOGIN_UNEXPIRING_TOKEN_DAYS = 365 * 100; // Expose for testing.

            Ap.LOGIN_UNEXPIRING_TOKEN_DAYS = LOGIN_UNEXPIRING_TOKEN_DAYS; // loginServiceConfiguration and ConfigError are maintained for backwards compatibility

            Meteor.startup(function () {
              var ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;
              Ap.loginServiceConfiguration = ServiceConfiguration.configurations;
              Ap.ConfigError = ServiceConfiguration.ConfigError;
            }); // Thrown when the user cancels the login process (eg, closes an oauth
            // popup, declines retina scan, etc)

            var lceName = 'Accounts.LoginCancelledError';
            Ap.LoginCancelledError = Meteor.makeErrorType(lceName, function (description) {
              this.message = description;
            });
            Ap.LoginCancelledError.prototype.name = lceName; // This is used to transmit specific subclass errors over the wire. We should
            // come up with a more generic way to do this (eg, with some sort of symbolic
            // error code rather than a number).

            Ap.LoginCancelledError.numericError = 0x8acdc2f;
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "localstorage_token.js": function (_require5, _exports5, _module4) {

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                   //
            // packages/accounts-base/localstorage_token.js                                                                      //
            //                                                                                                                   //
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var AccountsClient;
            _module4.watch(_require5("./accounts_client.js"), {
              AccountsClient: function (v) {
                AccountsClient = v;
              }
            }, 0);
            var Ap = AccountsClient.prototype; // This file deals with storing a login token and user id in the
            // browser's localStorage facility. It polls local storage every few
            // seconds to synchronize login state between multiple tabs in the same
            // browser.
            // Login with a Meteor access token. This is the only public function
            // here.

            Meteor.loginWithToken = function (token, callback) {
              return Accounts.loginWithToken(token, callback);
            };

            Ap.loginWithToken = function (token, callback) {
              this.callLoginMethod({
                methodArguments: [{
                  resume: token
                }],
                userCallback: callback
              });
            }; // Semi-internal API. Call this function to re-enable auto login after
            // if it was disabled at startup.


            Ap._enableAutoLogin = function () {
              this._autoLoginEnabled = true;

              this._pollStoredLoginToken();
            }; ///
            /// STORING
            ///
            // Call this from the top level of the test file for any test that does
            // logging in and out, to protect multiple tabs running the same tests
            // simultaneously from interfering with each others' localStorage.


            Ap._isolateLoginTokenForTest = function () {
              this.LOGIN_TOKEN_KEY = this.LOGIN_TOKEN_KEY + Random.id();
              this.USER_ID_KEY = this.USER_ID_KEY + Random.id();
            };

            Ap._storeLoginToken = function (userId, token, tokenExpires) {
              Meteor._localStorage.setItem(this.USER_ID_KEY, userId);

              Meteor._localStorage.setItem(this.LOGIN_TOKEN_KEY, token);

              if (!tokenExpires) tokenExpires = this._tokenExpiration(new Date());

              Meteor._localStorage.setItem(this.LOGIN_TOKEN_EXPIRES_KEY, tokenExpires); // to ensure that the localstorage poller doesn't end up trying to
              // connect a second time


              this._lastLoginTokenWhenPolled = token;
            };

            Ap._unstoreLoginToken = function () {
              Meteor._localStorage.removeItem(this.USER_ID_KEY);

              Meteor._localStorage.removeItem(this.LOGIN_TOKEN_KEY);

              Meteor._localStorage.removeItem(this.LOGIN_TOKEN_EXPIRES_KEY); // to ensure that the localstorage poller doesn't end up trying to
              // connect a second time


              this._lastLoginTokenWhenPolled = null;
            }; // This is private, but it is exported for now because it is used by a
            // test in accounts-password.
            //


            Ap._storedLoginToken = function () {
              return Meteor._localStorage.getItem(this.LOGIN_TOKEN_KEY);
            };

            Ap._storedLoginTokenExpires = function () {
              return Meteor._localStorage.getItem(this.LOGIN_TOKEN_EXPIRES_KEY);
            };

            Ap._storedUserId = function () {
              return Meteor._localStorage.getItem(this.USER_ID_KEY);
            };

            Ap._unstoreLoginTokenIfExpiresSoon = function () {
              var tokenExpires = this._storedLoginTokenExpires();

              if (tokenExpires && this._tokenExpiresSoon(new Date(tokenExpires))) {
                this._unstoreLoginToken();
              }
            }; ///
            /// AUTO-LOGIN
            ///


            Ap._initLocalStorage = function () {
              var self = this; // Key names to use in localStorage

              self.LOGIN_TOKEN_KEY = "Meteor.loginToken";
              self.LOGIN_TOKEN_EXPIRES_KEY = "Meteor.loginTokenExpires";
              self.USER_ID_KEY = "Meteor.userId";
              var rootUrlPathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;

              if (rootUrlPathPrefix || this.connection !== Meteor.connection) {
                // We want to keep using the same keys for existing apps that do not
                // set a custom ROOT_URL_PATH_PREFIX, so that most users will not have
                // to log in again after an app updates to a version of Meteor that
                // contains this code, but it's generally preferable to namespace the
                // keys so that connections from distinct apps to distinct DDP URLs
                // will be distinct in Meteor._localStorage.
                var namespace = ":" + this.connection._stream.rawUrl;

                if (rootUrlPathPrefix) {
                  namespace += ":" + rootUrlPathPrefix;
                }

                self.LOGIN_TOKEN_KEY += namespace;
                self.LOGIN_TOKEN_EXPIRES_KEY += namespace;
                self.USER_ID_KEY += namespace;
              }

              if (self._autoLoginEnabled) {
                // Immediately try to log in via local storage, so that any DDP
                // messages are sent after we have established our user account
                self._unstoreLoginTokenIfExpiresSoon();

                var token = self._storedLoginToken();

                if (token) {
                  // On startup, optimistically present us as logged in while the
                  // request is in flight. This reduces page flicker on startup.
                  var userId = self._storedUserId();

                  userId && self.connection.setUserId(userId);
                  self.loginWithToken(token, function (err) {
                    if (err) {
                      Meteor._debug("Error logging in with token: " + err);

                      self.makeClientLoggedOut();
                    }

                    self._pageLoadLogin({
                      type: "resume",
                      allowed: !err,
                      error: err,
                      methodName: "login",
                      // XXX This is duplicate code with loginWithToken, but
                      // loginWithToken can also be called at other times besides
                      // page load.
                      methodArguments: [{
                        resume: token
                      }]
                    });
                  });
                }
              } // Poll local storage every 3 seconds to login if someone logged in in
              // another tab


              self._lastLoginTokenWhenPolled = token;

              if (self._pollIntervalTimer) {
                // Unlikely that _initLocalStorage will be called more than once for
                // the same AccountsClient instance, but just in case...
                clearInterval(self._pollIntervalTimer);
              }

              self._pollIntervalTimer = setInterval(function () {
                self._pollStoredLoginToken();
              }, 3000);
            };

            Ap._pollStoredLoginToken = function () {
              var self = this;

              if (!self._autoLoginEnabled) {
                return;
              }

              var currentLoginToken = self._storedLoginToken(); // != instead of !== just to make sure undefined and null are treated the same


              if (self._lastLoginTokenWhenPolled != currentLoginToken) {
                if (currentLoginToken) {
                  self.loginWithToken(currentLoginToken, function (err) {
                    if (err) {
                      self.makeClientLoggedOut();
                    }
                  });
                } else {
                  self.logout();
                }
              }

              self._lastLoginTokenWhenPolled = currentLoginToken;
            };
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "url_client.js": function (_require6, _exports6, _module5) {

            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                   //
            // packages/accounts-base/url_client.js                                                                              //
            //                                                                                                                   //
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            _module5.export({
              AccountsTest: function () {
                return AccountsTest;
              }
            });
            var AccountsClient;
            _module5.watch(_require6("./accounts_client.js"), {
              AccountsClient: function (v) {
                AccountsClient = v;
              }
            }, 0);
            var Ap = AccountsClient.prototype; // All of the special hash URLs we support for accounts interactions

            var accountsPaths = ["reset-password", "verify-email", "enroll-account"];
            var savedHash = window.location.hash;

            Ap._initUrlMatching = function () {
              // By default, allow the autologin process to happen.
              this._autoLoginEnabled = true; // We only support one callback per URL.

              this._accountsCallbacks = {}; // Try to match the saved value of window.location.hash.

              this._attemptToMatchHash();
            }; // Separate out this functionality for testing


            Ap._attemptToMatchHash = function () {
              attemptToMatchHash(this, savedHash, defaultSuccessHandler);
            }; // Note that both arguments are optional and are currently only passed by
            // accounts_url_tests.js.


            function attemptToMatchHash(accounts, hash, success) {
              _.each(accountsPaths, function (urlPart) {
                var token;
                var tokenRegex = new RegExp("^\\#\\/" + urlPart + "\\/(.*)$");
                var match = hash.match(tokenRegex);

                if (match) {
                  token = match[1]; // XXX COMPAT WITH 0.9.3

                  if (urlPart === "reset-password") {
                    accounts._resetPasswordToken = token;
                  } else if (urlPart === "verify-email") {
                    accounts._verifyEmailToken = token;
                  } else if (urlPart === "enroll-account") {
                    accounts._enrollAccountToken = token;
                  }
                } else {
                  return;
                } // If no handlers match the hash, then maybe it's meant to be consumed
                // by some entirely different code, so we only clear it the first time
                // a handler successfully matches. Note that later handlers reuse the
                // savedHash, so clearing window.location.hash here will not interfere
                // with their needs.


                window.location.hash = ""; // Do some stuff with the token we matched

                success.call(accounts, token, urlPart);
              });
            }

            function defaultSuccessHandler(token, urlPart) {
              var self = this; // put login in a suspended state to wait for the interaction to finish

              self._autoLoginEnabled = false; // wait for other packages to register callbacks

              Meteor.startup(function () {
                // if a callback has been registered for this kind of token, call it
                if (self._accountsCallbacks[urlPart]) {
                  self._accountsCallbacks[urlPart](token, function () {
                    self._enableAutoLogin();
                  });
                }
              });
            } // Export for testing


            var AccountsTest = {
              attemptToMatchHash: function (hash, success) {
                return attemptToMatchHash(Accounts, hash, success);
              }
            };

            // XXX these should be moved to accounts-password eventually. Right now
            // this is prevented by the need to set autoLoginEnabled=false, but in
            // some bright future we won't need to do that anymore.

            /**
             * @summary Register a function to call when a reset password link is clicked
             * in an email sent by
             * [`Accounts.sendResetPasswordEmail`](#accounts_sendresetpasswordemail).
             * This function should be called in top-level code, not inside
             * `Meteor.startup()`.
             * @memberof! Accounts
             * @name onResetPasswordLink
             * @param  {Function} callback The function to call. It is given two arguments:
             *
             * 1. `token`: A password reset token that can be passed to
             * [`Accounts.resetPassword`](#accounts_resetpassword).
             * 2. `done`: A function to call when the password reset UI flow is complete. The normal
             * login process is suspended until this function is called, so that the
             * password for user A can be reset even if user B was logged in.
             * @locus Client
             */
            Ap.onResetPasswordLink = function (callback) {
              if (this._accountsCallbacks["reset-password"]) {
                Meteor._debug("Accounts.onResetPasswordLink was called more than once. " + "Only one callback added will be executed.");
              }

              this._accountsCallbacks["reset-password"] = callback;
            };
            /**
             * @summary Register a function to call when an email verification link is
             * clicked in an email sent by
             * [`Accounts.sendVerificationEmail`](#accounts_sendverificationemail).
             * This function should be called in top-level code, not inside
             * `Meteor.startup()`.
             * @memberof! Accounts
             * @name onEmailVerificationLink
             * @param  {Function} callback The function to call. It is given two arguments:
             *
             * 1. `token`: An email verification token that can be passed to
             * [`Accounts.verifyEmail`](#accounts_verifyemail).
             * 2. `done`: A function to call when the email verification UI flow is complete.
             * The normal login process is suspended until this function is called, so
             * that the user can be notified that they are verifying their email before
             * being logged in.
             * @locus Client
             */

            Ap.onEmailVerificationLink = function (callback) {
              if (this._accountsCallbacks["verify-email"]) {
                Meteor._debug("Accounts.onEmailVerificationLink was called more than once. " + "Only one callback added will be executed.");
              }

              this._accountsCallbacks["verify-email"] = callback;
            };
            /**
             * @summary Register a function to call when an account enrollment link is
             * clicked in an email sent by
             * [`Accounts.sendEnrollmentEmail`](#accounts_sendenrollmentemail).
             * This function should be called in top-level code, not inside
             * `Meteor.startup()`.
             * @memberof! Accounts
             * @name onEnrollmentLink
             * @param  {Function} callback The function to call. It is given two arguments:
             *
             * 1. `token`: A password reset token that can be passed to
             * [`Accounts.resetPassword`](#accounts_resetpassword) to give the newly
             * enrolled account a password.
             * 2. `done`: A function to call when the enrollment UI flow is complete.
             * The normal login process is suspended until this function is called, so that
             * user A can be enrolled even if user B was logged in.
             * @locus Client
             */

            Ap.onEnrollmentLink = function (callback) {
              if (this._accountsCallbacks["enroll-account"]) {
                Meteor._debug("Accounts.onEnrollmentLink was called more than once. " + "Only one callback added will be executed.");
              }

              this._accountsCallbacks["enroll-account"] = callback;
            };
            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  var _exports2 = _require2("/node_modules/meteor/accounts-base/client_main.js");

  /* Exports */
  Package._define("accounts-base", _exports2, {
    Accounts: Accounts
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

	/* Imports */
	var Meteor = Package.meteor.Meteor;
	var global = Package.meteor.global;
	var meteorEnv = Package.meteor.meteorEnv;

	/* Package-scope variables */
	var SHA256;

	(function () {

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//                                                                                                            //
		// packages/sha/sha256.js                                                                                     //
		//                                                                                                            //
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//
		/// METEOR WRAPPER
		//
		SHA256 = function () {

			/**
   *
   *  Secure Hash Algorithm (SHA256)
   *  http://www.webtoolkit.info/javascript-sha256.html
   *  http://anmar.eu.org/projects/jssha2/
   *
   *  Original code by Angel Marin, Paul Johnston.
   *
   **/

			function SHA256(s) {

				var chrsz = 8;
				var hexcase = 0;

				function safe_add(x, y) {
					var lsw = (x & 0xFFFF) + (y & 0xFFFF);
					var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
					return msw << 16 | lsw & 0xFFFF;
				}

				function S(X, n) {
					return X >>> n | X << 32 - n;
				}
				function R(X, n) {
					return X >>> n;
				}
				function Ch(x, y, z) {
					return x & y ^ ~x & z;
				}
				function Maj(x, y, z) {
					return x & y ^ x & z ^ y & z;
				}
				function Sigma0256(x) {
					return S(x, 2) ^ S(x, 13) ^ S(x, 22);
				}
				function Sigma1256(x) {
					return S(x, 6) ^ S(x, 11) ^ S(x, 25);
				}
				function Gamma0256(x) {
					return S(x, 7) ^ S(x, 18) ^ R(x, 3);
				}
				function Gamma1256(x) {
					return S(x, 17) ^ S(x, 19) ^ R(x, 10);
				}

				function core_sha256(m, l) {
					var K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);
					var HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);
					var W = new Array(64);
					var a, b, c, d, e, f, g, h, i, j;
					var T1, T2;

					m[l >> 5] |= 0x80 << 24 - l % 32;
					m[(l + 64 >> 9 << 4) + 15] = l;

					for (var i = 0; i < m.length; i += 16) {
						a = HASH[0];
						b = HASH[1];
						c = HASH[2];
						d = HASH[3];
						e = HASH[4];
						f = HASH[5];
						g = HASH[6];
						h = HASH[7];

						for (var j = 0; j < 64; j++) {
							if (j < 16) W[j] = m[j + i];else W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);

							T1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);
							T2 = safe_add(Sigma0256(a), Maj(a, b, c));

							h = g;
							g = f;
							f = e;
							e = safe_add(d, T1);
							d = c;
							c = b;
							b = a;
							a = safe_add(T1, T2);
						}

						HASH[0] = safe_add(a, HASH[0]);
						HASH[1] = safe_add(b, HASH[1]);
						HASH[2] = safe_add(c, HASH[2]);
						HASH[3] = safe_add(d, HASH[3]);
						HASH[4] = safe_add(e, HASH[4]);
						HASH[5] = safe_add(f, HASH[5]);
						HASH[6] = safe_add(g, HASH[6]);
						HASH[7] = safe_add(h, HASH[7]);
					}
					return HASH;
				}

				function str2binb(str) {
					var bin = Array();
					var mask = (1 << chrsz) - 1;
					for (var i = 0; i < str.length * chrsz; i += chrsz) {
						bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << 24 - i % 32;
					}
					return bin;
				}

				function Utf8Encode(string) {
					// METEOR change:
					// The webtoolkit.info version of this code added this
					// Utf8Encode function (which does seem necessary for dealing
					// with arbitrary Unicode), but the following line seems
					// problematic:
					//
					// string = string.replace(/\r\n/g,"\n");
					var utftext = "";

					for (var n = 0; n < string.length; n++) {

						var c = string.charCodeAt(n);

						if (c < 128) {
							utftext += String.fromCharCode(c);
						} else if (c > 127 && c < 2048) {
							utftext += String.fromCharCode(c >> 6 | 192);
							utftext += String.fromCharCode(c & 63 | 128);
						} else {
							utftext += String.fromCharCode(c >> 12 | 224);
							utftext += String.fromCharCode(c >> 6 & 63 | 128);
							utftext += String.fromCharCode(c & 63 | 128);
						}
					}

					return utftext;
				}

				function binb2hex(binarray) {
					var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
					var str = "";
					for (var i = 0; i < binarray.length * 4; i++) {
						str += hex_tab.charAt(binarray[i >> 2] >> (3 - i % 4) * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> (3 - i % 4) * 8 & 0xF);
					}
					return str;
				}

				s = Utf8Encode(s);
				return binb2hex(core_sha256(str2binb(s), s.length * chrsz));
			}

			/// METEOR WRAPPER
			return SHA256;
		}();

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	}).call(this);

	/* Exports */
	Package._define("sha", {
		SHA256: SHA256
	});
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var Random = Package.random.Random;
  var check = Package.check.check;
  var Match = Package.check.Match;
  var SHA256 = Package.sha.SHA256;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  /* Package-scope variables */
  var BigInteger, SRP;

  var _require = meteorInstall({ "node_modules": { "meteor": { "srp": { "biginteger.js": function () {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                  //
            // packages/srp/biginteger.js                                                                                       //
            //                                                                                                                  //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            /// METEOR WRAPPER
            BigInteger = function () {
              /// BEGIN jsbn.js

              /*
               * Copyright (c) 2003-2005  Tom Wu
               * All Rights Reserved.
               *
               * Permission is hereby granted, free of charge, to any person obtaining
               * a copy of this software and associated documentation files (the
               * "Software"), to deal in the Software without restriction, including
               * without limitation the rights to use, copy, modify, merge, publish,
               * distribute, sublicense, and/or sell copies of the Software, and to
               * permit persons to whom the Software is furnished to do so, subject to
               * the following conditions:
               *
               * The above copyright notice and this permission notice shall be
               * included in all copies or substantial portions of the Software.
               *
               * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
               * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
               * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
               *
               * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
               * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
               * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
               * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
               * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
               *
               * In addition, the following condition applies:
               *
               * All redistributions must retain an intact copy of this copyright notice
               * and disclaimer.
               */
              // Basic JavaScript BN library - subset useful for RSA encryption.
              // Bits per digit
              var dbits; // JavaScript engine analysis

              var canary = 0xdeadbeefcafe;
              var j_lm = (canary & 0xffffff) == 0xefcafe; // (public) Constructor

              function BigInteger(a, b, c) {
                if (a != null) if ("number" == typeof a) this.fromNumber(a, b, c);else if (b == null && "string" != typeof a) this.fromString(a, 256);else this.fromString(a, b);
              } // return new, unset BigInteger


              function nbi() {
                return new BigInteger(null);
              } // am: Compute w_j += (x*this_i), propagate carries,
              // c is initial carry, returns final carry.
              // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
              // We need to select the fastest one that works in this environment.
              // am1: use a single mult and divide to get the high bits,
              // max digit bits should be 26 because
              // max internal value = 2*dvalue^2-2*dvalue (< 2^53)


              function am1(i, x, w, j, c, n) {
                while (--n >= 0) {
                  var v = x * this[i++] + w[j] + c;
                  c = Math.floor(v / 0x4000000);
                  w[j++] = v & 0x3ffffff;
                }

                return c;
              } // am2 avoids a big mult-and-extract completely.
              // Max digit bits should be <= 30 because we do bitwise ops
              // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)


              function am2(i, x, w, j, c, n) {
                var xl = x & 0x7fff,
                    xh = x >> 15;

                while (--n >= 0) {
                  var l = this[i] & 0x7fff;
                  var h = this[i++] >> 15;
                  var m = xh * l + h * xl;
                  l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);
                  c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);
                  w[j++] = l & 0x3fffffff;
                }

                return c;
              } // Alternately, set max digit bits to 28 since some
              // browsers slow down when dealing with 32-bit numbers.


              function am3(i, x, w, j, c, n) {
                var xl = x & 0x3fff,
                    xh = x >> 14;

                while (--n >= 0) {
                  var l = this[i] & 0x3fff;
                  var h = this[i++] >> 14;
                  var m = xh * l + h * xl;
                  l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;
                  c = (l >> 28) + (m >> 14) + xh * h;
                  w[j++] = l & 0xfffffff;
                }

                return c;
              }
              /* XXX METEOR XXX
              if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
                BigInteger.prototype.am = am2;
                dbits = 30;
              }
              else if(j_lm && (navigator.appName != "Netscape")) {
                BigInteger.prototype.am = am1;
                dbits = 26;
              }
              else 
              */

              {
                // Mozilla/Netscape seems to prefer am3
                BigInteger.prototype.am = am3;
                dbits = 28;
              }
              BigInteger.prototype.DB = dbits;
              BigInteger.prototype.DM = (1 << dbits) - 1;
              BigInteger.prototype.DV = 1 << dbits;
              var BI_FP = 52;
              BigInteger.prototype.FV = Math.pow(2, BI_FP);
              BigInteger.prototype.F1 = BI_FP - dbits;
              BigInteger.prototype.F2 = 2 * dbits - BI_FP; // Digit conversions

              var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
              var BI_RC = new Array();
              var rr, vv;
              rr = "0".charCodeAt(0);

              for (vv = 0; vv <= 9; ++vv) {
                BI_RC[rr++] = vv;
              }

              rr = "a".charCodeAt(0);

              for (vv = 10; vv < 36; ++vv) {
                BI_RC[rr++] = vv;
              }

              rr = "A".charCodeAt(0);

              for (vv = 10; vv < 36; ++vv) {
                BI_RC[rr++] = vv;
              }

              function int2char(n) {
                return BI_RM.charAt(n);
              }

              function intAt(s, i) {
                var c = BI_RC[s.charCodeAt(i)];
                return c == null ? -1 : c;
              } // (protected) copy this to r


              function bnpCopyTo(r) {
                for (var i = this.t - 1; i >= 0; --i) {
                  r[i] = this[i];
                }

                r.t = this.t;
                r.s = this.s;
              } // (protected) set from integer value x, -DV <= x < DV


              function bnpFromInt(x) {
                this.t = 1;
                this.s = x < 0 ? -1 : 0;
                if (x > 0) this[0] = x;else if (x < -1) this[0] = x + DV;else this.t = 0;
              } // return bigint initialized to value


              function nbv(i) {
                var r = nbi();
                r.fromInt(i);
                return r;
              } // (protected) set from string and radix


              function bnpFromString(s, b) {
                var k;
                if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 256) k = 8; // byte array
                else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else {
                    this.fromRadix(s, b);
                    return;
                  }
                this.t = 0;
                this.s = 0;
                var i = s.length,
                    mi = false,
                    sh = 0;

                while (--i >= 0) {
                  var x = k == 8 ? s[i] & 0xff : intAt(s, i);

                  if (x < 0) {
                    if (s.charAt(i) == "-") mi = true;
                    continue;
                  }

                  mi = false;
                  if (sh == 0) this[this.t++] = x;else if (sh + k > this.DB) {
                    this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;
                    this[this.t++] = x >> this.DB - sh;
                  } else this[this.t - 1] |= x << sh;
                  sh += k;
                  if (sh >= this.DB) sh -= this.DB;
                }

                if (k == 8 && (s[0] & 0x80) != 0) {
                  this.s = -1;
                  if (sh > 0) this[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;
                }

                this.clamp();
                if (mi) BigInteger.ZERO.subTo(this, this);
              } // (protected) clamp off excess high words


              function bnpClamp() {
                var c = this.s & this.DM;

                while (this.t > 0 && this[this.t - 1] == c) {
                  --this.t;
                }
              } // (public) return string representation in given radix


              function bnToString(b) {
                if (this.s < 0) return "-" + this.negate().toString(b);
                var k;
                if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else return this.toRadix(b);
                var km = (1 << k) - 1,
                    d,
                    m = false,
                    r = "",
                    i = this.t;
                var p = this.DB - i * this.DB % k;

                if (i-- > 0) {
                  if (p < this.DB && (d = this[i] >> p) > 0) {
                    m = true;
                    r = int2char(d);
                  }

                  while (i >= 0) {
                    if (p < k) {
                      d = (this[i] & (1 << p) - 1) << k - p;
                      d |= this[--i] >> (p += this.DB - k);
                    } else {
                      d = this[i] >> (p -= k) & km;

                      if (p <= 0) {
                        p += this.DB;
                        --i;
                      }
                    }

                    if (d > 0) m = true;
                    if (m) r += int2char(d);
                  }
                }

                return m ? r : "0";
              } // (public) -this


              function bnNegate() {
                var r = nbi();
                BigInteger.ZERO.subTo(this, r);
                return r;
              } // (public) |this|


              function bnAbs() {
                return this.s < 0 ? this.negate() : this;
              } // (public) return + if this > a, - if this < a, 0 if equal


              function bnCompareTo(a) {
                var r = this.s - a.s;
                if (r != 0) return r;
                var i = this.t;
                r = i - a.t;
                if (r != 0) return r;

                while (--i >= 0) {
                  if ((r = this[i] - a[i]) != 0) return r;
                }

                return 0;
              } // returns bit length of the integer x


              function nbits(x) {
                var r = 1,
                    t;

                if ((t = x >>> 16) != 0) {
                  x = t;
                  r += 16;
                }

                if ((t = x >> 8) != 0) {
                  x = t;
                  r += 8;
                }

                if ((t = x >> 4) != 0) {
                  x = t;
                  r += 4;
                }

                if ((t = x >> 2) != 0) {
                  x = t;
                  r += 2;
                }

                if ((t = x >> 1) != 0) {
                  x = t;
                  r += 1;
                }

                return r;
              } // (public) return the number of bits in "this"


              function bnBitLength() {
                if (this.t <= 0) return 0;
                return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);
              } // (protected) r = this << n*DB


              function bnpDLShiftTo(n, r) {
                var i;

                for (i = this.t - 1; i >= 0; --i) {
                  r[i + n] = this[i];
                }

                for (i = n - 1; i >= 0; --i) {
                  r[i] = 0;
                }

                r.t = this.t + n;
                r.s = this.s;
              } // (protected) r = this >> n*DB


              function bnpDRShiftTo(n, r) {
                for (var i = n; i < this.t; ++i) {
                  r[i - n] = this[i];
                }

                r.t = Math.max(this.t - n, 0);
                r.s = this.s;
              } // (protected) r = this << n


              function bnpLShiftTo(n, r) {
                var bs = n % this.DB;
                var cbs = this.DB - bs;
                var bm = (1 << cbs) - 1;
                var ds = Math.floor(n / this.DB),
                    c = this.s << bs & this.DM,
                    i;

                for (i = this.t - 1; i >= 0; --i) {
                  r[i + ds + 1] = this[i] >> cbs | c;
                  c = (this[i] & bm) << bs;
                }

                for (i = ds - 1; i >= 0; --i) {
                  r[i] = 0;
                }

                r[ds] = c;
                r.t = this.t + ds + 1;
                r.s = this.s;
                r.clamp();
              } // (protected) r = this >> n


              function bnpRShiftTo(n, r) {
                r.s = this.s;
                var ds = Math.floor(n / this.DB);

                if (ds >= this.t) {
                  r.t = 0;
                  return;
                }

                var bs = n % this.DB;
                var cbs = this.DB - bs;
                var bm = (1 << bs) - 1;
                r[0] = this[ds] >> bs;

                for (var i = ds + 1; i < this.t; ++i) {
                  r[i - ds - 1] |= (this[i] & bm) << cbs;
                  r[i - ds] = this[i] >> bs;
                }

                if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;
                r.t = this.t - ds;
                r.clamp();
              } // (protected) r = this - a


              function bnpSubTo(a, r) {
                var i = 0,
                    c = 0,
                    m = Math.min(a.t, this.t);

                while (i < m) {
                  c += this[i] - a[i];
                  r[i++] = c & this.DM;
                  c >>= this.DB;
                }

                if (a.t < this.t) {
                  c -= a.s;

                  while (i < this.t) {
                    c += this[i];
                    r[i++] = c & this.DM;
                    c >>= this.DB;
                  }

                  c += this.s;
                } else {
                  c += this.s;

                  while (i < a.t) {
                    c -= a[i];
                    r[i++] = c & this.DM;
                    c >>= this.DB;
                  }

                  c -= a.s;
                }

                r.s = c < 0 ? -1 : 0;
                if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;
                r.t = i;
                r.clamp();
              } // (protected) r = this * a, r != this,a (HAC 14.12)
              // "this" should be the larger one if appropriate.


              function bnpMultiplyTo(a, r) {
                var x = this.abs(),
                    y = a.abs();
                var i = x.t;
                r.t = i + y.t;

                while (--i >= 0) {
                  r[i] = 0;
                }

                for (i = 0; i < y.t; ++i) {
                  r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);
                }

                r.s = 0;
                r.clamp();
                if (this.s != a.s) BigInteger.ZERO.subTo(r, r);
              } // (protected) r = this^2, r != this (HAC 14.16)


              function bnpSquareTo(r) {
                var x = this.abs();
                var i = r.t = 2 * x.t;

                while (--i >= 0) {
                  r[i] = 0;
                }

                for (i = 0; i < x.t - 1; ++i) {
                  var c = x.am(i, x[i], r, 2 * i, 0, 1);

                  if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
                    r[i + x.t] -= x.DV;
                    r[i + x.t + 1] = 1;
                  }
                }

                if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);
                r.s = 0;
                r.clamp();
              } // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
              // r != q, this != m.  q or r may be null.


              function bnpDivRemTo(m, q, r) {
                var pm = m.abs();
                if (pm.t <= 0) return;
                var pt = this.abs();

                if (pt.t < pm.t) {
                  if (q != null) q.fromInt(0);
                  if (r != null) this.copyTo(r);
                  return;
                }

                if (r == null) r = nbi();
                var y = nbi(),
                    ts = this.s,
                    ms = m.s;
                var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus

                if (nsh > 0) {
                  pm.lShiftTo(nsh, y);
                  pt.lShiftTo(nsh, r);
                } else {
                  pm.copyTo(y);
                  pt.copyTo(r);
                }

                var ys = y.t;
                var y0 = y[ys - 1];
                if (y0 == 0) return;
                var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);
                var d1 = this.FV / yt,
                    d2 = (1 << this.F1) / yt,
                    e = 1 << this.F2;
                var i = r.t,
                    j = i - ys,
                    t = q == null ? nbi() : q;
                y.dlShiftTo(j, t);

                if (r.compareTo(t) >= 0) {
                  r[r.t++] = 1;
                  r.subTo(t, r);
                }

                BigInteger.ONE.dlShiftTo(ys, t);
                t.subTo(y, y); // "negative" y so we can replace sub with am later

                while (y.t < ys) {
                  y[y.t++] = 0;
                }

                while (--j >= 0) {
                  // Estimate quotient digit
                  var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);

                  if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {
                    // Try it out
                    y.dlShiftTo(j, t);
                    r.subTo(t, r);

                    while (r[i] < --qd) {
                      r.subTo(t, r);
                    }
                  }
                }

                if (q != null) {
                  r.drShiftTo(ys, q);
                  if (ts != ms) BigInteger.ZERO.subTo(q, q);
                }

                r.t = ys;
                r.clamp();
                if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder

                if (ts < 0) BigInteger.ZERO.subTo(r, r);
              } // (public) this mod a


              function bnMod(a) {
                var r = nbi();
                this.abs().divRemTo(a, null, r);
                if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);
                return r;
              } // Modular reduction using "classic" algorithm


              function Classic(m) {
                this.m = m;
              }

              function cConvert(x) {
                if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);else return x;
              }

              function cRevert(x) {
                return x;
              }

              function cReduce(x) {
                x.divRemTo(this.m, null, x);
              }

              function cMulTo(x, y, r) {
                x.multiplyTo(y, r);
                this.reduce(r);
              }

              function cSqrTo(x, r) {
                x.squareTo(r);
                this.reduce(r);
              }

              Classic.prototype.convert = cConvert;
              Classic.prototype.revert = cRevert;
              Classic.prototype.reduce = cReduce;
              Classic.prototype.mulTo = cMulTo;
              Classic.prototype.sqrTo = cSqrTo; // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
              // justification:
              //         xy == 1 (mod m)
              //         xy =  1+km
              //   xy(2-xy) = (1+km)(1-km)
              // x[y(2-xy)] = 1-k^2m^2
              // x[y(2-xy)] == 1 (mod m^2)
              // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
              // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
              // JS multiply "overflows" differently from C/C++, so care is needed here.

              function bnpInvDigit() {
                if (this.t < 1) return 0;
                var x = this[0];
                if ((x & 1) == 0) return 0;
                var y = x & 3; // y == 1/x mod 2^2

                y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4

                y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8

                y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16
                // last step - calculate inverse mod DV directly;
                // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints

                y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits
                // we really want the negative inverse, and -DV < y < DV

                return y > 0 ? this.DV - y : -y;
              } // Montgomery reduction


              function Montgomery(m) {
                this.m = m;
                this.mp = m.invDigit();
                this.mpl = this.mp & 0x7fff;
                this.mph = this.mp >> 15;
                this.um = (1 << m.DB - 15) - 1;
                this.mt2 = 2 * m.t;
              } // xR mod m


              function montConvert(x) {
                var r = nbi();
                x.abs().dlShiftTo(this.m.t, r);
                r.divRemTo(this.m, null, r);
                if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);
                return r;
              } // x/R mod m


              function montRevert(x) {
                var r = nbi();
                x.copyTo(r);
                this.reduce(r);
                return r;
              } // x = x/R mod m (HAC 14.32)


              function montReduce(x) {
                while (x.t <= this.mt2) {
                  // pad x so am has enough room later
                  x[x.t++] = 0;
                }

                for (var i = 0; i < this.m.t; ++i) {
                  // faster way of calculating u0 = x[i]*mp mod DV
                  var j = x[i] & 0x7fff;
                  var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM; // use am to combine the multiply-shift-add into one call

                  j = i + this.m.t;
                  x[j] += this.m.am(0, u0, x, i, 0, this.m.t); // propagate carry

                  while (x[j] >= x.DV) {
                    x[j] -= x.DV;
                    x[++j]++;
                  }
                }

                x.clamp();
                x.drShiftTo(this.m.t, x);
                if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);
              } // r = "x^2/R mod m"; x != r


              function montSqrTo(x, r) {
                x.squareTo(r);
                this.reduce(r);
              } // r = "xy/R mod m"; x,y != r


              function montMulTo(x, y, r) {
                x.multiplyTo(y, r);
                this.reduce(r);
              }

              Montgomery.prototype.convert = montConvert;
              Montgomery.prototype.revert = montRevert;
              Montgomery.prototype.reduce = montReduce;
              Montgomery.prototype.mulTo = montMulTo;
              Montgomery.prototype.sqrTo = montSqrTo; // (protected) true iff this is even

              function bnpIsEven() {
                return (this.t > 0 ? this[0] & 1 : this.s) == 0;
              } // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)


              function bnpExp(e, z) {
                if (e > 0xffffffff || e < 1) return BigInteger.ONE;
                var r = nbi(),
                    r2 = nbi(),
                    g = z.convert(this),
                    i = nbits(e) - 1;
                g.copyTo(r);

                while (--i >= 0) {
                  z.sqrTo(r, r2);
                  if ((e & 1 << i) > 0) z.mulTo(r2, g, r);else {
                    var t = r;
                    r = r2;
                    r2 = t;
                  }
                }

                return z.revert(r);
              } // (public) this^e % m, 0 <= e < 2^32


              function bnModPowInt(e, m) {
                var z;
                if (e < 256 || m.isEven()) z = new Classic(m);else z = new Montgomery(m);
                return this.exp(e, z);
              } // protected


              BigInteger.prototype.copyTo = bnpCopyTo;
              BigInteger.prototype.fromInt = bnpFromInt;
              BigInteger.prototype.fromString = bnpFromString;
              BigInteger.prototype.clamp = bnpClamp;
              BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
              BigInteger.prototype.drShiftTo = bnpDRShiftTo;
              BigInteger.prototype.lShiftTo = bnpLShiftTo;
              BigInteger.prototype.rShiftTo = bnpRShiftTo;
              BigInteger.prototype.subTo = bnpSubTo;
              BigInteger.prototype.multiplyTo = bnpMultiplyTo;
              BigInteger.prototype.squareTo = bnpSquareTo;
              BigInteger.prototype.divRemTo = bnpDivRemTo;
              BigInteger.prototype.invDigit = bnpInvDigit;
              BigInteger.prototype.isEven = bnpIsEven;
              BigInteger.prototype.exp = bnpExp; // public

              BigInteger.prototype.toString = bnToString;
              BigInteger.prototype.negate = bnNegate;
              BigInteger.prototype.abs = bnAbs;
              BigInteger.prototype.compareTo = bnCompareTo;
              BigInteger.prototype.bitLength = bnBitLength;
              BigInteger.prototype.mod = bnMod;
              BigInteger.prototype.modPowInt = bnModPowInt; // "constants"

              BigInteger.ZERO = nbv(0);
              BigInteger.ONE = nbv(1); /// BEGIN jsbn2.js

              /*
               * Copyright (c) 2003-2005  Tom Wu
               * All Rights Reserved.
               *
               * Permission is hereby granted, free of charge, to any person obtaining
               * a copy of this software and associated documentation files (the
               * "Software"), to deal in the Software without restriction, including
               * without limitation the rights to use, copy, modify, merge, publish,
               * distribute, sublicense, and/or sell copies of the Software, and to
               * permit persons to whom the Software is furnished to do so, subject to
               * the following conditions:
               *
               * The above copyright notice and this permission notice shall be
               * included in all copies or substantial portions of the Software.
               *
               * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
               * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
               * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
               *
               * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
               * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
               * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
               * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
               * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
               *
               * In addition, the following condition applies:
               *
               * All redistributions must retain an intact copy of this copyright notice
               * and disclaimer.
               */
              // Extended JavaScript BN functions, required for RSA private ops.
              // (public)

              function bnClone() {
                var r = nbi();
                this.copyTo(r);
                return r;
              } // (public) return value as integer


              function bnIntValue() {
                if (this.s < 0) {
                  if (this.t == 1) return this[0] - this.DV;else if (this.t == 0) return -1;
                } else if (this.t == 1) return this[0];else if (this.t == 0) return 0; // assumes 16 < DB < 32


                return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];
              } // (public) return value as byte


              function bnByteValue() {
                return this.t == 0 ? this.s : this[0] << 24 >> 24;
              } // (public) return value as short (assumes DB>=16)


              function bnShortValue() {
                return this.t == 0 ? this.s : this[0] << 16 >> 16;
              } // (protected) return x s.t. r^x < DV


              function bnpChunkSize(r) {
                return Math.floor(Math.LN2 * this.DB / Math.log(r));
              } // (public) 0 if this == 0, 1 if this > 0


              function bnSigNum() {
                if (this.s < 0) return -1;else if (this.t <= 0 || this.t == 1 && this[0] <= 0) return 0;else return 1;
              } // (protected) convert to radix string


              function bnpToRadix(b) {
                if (b == null) b = 10;
                if (this.signum() == 0 || b < 2 || b > 36) return "0";
                var cs = this.chunkSize(b);
                var a = Math.pow(b, cs);
                var d = nbv(a),
                    y = nbi(),
                    z = nbi(),
                    r = "";
                this.divRemTo(d, y, z);

                while (y.signum() > 0) {
                  r = (a + z.intValue()).toString(b).substr(1) + r;
                  y.divRemTo(d, y, z);
                }

                return z.intValue().toString(b) + r;
              } // (protected) convert from radix string


              function bnpFromRadix(s, b) {
                this.fromInt(0);
                if (b == null) b = 10;
                var cs = this.chunkSize(b);
                var d = Math.pow(b, cs),
                    mi = false,
                    j = 0,
                    w = 0;

                for (var i = 0; i < s.length; ++i) {
                  var x = intAt(s, i);

                  if (x < 0) {
                    if (s.charAt(i) == "-" && this.signum() == 0) mi = true;
                    continue;
                  }

                  w = b * w + x;

                  if (++j >= cs) {
                    this.dMultiply(d);
                    this.dAddOffset(w, 0);
                    j = 0;
                    w = 0;
                  }
                }

                if (j > 0) {
                  this.dMultiply(Math.pow(b, j));
                  this.dAddOffset(w, 0);
                }

                if (mi) BigInteger.ZERO.subTo(this, this);
              } // (protected) alternate constructor


              function bnpFromNumber(a, b, c) {
                if ("number" == typeof b) {
                  // new BigInteger(int,int,RNG)
                  if (a < 2) this.fromInt(1);else {
                    this.fromNumber(a, c);
                    if (!this.testBit(a - 1)) // force MSB set
                      this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);
                    if (this.isEven()) this.dAddOffset(1, 0); // force odd

                    while (!this.isProbablePrime(b)) {
                      this.dAddOffset(2, 0);
                      if (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);
                    }
                  }
                } else {
                  // new BigInteger(int,RNG)
                  var x = new Array(),
                      t = a & 7;
                  x.length = (a >> 3) + 1;
                  b.nextBytes(x);
                  if (t > 0) x[0] &= (1 << t) - 1;else x[0] = 0;
                  this.fromString(x, 256);
                }
              } // (public) convert to bigendian byte array


              function bnToByteArray() {
                var i = this.t,
                    r = new Array();
                r[0] = this.s;
                var p = this.DB - i * this.DB % 8,
                    d,
                    k = 0;

                if (i-- > 0) {
                  if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) r[k++] = d | this.s << this.DB - p;

                  while (i >= 0) {
                    if (p < 8) {
                      d = (this[i] & (1 << p) - 1) << 8 - p;
                      d |= this[--i] >> (p += this.DB - 8);
                    } else {
                      d = this[i] >> (p -= 8) & 0xff;

                      if (p <= 0) {
                        p += this.DB;
                        --i;
                      }
                    }

                    if ((d & 0x80) != 0) d |= -256;
                    if (k == 0 && (this.s & 0x80) != (d & 0x80)) ++k;
                    if (k > 0 || d != this.s) r[k++] = d;
                  }
                }

                return r;
              }

              function bnEquals(a) {
                return this.compareTo(a) == 0;
              }

              function bnMin(a) {
                return this.compareTo(a) < 0 ? this : a;
              }

              function bnMax(a) {
                return this.compareTo(a) > 0 ? this : a;
              } // (protected) r = this op a (bitwise)


              function bnpBitwiseTo(a, op, r) {
                var i,
                    f,
                    m = Math.min(a.t, this.t);

                for (i = 0; i < m; ++i) {
                  r[i] = op(this[i], a[i]);
                }

                if (a.t < this.t) {
                  f = a.s & this.DM;

                  for (i = m; i < this.t; ++i) {
                    r[i] = op(this[i], f);
                  }

                  r.t = this.t;
                } else {
                  f = this.s & this.DM;

                  for (i = m; i < a.t; ++i) {
                    r[i] = op(f, a[i]);
                  }

                  r.t = a.t;
                }

                r.s = op(this.s, a.s);
                r.clamp();
              } // (public) this & a


              function op_and(x, y) {
                return x & y;
              }

              function bnAnd(a) {
                var r = nbi();
                this.bitwiseTo(a, op_and, r);
                return r;
              } // (public) this | a


              function op_or(x, y) {
                return x | y;
              }

              function bnOr(a) {
                var r = nbi();
                this.bitwiseTo(a, op_or, r);
                return r;
              } // (public) this ^ a


              function op_xor(x, y) {
                return x ^ y;
              }

              function bnXor(a) {
                var r = nbi();
                this.bitwiseTo(a, op_xor, r);
                return r;
              } // (public) this & ~a


              function op_andnot(x, y) {
                return x & ~y;
              }

              function bnAndNot(a) {
                var r = nbi();
                this.bitwiseTo(a, op_andnot, r);
                return r;
              } // (public) ~this


              function bnNot() {
                var r = nbi();

                for (var i = 0; i < this.t; ++i) {
                  r[i] = this.DM & ~this[i];
                }

                r.t = this.t;
                r.s = ~this.s;
                return r;
              } // (public) this << n


              function bnShiftLeft(n) {
                var r = nbi();
                if (n < 0) this.rShiftTo(-n, r);else this.lShiftTo(n, r);
                return r;
              } // (public) this >> n


              function bnShiftRight(n) {
                var r = nbi();
                if (n < 0) this.lShiftTo(-n, r);else this.rShiftTo(n, r);
                return r;
              } // return index of lowest 1-bit in x, x < 2^31


              function lbit(x) {
                if (x == 0) return -1;
                var r = 0;

                if ((x & 0xffff) == 0) {
                  x >>= 16;
                  r += 16;
                }

                if ((x & 0xff) == 0) {
                  x >>= 8;
                  r += 8;
                }

                if ((x & 0xf) == 0) {
                  x >>= 4;
                  r += 4;
                }

                if ((x & 3) == 0) {
                  x >>= 2;
                  r += 2;
                }

                if ((x & 1) == 0) ++r;
                return r;
              } // (public) returns index of lowest 1-bit (or -1 if none)


              function bnGetLowestSetBit() {
                for (var i = 0; i < this.t; ++i) {
                  if (this[i] != 0) return i * this.DB + lbit(this[i]);
                }

                if (this.s < 0) return this.t * this.DB;
                return -1;
              } // return number of 1 bits in x


              function cbit(x) {
                var r = 0;

                while (x != 0) {
                  x &= x - 1;
                  ++r;
                }

                return r;
              } // (public) return number of set bits


              function bnBitCount() {
                var r = 0,
                    x = this.s & this.DM;

                for (var i = 0; i < this.t; ++i) {
                  r += cbit(this[i] ^ x);
                }

                return r;
              } // (public) true iff nth bit is set


              function bnTestBit(n) {
                var j = Math.floor(n / this.DB);
                if (j >= this.t) return this.s != 0;
                return (this[j] & 1 << n % this.DB) != 0;
              } // (protected) this op (1<<n)


              function bnpChangeBit(n, op) {
                var r = BigInteger.ONE.shiftLeft(n);
                this.bitwiseTo(r, op, r);
                return r;
              } // (public) this | (1<<n)


              function bnSetBit(n) {
                return this.changeBit(n, op_or);
              } // (public) this & ~(1<<n)


              function bnClearBit(n) {
                return this.changeBit(n, op_andnot);
              } // (public) this ^ (1<<n)


              function bnFlipBit(n) {
                return this.changeBit(n, op_xor);
              } // (protected) r = this + a


              function bnpAddTo(a, r) {
                var i = 0,
                    c = 0,
                    m = Math.min(a.t, this.t);

                while (i < m) {
                  c += this[i] + a[i];
                  r[i++] = c & this.DM;
                  c >>= this.DB;
                }

                if (a.t < this.t) {
                  c += a.s;

                  while (i < this.t) {
                    c += this[i];
                    r[i++] = c & this.DM;
                    c >>= this.DB;
                  }

                  c += this.s;
                } else {
                  c += this.s;

                  while (i < a.t) {
                    c += a[i];
                    r[i++] = c & this.DM;
                    c >>= this.DB;
                  }

                  c += a.s;
                }

                r.s = c < 0 ? -1 : 0;
                if (c > 0) r[i++] = c;else if (c < -1) r[i++] = this.DV + c;
                r.t = i;
                r.clamp();
              } // (public) this + a


              function bnAdd(a) {
                var r = nbi();
                this.addTo(a, r);
                return r;
              } // (public) this - a


              function bnSubtract(a) {
                var r = nbi();
                this.subTo(a, r);
                return r;
              } // (public) this * a


              function bnMultiply(a) {
                var r = nbi();
                this.multiplyTo(a, r);
                return r;
              } // (public) this / a


              function bnDivide(a) {
                var r = nbi();
                this.divRemTo(a, r, null);
                return r;
              } // (public) this % a


              function bnRemainder(a) {
                var r = nbi();
                this.divRemTo(a, null, r);
                return r;
              } // (public) [this/a,this%a]


              function bnDivideAndRemainder(a) {
                var q = nbi(),
                    r = nbi();
                this.divRemTo(a, q, r);
                return new Array(q, r);
              } // (protected) this *= n, this >= 0, 1 < n < DV


              function bnpDMultiply(n) {
                this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);
                ++this.t;
                this.clamp();
              } // (protected) this += n << w words, this >= 0


              function bnpDAddOffset(n, w) {
                while (this.t <= w) {
                  this[this.t++] = 0;
                }

                this[w] += n;

                while (this[w] >= this.DV) {
                  this[w] -= this.DV;
                  if (++w >= this.t) this[this.t++] = 0;
                  ++this[w];
                }
              } // A "null" reducer


              function NullExp() {}

              function nNop(x) {
                return x;
              }

              function nMulTo(x, y, r) {
                x.multiplyTo(y, r);
              }

              function nSqrTo(x, r) {
                x.squareTo(r);
              }

              NullExp.prototype.convert = nNop;
              NullExp.prototype.revert = nNop;
              NullExp.prototype.mulTo = nMulTo;
              NullExp.prototype.sqrTo = nSqrTo; // (public) this^e

              function bnPow(e) {
                return this.exp(e, new NullExp());
              } // (protected) r = lower n words of "this * a", a.t <= n
              // "this" should be the larger one if appropriate.


              function bnpMultiplyLowerTo(a, n, r) {
                var i = Math.min(this.t + a.t, n);
                r.s = 0; // assumes a,this >= 0

                r.t = i;

                while (i > 0) {
                  r[--i] = 0;
                }

                var j;

                for (j = r.t - this.t; i < j; ++i) {
                  r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);
                }

                for (j = Math.min(a.t, n); i < j; ++i) {
                  this.am(0, a[i], r, i, 0, n - i);
                }

                r.clamp();
              } // (protected) r = "this * a" without lower n words, n > 0
              // "this" should be the larger one if appropriate.


              function bnpMultiplyUpperTo(a, n, r) {
                --n;
                var i = r.t = this.t + a.t - n;
                r.s = 0; // assumes a,this >= 0

                while (--i >= 0) {
                  r[i] = 0;
                }

                for (i = Math.max(n - this.t, 0); i < a.t; ++i) {
                  r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);
                }

                r.clamp();
                r.drShiftTo(1, r);
              } // Barrett modular reduction


              function Barrett(m) {
                // setup Barrett
                this.r2 = nbi();
                this.q3 = nbi();
                BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);
                this.mu = this.r2.divide(m);
                this.m = m;
              }

              function barrettConvert(x) {
                if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);else if (x.compareTo(this.m) < 0) return x;else {
                  var r = nbi();
                  x.copyTo(r);
                  this.reduce(r);
                  return r;
                }
              }

              function barrettRevert(x) {
                return x;
              } // x = x mod m (HAC 14.42)


              function barrettReduce(x) {
                x.drShiftTo(this.m.t - 1, this.r2);

                if (x.t > this.m.t + 1) {
                  x.t = this.m.t + 1;
                  x.clamp();
                }

                this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);
                this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);

                while (x.compareTo(this.r2) < 0) {
                  x.dAddOffset(1, this.m.t + 1);
                }

                x.subTo(this.r2, x);

                while (x.compareTo(this.m) >= 0) {
                  x.subTo(this.m, x);
                }
              } // r = x^2 mod m; x != r


              function barrettSqrTo(x, r) {
                x.squareTo(r);
                this.reduce(r);
              } // r = x*y mod m; x,y != r


              function barrettMulTo(x, y, r) {
                x.multiplyTo(y, r);
                this.reduce(r);
              }

              Barrett.prototype.convert = barrettConvert;
              Barrett.prototype.revert = barrettRevert;
              Barrett.prototype.reduce = barrettReduce;
              Barrett.prototype.mulTo = barrettMulTo;
              Barrett.prototype.sqrTo = barrettSqrTo; // (public) this^e % m (HAC 14.85)

              function bnModPow(e, m) {
                var i = e.bitLength(),
                    k,
                    r = nbv(1),
                    z;
                if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6;
                if (i < 8) z = new Classic(m);else if (m.isEven()) z = new Barrett(m);else z = new Montgomery(m); // precomputation

                var g = new Array(),
                    n = 3,
                    k1 = k - 1,
                    km = (1 << k) - 1;
                g[1] = z.convert(this);

                if (k > 1) {
                  var g2 = nbi();
                  z.sqrTo(g[1], g2);

                  while (n <= km) {
                    g[n] = nbi();
                    z.mulTo(g2, g[n - 2], g[n]);
                    n += 2;
                  }
                }

                var j = e.t - 1,
                    w,
                    is1 = true,
                    r2 = nbi(),
                    t;
                i = nbits(e[j]) - 1;

                while (j >= 0) {
                  if (i >= k1) w = e[j] >> i - k1 & km;else {
                    w = (e[j] & (1 << i + 1) - 1) << k1 - i;
                    if (j > 0) w |= e[j - 1] >> this.DB + i - k1;
                  }
                  n = k;

                  while ((w & 1) == 0) {
                    w >>= 1;
                    --n;
                  }

                  if ((i -= n) < 0) {
                    i += this.DB;
                    --j;
                  }

                  if (is1) {
                    // ret == 1, don't bother squaring or multiplying it
                    g[w].copyTo(r);
                    is1 = false;
                  } else {
                    while (n > 1) {
                      z.sqrTo(r, r2);
                      z.sqrTo(r2, r);
                      n -= 2;
                    }

                    if (n > 0) z.sqrTo(r, r2);else {
                      t = r;
                      r = r2;
                      r2 = t;
                    }
                    z.mulTo(r2, g[w], r);
                  }

                  while (j >= 0 && (e[j] & 1 << i) == 0) {
                    z.sqrTo(r, r2);
                    t = r;
                    r = r2;
                    r2 = t;

                    if (--i < 0) {
                      i = this.DB - 1;
                      --j;
                    }
                  }
                }

                return z.revert(r);
              } // (public) gcd(this,a) (HAC 14.54)


              function bnGCD(a) {
                var x = this.s < 0 ? this.negate() : this.clone();
                var y = a.s < 0 ? a.negate() : a.clone();

                if (x.compareTo(y) < 0) {
                  var t = x;
                  x = y;
                  y = t;
                }

                var i = x.getLowestSetBit(),
                    g = y.getLowestSetBit();
                if (g < 0) return x;
                if (i < g) g = i;

                if (g > 0) {
                  x.rShiftTo(g, x);
                  y.rShiftTo(g, y);
                }

                while (x.signum() > 0) {
                  if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);
                  if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);

                  if (x.compareTo(y) >= 0) {
                    x.subTo(y, x);
                    x.rShiftTo(1, x);
                  } else {
                    y.subTo(x, y);
                    y.rShiftTo(1, y);
                  }
                }

                if (g > 0) y.lShiftTo(g, y);
                return y;
              } // (protected) this % n, n < 2^26


              function bnpModInt(n) {
                if (n <= 0) return 0;
                var d = this.DV % n,
                    r = this.s < 0 ? n - 1 : 0;
                if (this.t > 0) if (d == 0) r = this[0] % n;else for (var i = this.t - 1; i >= 0; --i) {
                  r = (d * r + this[i]) % n;
                }
                return r;
              } // (public) 1/this % m (HAC 14.61)


              function bnModInverse(m) {
                var ac = m.isEven();
                if (this.isEven() && ac || m.signum() == 0) return BigInteger.ZERO;
                var u = m.clone(),
                    v = this.clone();
                var a = nbv(1),
                    b = nbv(0),
                    c = nbv(0),
                    d = nbv(1);

                while (u.signum() != 0) {
                  while (u.isEven()) {
                    u.rShiftTo(1, u);

                    if (ac) {
                      if (!a.isEven() || !b.isEven()) {
                        a.addTo(this, a);
                        b.subTo(m, b);
                      }

                      a.rShiftTo(1, a);
                    } else if (!b.isEven()) b.subTo(m, b);

                    b.rShiftTo(1, b);
                  }

                  while (v.isEven()) {
                    v.rShiftTo(1, v);

                    if (ac) {
                      if (!c.isEven() || !d.isEven()) {
                        c.addTo(this, c);
                        d.subTo(m, d);
                      }

                      c.rShiftTo(1, c);
                    } else if (!d.isEven()) d.subTo(m, d);

                    d.rShiftTo(1, d);
                  }

                  if (u.compareTo(v) >= 0) {
                    u.subTo(v, u);
                    if (ac) a.subTo(c, a);
                    b.subTo(d, b);
                  } else {
                    v.subTo(u, v);
                    if (ac) c.subTo(a, c);
                    d.subTo(b, d);
                  }
                }

                if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;
                if (d.compareTo(m) >= 0) return d.subtract(m);
                if (d.signum() < 0) d.addTo(m, d);else return d;
                if (d.signum() < 0) return d.add(m);else return d;
              }

              var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509];
              var lplim = (1 << 26) / lowprimes[lowprimes.length - 1]; // (public) test primality with certainty >= 1-.5^t

              function bnIsProbablePrime(t) {
                var i,
                    x = this.abs();

                if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {
                  for (i = 0; i < lowprimes.length; ++i) {
                    if (x[0] == lowprimes[i]) return true;
                  }

                  return false;
                }

                if (x.isEven()) return false;
                i = 1;

                while (i < lowprimes.length) {
                  var m = lowprimes[i],
                      j = i + 1;

                  while (j < lowprimes.length && m < lplim) {
                    m *= lowprimes[j++];
                  }

                  m = x.modInt(m);

                  while (i < j) {
                    if (m % lowprimes[i++] == 0) return false;
                  }
                }

                return x.millerRabin(t);
              } // (protected) true if probably prime (HAC 4.24, Miller-Rabin)


              function bnpMillerRabin(t) {
                var n1 = this.subtract(BigInteger.ONE);
                var k = n1.getLowestSetBit();
                if (k <= 0) return false;
                var r = n1.shiftRight(k);
                t = t + 1 >> 1;
                if (t > lowprimes.length) t = lowprimes.length;
                var a = nbi();

                for (var i = 0; i < t; ++i) {
                  a.fromInt(lowprimes[i]);
                  var y = a.modPow(r, this);

                  if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
                    var j = 1;

                    while (j++ < k && y.compareTo(n1) != 0) {
                      y = y.modPowInt(2, this);
                      if (y.compareTo(BigInteger.ONE) == 0) return false;
                    }

                    if (y.compareTo(n1) != 0) return false;
                  }
                }

                return true;
              } // protected


              BigInteger.prototype.chunkSize = bnpChunkSize;
              BigInteger.prototype.toRadix = bnpToRadix;
              BigInteger.prototype.fromRadix = bnpFromRadix;
              BigInteger.prototype.fromNumber = bnpFromNumber;
              BigInteger.prototype.bitwiseTo = bnpBitwiseTo;
              BigInteger.prototype.changeBit = bnpChangeBit;
              BigInteger.prototype.addTo = bnpAddTo;
              BigInteger.prototype.dMultiply = bnpDMultiply;
              BigInteger.prototype.dAddOffset = bnpDAddOffset;
              BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
              BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
              BigInteger.prototype.modInt = bnpModInt;
              BigInteger.prototype.millerRabin = bnpMillerRabin; // public

              BigInteger.prototype.clone = bnClone;
              BigInteger.prototype.intValue = bnIntValue;
              BigInteger.prototype.byteValue = bnByteValue;
              BigInteger.prototype.shortValue = bnShortValue;
              BigInteger.prototype.signum = bnSigNum;
              BigInteger.prototype.toByteArray = bnToByteArray;
              BigInteger.prototype.equals = bnEquals;
              BigInteger.prototype.min = bnMin;
              BigInteger.prototype.max = bnMax;
              BigInteger.prototype.and = bnAnd;
              BigInteger.prototype.or = bnOr;
              BigInteger.prototype.xor = bnXor;
              BigInteger.prototype.andNot = bnAndNot;
              BigInteger.prototype.not = bnNot;
              BigInteger.prototype.shiftLeft = bnShiftLeft;
              BigInteger.prototype.shiftRight = bnShiftRight;
              BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;
              BigInteger.prototype.bitCount = bnBitCount;
              BigInteger.prototype.testBit = bnTestBit;
              BigInteger.prototype.setBit = bnSetBit;
              BigInteger.prototype.clearBit = bnClearBit;
              BigInteger.prototype.flipBit = bnFlipBit;
              BigInteger.prototype.add = bnAdd;
              BigInteger.prototype.subtract = bnSubtract;
              BigInteger.prototype.multiply = bnMultiply;
              BigInteger.prototype.divide = bnDivide;
              BigInteger.prototype.remainder = bnRemainder;
              BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;
              BigInteger.prototype.modPow = bnModPow;
              BigInteger.prototype.modInverse = bnModInverse;
              BigInteger.prototype.pow = bnPow;
              BigInteger.prototype.gcd = bnGCD;
              BigInteger.prototype.isProbablePrime = bnIsProbablePrime; // BigInteger interfaces not implemented in jsbn:
              // BigInteger(int signum, byte[] magnitude)
              // double doubleValue()
              // float floatValue()
              // int hashCode()
              // long longValue()
              // static BigInteger valueOf(long val)
              /// METEOR WRAPPER

              return BigInteger;
            }();
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          }, "srp.js": function (_require2) {

            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                                  //
            // packages/srp/srp.js                                                                                              //
            //                                                                                                                  //
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            var _interopRequireDefault = _require2("@babel/runtime/helpers/interopRequireDefault");

            var _objectSpread2 = _interopRequireDefault(_require2("@babel/runtime/helpers/objectSpread"));

            // This package contains just enough of the original SRP code to
            // support the backwards-compatibility upgrade path.
            //
            // An SRP (and possibly also accounts-srp) package should eventually be
            // available in Atmosphere so that users can continue to use SRP if they
            // want to.
            SRP = {};
            /**
             * Generate a new SRP verifier. Password is the plaintext password.
             *
             * options is optional and can include:
             * - identity: String. The SRP username to user. Mostly this is passed
             *   in for testing.  Random UUID if not provided.
             * - hashedIdentityAndPassword: combined identity and password, already hashed, for the SRP to bcrypt upgrade path.
             * - salt: String. A salt to use.  Mostly this is passed in for
             *   testing.  Random UUID if not provided.
             * - SRP parameters (see _defaults and paramsFromOptions below)
             */

            SRP.generateVerifier = function (password, options) {
              var params = paramsFromOptions(options);
              var salt = options && options.salt || Random.secret();
              var identity;
              var hashedIdentityAndPassword = options && options.hashedIdentityAndPassword;

              if (!hashedIdentityAndPassword) {
                identity = options && options.identity || Random.secret();
                hashedIdentityAndPassword = params.hash(identity + ":" + password);
              }

              var x = params.hash(salt + hashedIdentityAndPassword);
              var xi = new BigInteger(x, 16);
              var v = params.g.modPow(xi, params.N);
              return {
                identity: identity,
                salt: salt,
                verifier: v.toString(16)
              };
            }; // For use with check().


            SRP.matchVerifier = {
              identity: String,
              salt: String,
              verifier: String
            };
            /**
             * Default parameter values for SRP.
             *
             */

            var _defaults = {
              hash: function (x) {
                return SHA256(x).toLowerCase();
              },
              N: new BigInteger("EEAF0AB9ADB38DD69C33F80AFA8FC5E86072618775FF3C0B9EA2314C9C256576D674DF7496EA81D3383B4813D692C6E0E0D5D8E250B98BE48E495C1D6089DAD15DC7D7B46154D6B6CE8EF4AD69B15D4982559B297BCF1885C529F566660E57EC68EDBC3C05726CC02FD4CBF4976EAA9AFD5138FE8376435B9FC61D2FC0EB06E3", 16),
              g: new BigInteger("2")
            };
            _defaults.k = new BigInteger(_defaults.hash(_defaults.N.toString(16) + _defaults.g.toString(16)), 16);
            /**
             * Process an options hash to create SRP parameters.
             *
             * Options can include:
             * - hash: Function. Defaults to SHA256.
             * - N: String or BigInteger. Defaults to 1024 bit value from RFC 5054
             * - g: String or BigInteger. Defaults to 2.
             * - k: String or BigInteger. Defaults to hash(N, g)
             */

            var paramsFromOptions = function (options) {
              if (!options) // fast path
                return _defaults;
              var ret = (0, _objectSpread2.default)({}, _defaults);
              ['N', 'g', 'k'].forEach(function (p) {
                if (options[p]) {
                  if (typeof options[p] === "string") ret[p] = new BigInteger(options[p], 16);else if (options[p] instanceof BigInteger) ret[p] = options[p];else throw new Error("Invalid parameter: " + p);
                }
              });
              if (options.hash) ret.hash = function (x) {
                return options.hash(x).toLowerCase();
              };

              if (!options.k && (options.N || options.g || options.hash)) {
                ret.k = ret.hash(ret.N.toString(16) + ret.g.toString(16));
              }

              return ret;
            };
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  _require("/node_modules/meteor/srp/biginteger.js");
  _require("/node_modules/meteor/srp/srp.js");

  /* Exports */
  Package._define("srp", {
    SRP: SRP
  });
})();//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var Accounts = Package['accounts-base'].Accounts;
  var SRP = Package.srp.SRP;
  var SHA256 = Package.sha.SHA256;
  var EJSON = Package.ejson.EJSON;
  var DDP = Package['ddp-client'].DDP;
  var check = Package.check.check;
  var Match = Package.check.Match;
  var _ = Package.underscore._;
  var meteorInstall = Package.modules.meteorInstall;
  var meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
  var Promise = Package.promise.Promise;
  var Symbol = Package['ecmascript-runtime-client'].Symbol;
  var Map = Package['ecmascript-runtime-client'].Map;
  var Set = Package['ecmascript-runtime-client'].Set;

  var _require = meteorInstall({ "node_modules": { "meteor": { "accounts-password": { "password_client.js": function () {

            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //                                                                                                            //
            // packages/accounts-password/password_client.js                                                              //
            //                                                                                                            //
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //
            // Used in the various functions below to handle errors consistently
            function reportError(error, callback) {
              if (callback) {
                callback(error);
              } else {
                throw error;
              }
            }

            ; // Attempt to log in with a password.
            //
            // @param selector {String|Object} One of the following:
            //   - {username: (username)}
            //   - {email: (email)}
            //   - a string which may be a username or email, depending on whether
            //     it contains "@".
            // @param password {String}
            // @param callback {Function(error|undefined)}

            /**
             * @summary Log the user in with a password.
             * @locus Client
             * @param {Object | String} user
             *   Either a string interpreted as a username or an email; or an object with a
             *   single key: `email`, `username` or `id`. Username or email match in a case
             *   insensitive manner.
             * @param {String} password The user's password.
             * @param {Function} [callback] Optional callback.
             *   Called with no arguments on success, or with a single `Error` argument
             *   on failure.
             * @importFromPackage meteor
             */

            Meteor.loginWithPassword = function (selector, password, callback) {
              if (typeof selector === 'string') if (selector.indexOf('@') === -1) selector = {
                username: selector
              };else selector = {
                email: selector
              };
              Accounts.callLoginMethod({
                methodArguments: [{
                  user: selector,
                  password: Accounts._hashPassword(password)
                }],
                userCallback: function (error, result) {
                  if (error && error.error === 400 && error.reason === 'old password format') {
                    // The "reason" string should match the error thrown in the
                    // password login handler in password_server.js.
                    // XXX COMPAT WITH 0.8.1.3
                    // If this user's last login was with a previous version of
                    // Meteor that used SRP, then the server throws this error to
                    // indicate that we should try again. The error includes the
                    // user's SRP identity. We provide a value derived from the
                    // identity and the password to prove to the server that we know
                    // the password without requiring a full SRP flow, as well as
                    // SHA256(password), which the server bcrypts and stores in
                    // place of the old SRP information for this user.
                    srpUpgradePath({
                      upgradeError: error,
                      userSelector: selector,
                      plaintextPassword: password
                    }, callback);
                  } else if (error) {
                    reportError(error, callback);
                  } else {
                    callback && callback();
                  }
                }
              });
            };

            Accounts._hashPassword = function (password) {
              return {
                digest: SHA256(password),
                algorithm: "sha-256"
              };
            }; // XXX COMPAT WITH 0.8.1.3
            // The server requested an upgrade from the old SRP password format,
            // so supply the needed SRP identity to login. Options:
            //   - upgradeError: the error object that the server returned to tell
            //     us to upgrade from SRP to bcrypt.
            //   - userSelector: selector to retrieve the user object
            //   - plaintextPassword: the password as a string


            var srpUpgradePath = function (options, callback) {
              var details;

              try {
                details = EJSON.parse(options.upgradeError.details);
              } catch (e) {}

              if (!(details && details.format === 'srp')) {
                reportError(new Meteor.Error(400, "Password is old. Please reset your " + "password."), callback);
              } else {
                Accounts.callLoginMethod({
                  methodArguments: [{
                    user: options.userSelector,
                    srp: SHA256(details.identity + ":" + options.plaintextPassword),
                    password: Accounts._hashPassword(options.plaintextPassword)
                  }],
                  userCallback: callback
                });
              }
            }; // Attempt to log in as a new user.

            /**
             * @summary Create a new user.
             * @locus Anywhere
             * @param {Object} options
             * @param {String} options.username A unique name for this user.
             * @param {String} options.email The user's email address.
             * @param {String} options.password The user's password. This is __not__ sent in plain text over the wire.
             * @param {Object} options.profile The user's profile, typically including the `name` field.
             * @param {Function} [callback] Client only, optional callback. Called with no arguments on success, or with a single `Error` argument on failure.
             * @importFromPackage accounts-base
             */

            Accounts.createUser = function (options, callback) {
              options = _.clone(options); // we'll be modifying options

              if (typeof options.password !== 'string') throw new Error("options.password must be a string");

              if (!options.password) {
                return reportError(new Meteor.Error(400, "Password may not be empty"), callback);
              } // Replace password with the hashed password.


              options.password = Accounts._hashPassword(options.password);
              Accounts.callLoginMethod({
                methodName: 'createUser',
                methodArguments: [options],
                userCallback: callback
              });
            }; // Change password. Must be logged in.
            //
            // @param oldPassword {String|null} By default servers no longer allow
            //   changing password without the old password, but they could so we
            //   support passing no password to the server and letting it decide.
            // @param newPassword {String}
            // @param callback {Function(error|undefined)}

            /**
             * @summary Change the current user's password. Must be logged in.
             * @locus Client
             * @param {String} oldPassword The user's current password. This is __not__ sent in plain text over the wire.
             * @param {String} newPassword A new password for the user. This is __not__ sent in plain text over the wire.
             * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.
             * @importFromPackage accounts-base
             */

            Accounts.changePassword = function (oldPassword, newPassword, callback) {
              if (!Meteor.user()) {
                return reportError(new Error("Must be logged in to change password."), callback);
              }

              check(newPassword, String);

              if (!newPassword) {
                return reportError(new Meteor.Error(400, "Password may not be empty"), callback);
              }

              Accounts.connection.apply('changePassword', [oldPassword ? Accounts._hashPassword(oldPassword) : null, Accounts._hashPassword(newPassword)], function (error, result) {
                if (error || !result) {
                  if (error && error.error === 400 && error.reason === 'old password format') {
                    // XXX COMPAT WITH 0.8.1.3
                    // The server is telling us to upgrade from SRP to bcrypt, as
                    // in Meteor.loginWithPassword.
                    srpUpgradePath({
                      upgradeError: error,
                      userSelector: {
                        id: Meteor.userId()
                      },
                      plaintextPassword: oldPassword
                    }, function (err) {
                      if (err) {
                        reportError(err, callback);
                      } else {
                        // Now that we've successfully migrated from srp to
                        // bcrypt, try changing the password again.
                        Accounts.changePassword(oldPassword, newPassword, callback);
                      }
                    });
                  } else {
                    // A normal error, not an error telling us to upgrade to bcrypt
                    reportError(error || new Error("No result from changePassword."), callback);
                  }
                } else {
                  callback && callback();
                }
              });
            }; // Sends an email to a user with a link that can be used to reset
            // their password
            //
            // @param options {Object}
            //   - email: (email)
            // @param callback (optional) {Function(error|undefined)}

            /**
             * @summary Request a forgot password email.
             * @locus Client
             * @param {Object} options
             * @param {String} options.email The email address to send a password reset link.
             * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.
             * @importFromPackage accounts-base
             */

            Accounts.forgotPassword = function (options, callback) {
              if (!options.email) {
                return reportError(new Meteor.Error(400, "Must pass options.email"), callback);
              }

              if (callback) {
                Accounts.connection.call("forgotPassword", options, callback);
              } else {
                Accounts.connection.call("forgotPassword", options);
              }
            }; // Resets a password based on a token originally created by
            // Accounts.forgotPassword, and then logs in the matching user.
            //
            // @param token {String}
            // @param newPassword {String}
            // @param callback (optional) {Function(error|undefined)}

            /**
             * @summary Reset the password for a user using a token received in email. Logs the user in afterwards.
             * @locus Client
             * @param {String} token The token retrieved from the reset password URL.
             * @param {String} newPassword A new password for the user. This is __not__ sent in plain text over the wire.
             * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.
             * @importFromPackage accounts-base
             */

            Accounts.resetPassword = function (token, newPassword, callback) {
              check(token, String);
              check(newPassword, String);

              if (!newPassword) {
                return reportError(new Meteor.Error(400, "Password may not be empty"), callback);
              }

              Accounts.callLoginMethod({
                methodName: 'resetPassword',
                methodArguments: [token, Accounts._hashPassword(newPassword)],
                userCallback: callback
              });
            }; // Verifies a user's email address based on a token originally
            // created by Accounts.sendVerificationEmail
            //
            // @param token {String}
            // @param callback (optional) {Function(error|undefined)}

            /**
             * @summary Marks the user's email address as verified. Logs the user in afterwards.
             * @locus Client
             * @param {String} token The token retrieved from the verification URL.
             * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.
             * @importFromPackage accounts-base
             */

            Accounts.verifyEmail = function (token, callback) {
              if (!token) {
                return reportError(new Meteor.Error(400, "Need to pass token"), callback);
              }

              Accounts.callLoginMethod({
                methodName: 'verifyEmail',
                methodArguments: [token],
                userCallback: callback
              });
            };
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          } } } } }, {
    "extensions": [".js", ".json"]
  });
  _require("/node_modules/meteor/accounts-password/password_client.js");

  /* Exports */
  Package._define("accounts-password");
})();/* Imports for global scope */

ReactMeteorData = Package['react-meteor-data'].ReactMeteorData;
Accounts = Package['accounts-base'].Accounts;//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

  /* Imports */
  var Meteor = Package.meteor.Meteor;
  var global = Package.meteor.global;
  var meteorEnv = Package.meteor.meteorEnv;
  var Accounts = Package['accounts-base'].Accounts;
  var Mongo = Package.mongo.Mongo;

  /* Package-scope variables */
  var ServiceConfiguration;

  (function () {

    ////////////////////////////////////////////////////////////////////////////////////////
    //                                                                                    //
    // packages/service-configuration/service_configuration_common.js                     //
    //                                                                                    //
    ////////////////////////////////////////////////////////////////////////////////////////
    //
    if (typeof ServiceConfiguration === 'undefined') {
      ServiceConfiguration = {};
    }

    // Table containing documents with configuration options for each
    // login service
    ServiceConfiguration.configurations = new Mongo.Collection("meteor_accounts_loginServiceConfiguration", {
      _preventAutopublish: true,
      connection: Meteor.isClient ? Accounts.connection : Meteor.connection
    });
    // Leave this collection open in insecure mode. In theory, someone could
    // hijack your oauth connect requests to a different endpoint or appId,
    // but you did ask for 'insecure'. The advantage is that it is much
    // easier to write a configuration wizard that works only in insecure
    // mode.


    // Thrown when trying to use a login service which is not configured
    ServiceConfiguration.ConfigError = function (serviceName) {
      if (Meteor.isClient && !Accounts.loginServicesConfigured()) {
        this.message = "Login service configuration not yet loaded";
      } else if (serviceName) {
        this.message = "Service " + serviceName + " not configured";
      } else {
        this.message = "Service not configured";
      }
    };
    ServiceConfiguration.ConfigError.prototype = new Error();
    ServiceConfiguration.ConfigError.prototype.name = 'ServiceConfiguration.ConfigError';

    ////////////////////////////////////////////////////////////////////////////////////////
  }).call(this);

  /* Exports */
  Package._define("service-configuration", {
    ServiceConfiguration: ServiceConfiguration
  });
})();// Disable hot-code-push
if (Package.reload) {
  Package.reload.Reload._onMigrate(function () {
    return [false];
  });
}

/***/ })
/******/ ]);
});
//# sourceMappingURL=static.d4f97a63.js.map